<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>roundcrisis.Find&lt;Solution&gt;()</title>
<link>http://roundcrisis.com</link>
<description/>
<pubDate>Tue, 31 Dec 2013 17:18:50 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>http://roundcrisis.com</wp:base_blog_url>
<wp:wp_author>
  <wp:author_login>roundcrisis</wp:author_login>
  <wp:author_email>roundcrisis@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[roundcrisis]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:wp_author>
<wp:category>
  <wp:term_id>2427</wp:term_id>
  <wp:category_nicename>net</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[.net]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>143514</wp:term_id>
  <wp:category_nicename>activerecord</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ActiveRecord]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>29691</wp:term_id>
  <wp:category_nicename>adobe</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[adobe]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>11287</wp:term_id>
  <wp:category_nicename>agile</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[agile]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>957715</wp:term_id>
  <wp:category_nicename>altnet</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[alt.net]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>641922</wp:term_id>
  <wp:category_nicename>android</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[android]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>14419904</wp:term_id>
  <wp:category_nicename>ayende</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ayende]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>75400</wp:term_id>
  <wp:category_nicename>bdd</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[bdd]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2185</wp:term_id>
  <wp:category_nicename>best-practices</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Best Practices]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>91</wp:term_id>
  <wp:category_nicename>blogging</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[blogging]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2364</wp:term_id>
  <wp:category_nicename>book</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[book]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>3328</wp:term_id>
  <wp:category_nicename>book-reviews</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[book reviews]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>12950968</wp:term_id>
  <wp:category_nicename>browser-plus</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[browser plus]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2426</wp:term_id>
  <wp:category_nicename>c</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[c#]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>53198</wp:term_id>
  <wp:category_nicename>castle</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[castle]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>65165637</wp:term_id>
  <wp:category_nicename>code_retreat</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[code_retreat]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>42290938</wp:term_id>
  <wp:category_nicename>code_shapes</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[code_shapes]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>214618</wp:term_id>
  <wp:category_nicename>concurrency</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[concurrency]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>33525</wp:term_id>
  <wp:category_nicename>conference</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[conference]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1786871</wp:term_id>
  <wp:category_nicename>couchdb</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[couchDB]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>27812368</wp:term_id>
  <wp:category_nicename>cqrs</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[cqrs]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>23255</wp:term_id>
  <wp:category_nicename>ddd</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ddd]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>506570</wp:term_id>
  <wp:category_nicename>dlr</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[dlr]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>40472</wp:term_id>
  <wp:category_nicename>engine</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[engine]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1047186</wp:term_id>
  <wp:category_nicename>entity-framework</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Entity Framework]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>14419925</wp:term_id>
  <wp:category_nicename>events-pencil</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[events pencil]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>549598</wp:term_id>
  <wp:category_nicename>firebug</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[FireBug]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>45</wp:term_id>
  <wp:category_nicename>firefox</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[firefox]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>861462</wp:term_id>
  <wp:category_nicename>foxit</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[foxit]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>116486</wp:term_id>
  <wp:category_nicename>functional-programming</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[functional programming]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>134451</wp:term_id>
  <wp:category_nicename>gamedev</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[gamedev]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>5138359</wp:term_id>
  <wp:category_nicename>girl-geek-dinners</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Girl Geek Dinners]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>173823</wp:term_id>
  <wp:category_nicename>gwt</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[GWT]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>6344116</wp:term_id>
  <wp:category_nicename>gwt-ext</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[gwt-ext]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>6715</wp:term_id>
  <wp:category_nicename>ie</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ie]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>14419910</wp:term_id>
  <wp:category_nicename>ie-debugger</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ie debugger]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>14013</wp:term_id>
  <wp:category_nicename>iis</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[IIS]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1337457</wp:term_id>
  <wp:category_nicename>iocdi</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[IoC/Di]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1052594</wp:term_id>
  <wp:category_nicename>ironruby</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ironruby]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1017</wp:term_id>
  <wp:category_nicename>java</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[java]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>457</wp:term_id>
  <wp:category_nicename>javascript</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[javascript]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>203308</wp:term_id>
  <wp:category_nicename>jquery</wp:category_nicename>
  <wp:category_parent>javascript</wp:category_parent>
  <wp:cat_name><![CDATA[jQuery]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>610</wp:term_id>
  <wp:category_nicename>linux</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Linux]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>11468042</wp:term_id>
  <wp:category_nicename>mobile-dev</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[mobile dev]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>438515</wp:term_id>
  <wp:category_nicename>mocking</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[mocking]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>14247</wp:term_id>
  <wp:category_nicename>mono</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[mono]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>54693742</wp:term_id>
  <wp:category_nicename>mono-for-android</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[mono for android]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>60070</wp:term_id>
  <wp:category_nicename>monorail</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[monorail]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4636810</wp:term_id>
  <wp:category_nicename>moq</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[moq]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2859806</wp:term_id>
  <wp:category_nicename>net4</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[net4]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>103676</wp:term_id>
  <wp:category_nicename>nhibernate</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[NHibernate]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2530087</wp:term_id>
  <wp:category_nicename>nvelocity</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[NVelocity]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>907891</wp:term_id>
  <wp:category_nicename>opencoffee</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[openCoffee]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>14650</wp:term_id>
  <wp:category_nicename>oss</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[OSS]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>47759</wp:term_id>
  <wp:category_nicename>pdf</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[pdf]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>458</wp:term_id>
  <wp:category_nicename>php</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[php]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>156083</wp:term_id>
  <wp:category_nicename>phyton</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[phyton]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>5025</wp:term_id>
  <wp:category_nicename>png</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[png]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1142</wp:term_id>
  <wp:category_nicename>podcast</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[podcast]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1207</wp:term_id>
  <wp:category_nicename>principles</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[principles]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2704</wp:term_id>
  <wp:category_nicename>productivity</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[productivity]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>35912908</wp:term_id>
  <wp:category_nicename>ravendb</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ravenDB]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4872</wp:term_id>
  <wp:category_nicename>ruby</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ruby]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>566122</wp:term_id>
  <wp:category_nicename>serialization</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[serialization]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>984139</wp:term_id>
  <wp:category_nicename>silverlight</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[silverlight]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>40906</wp:term_id>
  <wp:category_nicename>speed</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[speed]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>6407</wp:term_id>
  <wp:category_nicename>sql-server</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Sql Server]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>106112</wp:term_id>
  <wp:category_nicename>ssis</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[SSIS]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>739</wp:term_id>
  <wp:category_nicename>talk</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[talk]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>17070172</wp:term_id>
  <wp:category_nicename>technical-talks</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[technical talks]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>14419916</wp:term_id>
  <wp:category_nicename>themeroller</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[themeRoller]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>12161561</wp:term_id>
  <wp:category_nicename>time-picker</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[time picker]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>27940</wp:term_id>
  <wp:category_nicename>ui</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[UI]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>11468139</wp:term_id>
  <wp:category_nicename>umbrella-project</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[umbrella project]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>3882</wp:term_id>
  <wp:category_nicename>unit-testing</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[unit-testing]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>14419926</wp:term_id>
  <wp:category_nicename>urlhelper</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[urlhelper]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>29947</wp:term_id>
  <wp:category_nicename>wall</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[WALL]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2260</wp:term_id>
  <wp:category_nicename>web-development</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[web-development]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>214484</wp:term_id>
  <wp:category_nicename>web-server</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[web-server]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>413655</wp:term_id>
  <wp:category_nicename>windsor</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[windsor]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>10733400</wp:term_id>
  <wp:category_nicename>wurfl</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[WURFL]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>299868</wp:term_id>
  <wp:category_nicename>xna</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[xna]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>905317</wp:term_id>
  <wp:category_nicename>extjs</wp:category_nicename>
  <wp:category_parent>javascript</wp:category_parent>
  <wp:cat_name><![CDATA[ExtJs]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>137105219</wp:term_id>
  <wp:tag_slug>mono-for-android-permissions-android</wp:tag_slug>
  <wp:tag_name><![CDATA["mono for android" "permissions" "android"]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2427</wp:term_id>
  <wp:tag_slug>net</wp:tag_slug>
  <wp:tag_name><![CDATA[.net]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>59447</wp:term_id>
  <wp:tag_slug>2d</wp:tag_slug>
  <wp:tag_name><![CDATA[2d]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>90428191</wp:term_id>
  <wp:tag_slug>acceleration-force-mass</wp:tag_slug>
  <wp:tag_name><![CDATA[acceleration force mass]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>15353856</wp:term_id>
  <wp:tag_slug>ada-lovelace-day</wp:tag_slug>
  <wp:tag_name><![CDATA[ada lovelace Day]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>46095</wp:term_id>
  <wp:tag_slug>aggregate</wp:tag_slug>
  <wp:tag_name><![CDATA[aggregate]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11287</wp:term_id>
  <wp:tag_slug>agile</wp:tag_slug>
  <wp:tag_name><![CDATA[agile]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>355765</wp:term_id>
  <wp:tag_slug>ald</wp:tag_slug>
  <wp:tag_name><![CDATA[ALD]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17780385</wp:term_id>
  <wp:tag_slug>ald09</wp:tag_slug>
  <wp:tag_name><![CDATA[ALD09]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>15857100</wp:term_id>
  <wp:tag_slug>alt-net</wp:tag_slug>
  <wp:tag_name><![CDATA[alt-net]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>641922</wp:term_id>
  <wp:tag_slug>android</wp:tag_slug>
  <wp:tag_name><![CDATA[android]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>494176</wp:term_id>
  <wp:tag_slug>annual-report</wp:tag_slug>
  <wp:tag_name><![CDATA[annual report]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>16749</wp:term_id>
  <wp:tag_slug>aop</wp:tag_slug>
  <wp:tag_name><![CDATA[AOP]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2097482</wp:term_id>
  <wp:tag_slug>aspnet-mvc</wp:tag_slug>
  <wp:tag_name><![CDATA[asp.net MVC]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4229</wp:term_id>
  <wp:tag_slug>barcamp</wp:tag_slug>
  <wp:tag_name><![CDATA[barcamp]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9471</wp:term_id>
  <wp:tag_slug>belfast</wp:tag_slug>
  <wp:tag_name><![CDATA[belfast]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17556315</wp:term_id>
  <wp:tag_slug>blackoutireland</wp:tag_slug>
  <wp:tag_name><![CDATA[blackoutIreland]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2364</wp:term_id>
  <wp:tag_slug>book</wp:tag_slug>
  <wp:tag_name><![CDATA[book]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7215</wp:term_id>
  <wp:tag_slug>book-review</wp:tag_slug>
  <wp:tag_name><![CDATA[book-review]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>178</wp:term_id>
  <wp:tag_slug>books</wp:tag_slug>
  <wp:tag_name><![CDATA[books]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>70136</wp:term_id>
  <wp:tag_slug>bristol</wp:tag_slug>
  <wp:tag_name><![CDATA[bristol]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1788196</wp:term_id>
  <wp:tag_slug>build-server</wp:tag_slug>
  <wp:tag_name><![CDATA[build server]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2426</wp:term_id>
  <wp:tag_slug>c</wp:tag_slug>
  <wp:tag_name><![CDATA[c#]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>81121</wp:term_id>
  <wp:tag_slug>caching</wp:tag_slug>
  <wp:tag_name><![CDATA[caching]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5605</wp:term_id>
  <wp:tag_slug>camera</wp:tag_slug>
  <wp:tag_name><![CDATA[camera]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>13949910</wp:term_id>
  <wp:tag_slug>camera-class</wp:tag_slug>
  <wp:tag_name><![CDATA[camera class]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>53198</wp:term_id>
  <wp:tag_slug>castle</wp:tag_slug>
  <wp:tag_name><![CDATA[castle]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>38412274</wp:term_id>
  <wp:tag_slug>code-contract</wp:tag_slug>
  <wp:tag_name><![CDATA[code-contract]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>65165637</wp:term_id>
  <wp:tag_slug>code_retreat</wp:tag_slug>
  <wp:tag_name><![CDATA[code_retreat]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>30048</wp:term_id>
  <wp:tag_slug>common-mistakes</wp:tag_slug>
  <wp:tag_name><![CDATA[common mistakes]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>51738493</wp:term_id>
  <wp:tag_slug>concurrentqueue</wp:tag_slug>
  <wp:tag_name><![CDATA[concurrentqueue]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>112125588</wp:term_id>
  <wp:tag_slug>content-processor</wp:tag_slug>
  <wp:tag_name><![CDATA[content processor]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>27812368</wp:term_id>
  <wp:tag_slug>cqrs</wp:tag_slug>
  <wp:tag_name><![CDATA[cqrs]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>48746009</wp:term_id>
  <wp:tag_slug>cqrses</wp:tag_slug>
  <wp:tag_name><![CDATA[cqrs/es]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>23255</wp:term_id>
  <wp:tag_slug>ddd</wp:tag_slug>
  <wp:tag_name><![CDATA[ddd]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>19843508</wp:term_id>
  <wp:tag_slug>dddscot</wp:tag_slug>
  <wp:tag_name><![CDATA[dddScot]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>86425978</wp:term_id>
  <wp:tag_slug>dddsw</wp:tag_slug>
  <wp:tag_name><![CDATA[dddsw]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8915</wp:term_id>
  <wp:tag_slug>deployment</wp:tag_slug>
  <wp:tag_name><![CDATA[deployment]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>30880731</wp:term_id>
  <wp:tag_slug>developerdeveloperdeveloper</wp:tag_slug>
  <wp:tag_name><![CDATA[developerdeveloperdeveloper]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>780</wp:term_id>
  <wp:tag_slug>development</wp:tag_slug>
  <wp:tag_name><![CDATA[development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>130881</wp:term_id>
  <wp:tag_slug>di</wp:tag_slug>
  <wp:tag_name><![CDATA[di]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>42811735</wp:term_id>
  <wp:tag_slug>dll-assemblies-layout</wp:tag_slug>
  <wp:tag_name><![CDATA[dll assemblies layout]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17535</wp:term_id>
  <wp:tag_slug>dublin</wp:tag_slug>
  <wp:tag_name><![CDATA[dublin]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18466</wp:term_id>
  <wp:tag_slug>eclipse</wp:tag_slug>
  <wp:tag_name><![CDATA[eclipse]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>148881105</wp:term_id>
  <wp:tag_slug>emulator-on-x86</wp:tag_slug>
  <wp:tag_name><![CDATA[emulator on x86]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>36813474</wp:term_id>
  <wp:tag_slug>event-store</wp:tag_slug>
  <wp:tag_name><![CDATA[event store]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>924</wp:term_id>
  <wp:tag_slug>events</wp:tag_slug>
  <wp:tag_name><![CDATA[events]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>905317</wp:term_id>
  <wp:tag_slug>extjs</wp:tag_slug>
  <wp:tag_name><![CDATA[ExtJs]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6012</wp:term_id>
  <wp:tag_slug>f</wp:tag_slug>
  <wp:tag_name><![CDATA[f#]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>33564048</wp:term_id>
  <wp:tag_slug>fluentmigrator</wp:tag_slug>
  <wp:tag_name><![CDATA[fluentmigrator]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>15316087</wp:term_id>
  <wp:tag_slug>fluentnhibernate</wp:tag_slug>
  <wp:tag_name><![CDATA[FluentNhibernate]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>188921</wp:term_id>
  <wp:tag_slug>functional</wp:tag_slug>
  <wp:tag_name><![CDATA[functional]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>116486</wp:term_id>
  <wp:tag_slug>functional-programming</wp:tag_slug>
  <wp:tag_name><![CDATA[functional programming]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>38997824</wp:term_id>
  <wp:tag_slug>fuslogw</wp:tag_slug>
  <wp:tag_name><![CDATA[fuslogw]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>324119</wp:term_id>
  <wp:tag_slug>game-engines</wp:tag_slug>
  <wp:tag_name><![CDATA[game engines]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>134451</wp:term_id>
  <wp:tag_slug>gamedev</wp:tag_slug>
  <wp:tag_name><![CDATA[gamedev]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>105178599</wp:term_id>
  <wp:tag_slug>gamedev-xna-sprite-xna-profiles</wp:tag_slug>
  <wp:tag_name><![CDATA[gamedev XNA sprite Xna-profiles]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>27827943</wp:term_id>
  <wp:tag_slug>games-fleadh</wp:tag_slug>
  <wp:tag_name><![CDATA[games fleadh]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>155050557</wp:term_id>
  <wp:tag_slug>gaming-reimagined</wp:tag_slug>
  <wp:tag_name><![CDATA[gaming reimagined]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>12350534</wp:term_id>
  <wp:tag_slug>ganedev</wp:tag_slug>
  <wp:tag_name><![CDATA[ganedev]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18369</wp:term_id>
  <wp:tag_slug>generics</wp:tag_slug>
  <wp:tag_name><![CDATA[generics]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>34798</wp:term_id>
  <wp:tag_slug>geneva</wp:tag_slug>
  <wp:tag_name><![CDATA[Geneva]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2770977</wp:term_id>
  <wp:tag_slug>ggd</wp:tag_slug>
  <wp:tag_name><![CDATA[GGD]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>209196</wp:term_id>
  <wp:tag_slug>git</wp:tag_slug>
  <wp:tag_name><![CDATA[git]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>173823</wp:term_id>
  <wp:tag_slug>gwt</wp:tag_slug>
  <wp:tag_name><![CDATA[GWT]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6344116</wp:term_id>
  <wp:tag_slug>gwt-ext</wp:tag_slug>
  <wp:tag_name><![CDATA[gwt-ext]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1121822</wp:term_id>
  <wp:tag_slug>gxt</wp:tag_slug>
  <wp:tag_name><![CDATA[GXT]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>16981</wp:term_id>
  <wp:tag_slug>hack</wp:tag_slug>
  <wp:tag_name><![CDATA[hack]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1549335</wp:term_id>
  <wp:tag_slug>ice-cream-sandwich</wp:tag_slug>
  <wp:tag_name><![CDATA[Ice Cream sandwich]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>719307</wp:term_id>
  <wp:tag_slug>iis7</wp:tag_slug>
  <wp:tag_name><![CDATA[iis7]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>43229</wp:term_id>
  <wp:tag_slug>ioc</wp:tag_slug>
  <wp:tag_name><![CDATA[ioc]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>35110598</wp:term_id>
  <wp:tag_slug>ioscd</wp:tag_slug>
  <wp:tag_name><![CDATA[IOSCD]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1052594</wp:term_id>
  <wp:tag_slug>ironruby</wp:tag_slug>
  <wp:tag_name><![CDATA[ironruby]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1017</wp:term_id>
  <wp:tag_slug>java</wp:tag_slug>
  <wp:tag_name><![CDATA[java]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>333027</wp:term_id>
  <wp:tag_slug>jekyll</wp:tag_slug>
  <wp:tag_name><![CDATA[jekyll]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>203308</wp:term_id>
  <wp:tag_slug>jquery</wp:tag_slug>
  <wp:tag_name><![CDATA[jQuery]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>610</wp:term_id>
  <wp:tag_slug>linux</wp:tag_slug>
  <wp:tag_name><![CDATA[Linux]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>44127647</wp:term_id>
  <wp:tag_slug>manos_de_monos-web-web-development</wp:tag_slug>
  <wp:tag_name><![CDATA[manos_de_monos web web-development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>27138</wp:term_id>
  <wp:tag_slug>meetup</wp:tag_slug>
  <wp:tag_name><![CDATA[meetup]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>64667</wp:term_id>
  <wp:tag_slug>meetups</wp:tag_slug>
  <wp:tag_name><![CDATA[meetups]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6269</wp:term_id>
  <wp:tag_slug>mercury</wp:tag_slug>
  <wp:tag_name><![CDATA[mercury]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>155377</wp:term_id>
  <wp:tag_slug>mock</wp:tag_slug>
  <wp:tag_name><![CDATA[mock]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>55257</wp:term_id>
  <wp:tag_slug>modelling</wp:tag_slug>
  <wp:tag_name><![CDATA[Modelling]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>54693742</wp:term_id>
  <wp:tag_slug>mono-for-android</wp:tag_slug>
  <wp:tag_name><![CDATA[mono for android]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10485041</wp:term_id>
  <wp:tag_slug>monogame</wp:tag_slug>
  <wp:tag_name><![CDATA[monogame]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>60070</wp:term_id>
  <wp:tag_slug>monorail</wp:tag_slug>
  <wp:tag_name><![CDATA[monorail]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4636810</wp:term_id>
  <wp:tag_slug>moq</wp:tag_slug>
  <wp:tag_name><![CDATA[moq]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>14419415</wp:term_id>
  <wp:tag_slug>moving_blog</wp:tag_slug>
  <wp:tag_name><![CDATA[moving_blog]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>14459297</wp:term_id>
  <wp:tag_slug>new_project</wp:tag_slug>
  <wp:tag_name><![CDATA[new_project]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>103676</wp:term_id>
  <wp:tag_slug>nhibernate</wp:tag_slug>
  <wp:tag_name><![CDATA[NHibernate]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2621974</wp:term_id>
  <wp:tag_slug>ninject</wp:tag_slug>
  <wp:tag_name><![CDATA[ninject]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>22319505</wp:term_id>
  <wp:tag_slug>nosql</wp:tag_slug>
  <wp:tag_name><![CDATA[nosql]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2530087</wp:term_id>
  <wp:tag_slug>nvelocity</wp:tag_slug>
  <wp:tag_name><![CDATA[NVelocity]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9778</wp:term_id>
  <wp:tag_slug>observer</wp:tag_slug>
  <wp:tag_name><![CDATA[Observer]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>25</wp:term_id>
  <wp:tag_slug>open-source</wp:tag_slug>
  <wp:tag_name><![CDATA[open source]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6203473</wp:term_id>
  <wp:tag_slug>open-source-directory</wp:tag_slug>
  <wp:tag_name><![CDATA[open source directory]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>14650</wp:term_id>
  <wp:tag_slug>oss</wp:tag_slug>
  <wp:tag_name><![CDATA[OSS]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1484609</wp:term_id>
  <wp:tag_slug>pair-programming</wp:tag_slug>
  <wp:tag_name><![CDATA[pair-programming]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>361981</wp:term_id>
  <wp:tag_slug>particle</wp:tag_slug>
  <wp:tag_name><![CDATA[particle]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5166629</wp:term_id>
  <wp:tag_slug>particle-engine</wp:tag_slug>
  <wp:tag_name><![CDATA[particle engine]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1092825</wp:term_id>
  <wp:tag_slug>pex</wp:tag_slug>
  <wp:tag_name><![CDATA[pex]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>112125590</wp:term_id>
  <wp:tag_slug>photoshop-content-processor</wp:tag_slug>
  <wp:tag_name><![CDATA[photoshop content processor]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9402</wp:term_id>
  <wp:tag_slug>presentation</wp:tag_slug>
  <wp:tag_name><![CDATA[presentation]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>196</wp:term_id>
  <wp:tag_slug>programming</wp:tag_slug>
  <wp:tag_name><![CDATA[programming]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>31420067</wp:term_id>
  <wp:tag_slug>push-on-green</wp:tag_slug>
  <wp:tag_name><![CDATA[push-on-green]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>35912908</wp:term_id>
  <wp:tag_slug>ravendb</wp:tag_slug>
  <wp:tag_name><![CDATA[ravenDB]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1473</wp:term_id>
  <wp:tag_slug>reading</wp:tag_slug>
  <wp:tag_name><![CDATA[reading]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8408</wp:term_id>
  <wp:tag_slug>reflection</wp:tag_slug>
  <wp:tag_name><![CDATA[reflection]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4872</wp:term_id>
  <wp:tag_slug>ruby</wp:tag_slug>
  <wp:tag_name><![CDATA[ruby]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>312256</wp:term_id>
  <wp:tag_slug>scala</wp:tag_slug>
  <wp:tag_name><![CDATA[scala]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>101807</wp:term_id>
  <wp:tag_slug>scm</wp:tag_slug>
  <wp:tag_name><![CDATA[scm]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>12260</wp:term_id>
  <wp:tag_slug>scotland</wp:tag_slug>
  <wp:tag_name><![CDATA[Scotland]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11163209</wp:term_id>
  <wp:tag_slug>scrm</wp:tag_slug>
  <wp:tag_name><![CDATA[scrm]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>42962877</wp:term_id>
  <wp:tag_slug>serialization-net</wp:tag_slug>
  <wp:tag_name><![CDATA[serialization .net]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5605611</wp:term_id>
  <wp:tag_slug>setters</wp:tag_slug>
  <wp:tag_name><![CDATA[setters]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2301</wp:term_id>
  <wp:tag_slug>software-development</wp:tag_slug>
  <wp:tag_name><![CDATA[software-development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>514970</wp:term_id>
  <wp:tag_slug>srp</wp:tag_slug>
  <wp:tag_name><![CDATA[SRP]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>29001906</wp:term_id>
  <wp:tag_slug>starter_sts</wp:tag_slug>
  <wp:tag_name><![CDATA[starter_sts]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>31017147</wp:term_id>
  <wp:tag_slug>storyq</wp:tag_slug>
  <wp:tag_name><![CDATA[StoryQ]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>113509</wp:term_id>
  <wp:tag_slug>storyteller</wp:tag_slug>
  <wp:tag_name><![CDATA[StoryTeller]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>739</wp:term_id>
  <wp:tag_slug>talk</wp:tag_slug>
  <wp:tag_name><![CDATA[talk]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3952442</wp:term_id>
  <wp:tag_slug>teamcity</wp:tag_slug>
  <wp:tag_name><![CDATA[teamcity]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>320368</wp:term_id>
  <wp:tag_slug>texture</wp:tag_slug>
  <wp:tag_name><![CDATA[texture]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>22353</wp:term_id>
  <wp:tag_slug>tool</wp:tag_slug>
  <wp:tag_name><![CDATA[tool]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1981</wp:term_id>
  <wp:tag_slug>tools</wp:tag_slug>
  <wp:tag_name><![CDATA[tools]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1056304</wp:term_id>
  <wp:tag_slug>transalation</wp:tag_slug>
  <wp:tag_name><![CDATA[transalation]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>255</wp:term_id>
  <wp:tag_slug>ubuntu</wp:tag_slug>
  <wp:tag_name><![CDATA[ubuntu]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>55151331</wp:term_id>
  <wp:tag_slug>udi_dahan</wp:tag_slug>
  <wp:tag_name><![CDATA[udi_dahan]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8199</wp:term_id>
  <wp:tag_slug>uk</wp:tag_slug>
  <wp:tag_name><![CDATA[uk]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3882</wp:term_id>
  <wp:tag_slug>unit-testing</wp:tag_slug>
  <wp:tag_name><![CDATA[unit-testing]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>42496849</wp:term_id>
  <wp:tag_slug>unit-testing-coverage-mocking</wp:tag_slug>
  <wp:tag_name><![CDATA[unit-testing coverage mocking]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2260</wp:term_id>
  <wp:tag_slug>web-development</wp:tag_slug>
  <wp:tag_name><![CDATA[web-development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>160646</wp:term_id>
  <wp:tag_slug>webby</wp:tag_slug>
  <wp:tag_name><![CDATA[webby]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17001</wp:term_id>
  <wp:tag_slug>wif</wp:tag_slug>
  <wp:tag_name><![CDATA[WIF]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>25069903</wp:term_id>
  <wp:tag_slug>windows-phone-7</wp:tag_slug>
  <wp:tag_name><![CDATA[windows phone 7]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>33</wp:term_id>
  <wp:tag_slug>wordpress</wp:tag_slug>
  <wp:tag_name><![CDATA[wordpress]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>57199675</wp:term_id>
  <wp:tag_slug>xamarin</wp:tag_slug>
  <wp:tag_name><![CDATA[xamarin]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>148881100</wp:term_id>
  <wp:tag_slug>xamarin-for-andoird</wp:tag_slug>
  <wp:tag_name><![CDATA[xamarin for andoird]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>155097529</wp:term_id>
  <wp:tag_slug>xamarin-for-android</wp:tag_slug>
  <wp:tag_name><![CDATA[xamarin for android]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>299868</wp:term_id>
  <wp:tag_slug>xna</wp:tag_slug>
  <wp:tag_name><![CDATA[xna]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>32712086</wp:term_id>
  <wp:tag_slug>xna-4-0</wp:tag_slug>
  <wp:tag_name><![CDATA[xna-4.0]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>805</wp:term_id>
  <wp:tag_slug>xp</wp:tag_slug>
  <wp:tag_name><![CDATA[xp]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>http://s2.wp.com/i/buttonw-com.png</url>
		<title>roundcrisis.Find&lt;Solution&gt;()</title>
		<link>http://roundcrisis.com</link>
	</image>
	<item>
  <title>test.jpg</title>
  <link>http://roundcrisis.com/?attachment_id=172</link>
  <pubDate>Sat, 21 Feb 2009 12:00:42 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2009/02/test.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://roundcrisis.files.wordpress.com/2009/02/test.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>172</wp:post_id>
  <wp:post_date>2009-02-21 12:00:42</wp:post_date>
  <wp:post_date_gmt>2009-02-21 12:00:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>testjpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2009/02/test.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_oembed_2f64e7fa1473d871a3f162eeab3c1499</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Blackout Ireland</title>
  <link>http://roundcrisis.com/2009/03/05/blackout-ireland-no-to-censorship/blackouttextire/</link>
  <pubDate>Thu, 05 Mar 2009 10:25:38 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2009/03/blackouttextire.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>187</wp:post_id>
  <wp:post_date>2009-03-05 10:25:38</wp:post_date>
  <wp:post_date_gmt>2009-03-05 10:25:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>blackouttextire</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>186</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2009/03/blackouttextire.jpg</wp:attachment_url>
</item>
<item>
  <title>application.jpg</title>
  <link>http://roundcrisis.com/2009/05/31/monorail-in-iis-7-5-windows-7/application-jpg/</link>
  <pubDate>Thu, 28 May 2009 14:50:22 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2009/05/application.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>260</wp:post_id>
  <wp:post_date>2009-05-28 14:50:22</wp:post_date>
  <wp:post_date_gmt>2009-05-28 14:50:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>application-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>259</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2009/05/application.jpg</wp:attachment_url>
</item>
<item>
  <title>Sun website login 404</title>
  <link>http://roundcrisis.com/2009/06/29/ext-gwtor-gxt-environment-from-scratch/sun404/</link>
  <pubDate>Sun, 28 Jun 2009 15:47:18 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2009/06/sun404.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>310</wp:post_id>
  <wp:post_date>2009-06-28 15:47:18</wp:post_date>
  <wp:post_date_gmt>2009-06-28 15:47:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sun404</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>309</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2009/06/sun404.jpg</wp:attachment_url>
</item>
<item>
  <title>gxt</title>
  <link>http://roundcrisis.com/2009/06/29/ext-gwtor-gxt-environment-from-scratch/gxt/</link>
  <pubDate>Mon, 29 Jun 2009 00:42:20 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2009/06/gxt.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>314</wp:post_id>
  <wp:post_date>2009-06-29 00:42:20</wp:post_date>
  <wp:post_date_gmt>2009-06-29 00:42:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gxt</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>309</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2009/06/gxt.jpg</wp:attachment_url>
</item>
<item>
  <title>Federated Metadata</title>
  <link>http://roundcrisis.com/?attachment_id=430</link>
  <pubDate>Tue, 08 Dec 2009 17:15:38 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2009/12/federatedmetadata.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>430</wp:post_id>
  <wp:post_date>2009-12-08 17:15:38</wp:post_date>
  <wp:post_date_gmt>2009-12-08 17:15:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>federatedmetadata</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>428</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2009/12/federatedmetadata.png</wp:attachment_url>
</item>
<item>
  <title>mmc-&gt;Add Snap In</title>
  <link>http://roundcrisis.com/2009/12/17/step-by-step-startersts-setup/snapin/</link>
  <pubDate>Thu, 17 Dec 2009 16:44:07 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2009/12/snapin.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>437</wp:post_id>
  <wp:post_date>2009-12-17 16:44:07</wp:post_date>
  <wp:post_date_gmt>2009-12-17 16:44:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snapin</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>436</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2009/12/snapin.png</wp:attachment_url>
</item>
<item>
  <title>Model</title>
  <link>http://roundcrisis.com/?attachment_id=453</link>
  <pubDate>Sun, 10 Jan 2010 15:04:25 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/01/domain.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>453</wp:post_id>
  <wp:post_date>2010-01-10 15:04:25</wp:post_date>
  <wp:post_date_gmt>2010-01-10 15:04:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>domain</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>451</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/01/domain.png</wp:attachment_url>
</item>
<item>
  <title>FluentMigrator Create Index</title>
  <link>http://roundcrisis.com/2010/04/02/fluentmigrator-composite-index/fm_index/</link>
  <pubDate>Thu, 01 Apr 2010 15:16:32 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/04/fm_index.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>542</wp:post_id>
  <wp:post_date>2010-04-01 15:16:32</wp:post_date>
  <wp:post_date_gmt>2010-04-01 15:16:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fm_index</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>538</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/04/fm_index.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
    <wp:meta_value><![CDATA[FluentMigrator Create Index Column Intellisense]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>FluentMigrator Create Index</title>
  <link>http://roundcrisis.com/2010/04/02/fluentmigrator-composite-index/fm_index-2/</link>
  <pubDate>Thu, 01 Apr 2010 15:18:39 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/04/fm_index1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>543</wp:post_id>
  <wp:post_date>2010-04-01 15:18:39</wp:post_date>
  <wp:post_date_gmt>2010-04-01 15:18:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fm_index-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>538</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/04/fm_index1.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
    <wp:meta_value><![CDATA[FluentMigrator Create Index Column Intellisense]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Twitter search</title>
  <link>http://roundcrisis.com/2010/05/06/more-than-a-text-editor/capture/</link>
  <pubDate>Wed, 05 May 2010 17:02:14 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/05/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>571</wp:post_id>
  <wp:post_date>2010-05-05 17:02:14</wp:post_date>
  <wp:post_date_gmt>2010-05-05 17:02:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>566</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/05/capture.png</wp:attachment_url>
</item>
<item>
  <title>Reflector Screenshot</title>
  <link>http://roundcrisis.com/2010/07/13/when-could-not-load-file-or-assembly/capture-2/</link>
  <pubDate>Tue, 13 Jul 2010 22:06:31 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/07/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Reflector Screenshot]]></excerpt:encoded>
  <wp:post_id>616</wp:post_id>
  <wp:post_date>2010-07-13 22:06:31</wp:post_date>
  <wp:post_date_gmt>2010-07-13 22:06:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>613</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/07/capture.png</wp:attachment_url>
</item>
<item>
  <title>IMAG0142.jpg</title>
  <link>http://roundcrisis.com/2010/09/12/irish-open-spaces-coding-day-iii-retrospective/imag0142-jpg/</link>
  <pubDate>Sun, 12 Sep 2010 15:40:18 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/imag0142.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>666</wp:post_id>
  <wp:post_date>2010-09-12 15:40:18</wp:post_date>
  <wp:post_date_gmt>2010-09-12 15:40:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>imag0142-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>670</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/imag0142.jpg</wp:attachment_url>
</item>
<item>
  <title>IMAG0142_thumb.jpg</title>
  <link>http://roundcrisis.com/2010/09/12/irish-open-spaces-coding-day-iii-retrospective/imag0142_thumb-jpg/</link>
  <pubDate>Sun, 12 Sep 2010 15:40:20 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/imag0142_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>667</wp:post_id>
  <wp:post_date>2010-09-12 15:40:20</wp:post_date>
  <wp:post_date_gmt>2010-09-12 15:40:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>imag0142_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>670</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/imag0142_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>IMAG0144.jpg</title>
  <link>http://roundcrisis.com/2010/09/12/irish-open-spaces-coding-day-iii-retrospective/imag0144-jpg/</link>
  <pubDate>Sun, 12 Sep 2010 15:40:23 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/imag0144.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>668</wp:post_id>
  <wp:post_date>2010-09-12 15:40:23</wp:post_date>
  <wp:post_date_gmt>2010-09-12 15:40:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>imag0144-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>670</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/imag0144.jpg</wp:attachment_url>
</item>
<item>
  <title>IMAG0144_thumb.jpg</title>
  <link>http://roundcrisis.com/2010/09/12/irish-open-spaces-coding-day-iii-retrospective/imag0144_thumb-jpg/</link>
  <pubDate>Sun, 12 Sep 2010 15:40:27 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/imag0144_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>669</wp:post_id>
  <wp:post_date>2010-09-12 15:40:27</wp:post_date>
  <wp:post_date_gmt>2010-09-12 15:40:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>imag0144_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>670</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/imag0144_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2010/09/16/reflection-create-an-instance-of-a-class-through-a-protected-method/capture-png/</link>
  <pubDate>Thu, 16 Sep 2010 09:00:56 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>672</wp:post_id>
  <wp:post_date>2010-09-16 09:00:56</wp:post_date>
  <wp:post_date_gmt>2010-09-16 09:00:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>674</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/capture.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2010/09/16/reflection-create-an-instance-of-a-class-through-a-protected-method/capture_thumb-png/</link>
  <pubDate>Thu, 16 Sep 2010 09:01:02 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/capture_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>673</wp:post_id>
  <wp:post_date>2010-09-16 09:01:02</wp:post_date>
  <wp:post_date_gmt>2010-09-16 09:01:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>674</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/capture_thumb.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/?attachment_id=685</link>
  <pubDate>Thu, 16 Sep 2010 09:13:46 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/capture1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>685</wp:post_id>
  <wp:post_date>2010-09-16 09:13:46</wp:post_date>
  <wp:post_date_gmt>2010-09-16 09:13:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>686</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/capture1.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2010/09/22/projects-organization-how-to-organize-assemblies-in-your-local-machine-to-avoid-nightmares/capture-png-3/</link>
  <pubDate>Wed, 22 Sep 2010 14:45:18 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/capture2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>691</wp:post_id>
  <wp:post_date>2010-09-22 14:45:18</wp:post_date>
  <wp:post_date_gmt>2010-09-22 14:45:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>690</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/capture2.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2010/09/22/projects-organization-how-to-organize-assemblies-in-your-local-machine-to-avoid-nightmares/capture_thumb-png-2/</link>
  <pubDate>Wed, 22 Sep 2010 14:45:21 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/capture_thumb1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>692</wp:post_id>
  <wp:post_date>2010-09-22 14:45:21</wp:post_date>
  <wp:post_date_gmt>2010-09-22 14:45:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>690</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/capture_thumb1.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/?attachment_id=699</link>
  <pubDate>Fri, 24 Sep 2010 14:25:08 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/capture3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>699</wp:post_id>
  <wp:post_date>2010-09-24 14:25:08</wp:post_date>
  <wp:post_date_gmt>2010-09-24 14:25:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>701</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/capture3.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/?attachment_id=700</link>
  <pubDate>Fri, 24 Sep 2010 14:25:11 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/09/capture_thumb2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>700</wp:post_id>
  <wp:post_date>2010-09-24 14:25:11</wp:post_date>
  <wp:post_date_gmt>2010-09-24 14:25:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>701</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/09/capture_thumb2.png</wp:attachment_url>
</item>
<item>
  <title>sq.png</title>
  <link>http://roundcrisis.com/2010/11/12/storyq-review/sq-png/</link>
  <pubDate>Fri, 12 Nov 2010 15:16:23 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/11/sq.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>725</wp:post_id>
  <wp:post_date>2010-11-12 15:16:23</wp:post_date>
  <wp:post_date_gmt>2010-11-12 15:16:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sq-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>724</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/11/sq.png</wp:attachment_url>
</item>
<item>
  <title>sq_thumb.png</title>
  <link>http://roundcrisis.com/2010/11/12/storyq-review/sq_thumb-png/</link>
  <pubDate>Fri, 12 Nov 2010 15:16:25 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2010/11/sq_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>726</wp:post_id>
  <wp:post_date>2010-11-12 15:16:25</wp:post_date>
  <wp:post_date_gmt>2010-11-12 15:16:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sq_thumb-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>724</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2010/11/sq_thumb.png</wp:attachment_url>
</item>
<item>
  <title>DDDDevision_big.jpg</title>
  <link>http://roundcrisis.com/2011/01/03/what-is-cqrs-and-other-related-terms-modelling-and-testing-part-3/ddddevision_big-jpg/</link>
  <pubDate>Mon, 03 Jan 2011 14:27:16 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/01/ddddevision_big.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>762</wp:post_id>
  <wp:post_date>2011-01-03 14:27:16</wp:post_date>
  <wp:post_date_gmt>2011-01-03 14:27:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ddddevision_big-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>761</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/01/ddddevision_big.jpg</wp:attachment_url>
</item>
<item>
  <title>DDDDevision_big_thumb.jpg</title>
  <link>http://roundcrisis.com/2011/01/03/what-is-cqrs-and-other-related-terms-modelling-and-testing-part-3/ddddevision_big_thumb-jpg/</link>
  <pubDate>Mon, 03 Jan 2011 14:27:18 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/01/ddddevision_big_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>763</wp:post_id>
  <wp:post_date>2011-01-03 14:27:18</wp:post_date>
  <wp:post_date_gmt>2011-01-03 14:27:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ddddevision_big_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>761</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/01/ddddevision_big_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-confusedsmile.png</title>
  <link>http://roundcrisis.com/2011/05/01/dddscotland-next-weekend-7th-of-may/wlemoticon-confusedsmile-png/</link>
  <pubDate>Sun, 01 May 2011 16:26:48 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/05/wlemoticon-confusedsmile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>814</wp:post_id>
  <wp:post_date>2011-05-01 16:26:48</wp:post_date>
  <wp:post_date_gmt>2011-05-01 16:26:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-confusedsmile-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>815</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/05/wlemoticon-confusedsmile.png</wp:attachment_url>
</item>
<item>
  <title>unit testing fm</title>
  <link>http://roundcrisis.com/2011/07/09/tdd-tools-for-net-developers/unit-testing-fm/</link>
  <pubDate>Wed, 11 May 2011 13:32:03 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/05/unit-testing-fm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>829</wp:post_id>
  <wp:post_date>2011-05-11 13:32:03</wp:post_date>
  <wp:post_date_gmt>2011-05-11 13:32:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>unit-testing-fm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>828</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/05/unit-testing-fm.png</wp:attachment_url>
</item>
<item>
  <title>MsBuild</title>
  <link>http://roundcrisis.com/2011/07/09/tdd-tools-for-net-developers/capture-3/</link>
  <pubDate>Fri, 08 Jul 2011 11:34:31 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/07/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>838</wp:post_id>
  <wp:post_date>2011-07-08 11:34:31</wp:post_date>
  <wp:post_date_gmt>2011-07-08 11:34:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>828</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/07/capture.png</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-08.53.12.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-08-53-12-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:05:44 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-12.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>853</wp:post_id>
  <wp:post_date>2011-09-25 12:05:44</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:05:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-08-53-12-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-12.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-08.53.12_thumb.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-08-53-12_thumb-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:05:46 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-12_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>854</wp:post_id>
  <wp:post_date>2011-09-25 12:05:46</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:05:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-08-53-12_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-12_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-08.53.22.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-08-53-22-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:05:47 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-22.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>855</wp:post_id>
  <wp:post_date>2011-09-25 12:05:47</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:05:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-08-53-22-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-22.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-08.53.22_thumb.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-08-53-22_thumb-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:05:49 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-22_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>856</wp:post_id>
  <wp:post_date>2011-09-25 12:05:49</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:05:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-08-53-22_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-22_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-08.53.33.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-08-53-33-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:05:51 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-33.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>857</wp:post_id>
  <wp:post_date>2011-09-25 12:05:51</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:05:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-08-53-33-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-33.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-08.53.33_thumb.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-08-53-33_thumb-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:05:52 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-33_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>858</wp:post_id>
  <wp:post_date>2011-09-25 12:05:52</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:05:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-08-53-33_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-33_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-09.12.36.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-09-12-36-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:05:54 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-12-36.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>859</wp:post_id>
  <wp:post_date>2011-09-25 12:05:54</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:05:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-09-12-36-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-12-36.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-09.12.36_thumb.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-09-12-36_thumb-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:05:55 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-12-36_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>860</wp:post_id>
  <wp:post_date>2011-09-25 12:05:55</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:05:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-09-12-36_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-12-36_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-09.24.11.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-09-24-11-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:05:57 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-24-11.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>861</wp:post_id>
  <wp:post_date>2011-09-25 12:05:57</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:05:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-09-24-11-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-24-11.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-09.24.11_thumb.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-09-24-11_thumb-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:05:58 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-24-11_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>862</wp:post_id>
  <wp:post_date>2011-09-25 12:05:58</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:05:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-09-24-11_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-24-11_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-13.59.20.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-13-59-20-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:06:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-20.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>863</wp:post_id>
  <wp:post_date>2011-09-25 12:06:00</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:06:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-13-59-20-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-20.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-13.59.20_thumb.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-13-59-20_thumb-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:06:01 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-20_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>864</wp:post_id>
  <wp:post_date>2011-09-25 12:06:01</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:06:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-13-59-20_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-20_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-13.59.28.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-13-59-28-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:06:03 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-28.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>865</wp:post_id>
  <wp:post_date>2011-09-25 12:06:03</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:06:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-13-59-28-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-28.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-13.59.28_thumb.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-13-59-28_thumb-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:06:04 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-28_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>866</wp:post_id>
  <wp:post_date>2011-09-25 12:06:04</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:06:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-13-59-28_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-28_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-13.59.37.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-13-59-37-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:06:06 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-37.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>867</wp:post_id>
  <wp:post_date>2011-09-25 12:06:06</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:06:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-13-59-37-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-37.jpg</wp:attachment_url>
</item>
<item>
  <title>2011-09-17-13.59.37_thumb.jpg</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/2011-09-17-13-59-37_thumb-jpg/</link>
  <pubDate>Sun, 25 Sep 2011 12:06:07 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-37_thumb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>868</wp:post_id>
  <wp:post_date>2011-09-25 12:06:07</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:06:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2011-09-17-13-59-37_thumb-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>869</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-37_thumb.jpg</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2011/12/06/windows-phone-7-game-development-experience/capture-png-5/</link>
  <pubDate>Tue, 06 Dec 2011 00:07:53 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/12/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>911</wp:post_id>
  <wp:post_date>2011-12-06 00:07:53</wp:post_date>
  <wp:post_date_gmt>2011-12-06 00:07:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-5</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>915</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/12/capture.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2011/12/06/windows-phone-7-game-development-experience/capture_thumb-png-4/</link>
  <pubDate>Tue, 06 Dec 2011 00:07:55 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/12/capture_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>912</wp:post_id>
  <wp:post_date>2011-12-06 00:07:55</wp:post_date>
  <wp:post_date_gmt>2011-12-06 00:07:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>915</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/12/capture_thumb.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2011/12/06/windows-phone-7-game-development-experience/capture-png-6/</link>
  <pubDate>Tue, 06 Dec 2011 00:07:56 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/12/capture1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>913</wp:post_id>
  <wp:post_date>2011-12-06 00:07:56</wp:post_date>
  <wp:post_date_gmt>2011-12-06 00:07:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-6</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>915</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/12/capture1.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2011/12/06/windows-phone-7-game-development-experience/capture_thumb-png-5/</link>
  <pubDate>Tue, 06 Dec 2011 00:07:58 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2011/12/capture_thumb1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>914</wp:post_id>
  <wp:post_date>2011-12-06 00:07:58</wp:post_date>
  <wp:post_date_gmt>2011-12-06 00:07:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-5</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>915</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2011/12/capture_thumb1.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture-png-7/</link>
  <pubDate>Thu, 19 Apr 2012 15:20:40 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>949</wp:post_id>
  <wp:post_date>2012-04-19 15:20:40</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:20:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-7</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture_thumb-png-6/</link>
  <pubDate>Thu, 19 Apr 2012 15:20:42 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>950</wp:post_id>
  <wp:post_date>2012-04-19 15:20:42</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:20:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-6</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture_thumb.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture-png-8/</link>
  <pubDate>Thu, 19 Apr 2012 15:20:45 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>951</wp:post_id>
  <wp:post_date>2012-04-19 15:20:45</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:20:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-8</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture1.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture_thumb-png-7/</link>
  <pubDate>Thu, 19 Apr 2012 15:20:47 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture_thumb1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>952</wp:post_id>
  <wp:post_date>2012-04-19 15:20:47</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:20:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-7</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture_thumb1.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture-png-9/</link>
  <pubDate>Thu, 19 Apr 2012 15:20:49 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>953</wp:post_id>
  <wp:post_date>2012-04-19 15:20:49</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:20:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-9</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture2.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture_thumb-png-8/</link>
  <pubDate>Thu, 19 Apr 2012 15:20:51 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture_thumb2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>954</wp:post_id>
  <wp:post_date>2012-04-19 15:20:51</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:20:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-8</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture_thumb2.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture-png-10/</link>
  <pubDate>Thu, 19 Apr 2012 15:20:54 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>955</wp:post_id>
  <wp:post_date>2012-04-19 15:20:54</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:20:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-10</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture3.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture_thumb-png-9/</link>
  <pubDate>Thu, 19 Apr 2012 15:20:56 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture_thumb3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>956</wp:post_id>
  <wp:post_date>2012-04-19 15:20:56</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:20:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-9</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture_thumb3.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture-png-11/</link>
  <pubDate>Thu, 19 Apr 2012 15:20:58 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture4.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>957</wp:post_id>
  <wp:post_date>2012-04-19 15:20:58</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:20:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-11</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture4.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture_thumb-png-10/</link>
  <pubDate>Thu, 19 Apr 2012 15:21:01 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture_thumb4.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>958</wp:post_id>
  <wp:post_date>2012-04-19 15:21:01</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:21:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-10</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture_thumb4.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-smile.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/wlemoticon-smile-png/</link>
  <pubDate>Thu, 19 Apr 2012 15:21:02 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/wlemoticon-smile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>959</wp:post_id>
  <wp:post_date>2012-04-19 15:21:02</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:21:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-smile-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/wlemoticon-smile.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture-png-12/</link>
  <pubDate>Thu, 19 Apr 2012 15:21:05 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture5.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>960</wp:post_id>
  <wp:post_date>2012-04-19 15:21:05</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:21:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-12</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture5.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/capture_thumb-png-11/</link>
  <pubDate>Thu, 19 Apr 2012 15:21:07 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture_thumb5.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>961</wp:post_id>
  <wp:post_date>2012-04-19 15:21:07</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:21:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-11</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>962</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture_thumb5.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2012/04/29/using-mercury-particle-engine-with-windows-phone-7/capture-png-13/</link>
  <pubDate>Sun, 29 Apr 2012 17:46:09 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture6.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>980</wp:post_id>
  <wp:post_date>2012-04-29 17:46:09</wp:post_date>
  <wp:post_date_gmt>2012-04-29 17:46:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-13</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>984</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture6.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-smile.png</title>
  <link>http://roundcrisis.com/2012/04/29/using-mercury-particle-engine-with-windows-phone-7/wlemoticon-smile-png-2/</link>
  <pubDate>Sun, 29 Apr 2012 17:46:13 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/wlemoticon-smile1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>981</wp:post_id>
  <wp:post_date>2012-04-29 17:46:13</wp:post_date>
  <wp:post_date_gmt>2012-04-29 17:46:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-smile-png-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>984</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/wlemoticon-smile1.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2012/04/29/using-mercury-particle-engine-with-windows-phone-7/capture-png-14/</link>
  <pubDate>Sun, 29 Apr 2012 17:46:15 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture7.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>982</wp:post_id>
  <wp:post_date>2012-04-29 17:46:15</wp:post_date>
  <wp:post_date_gmt>2012-04-29 17:46:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-14</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>984</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture7.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2012/04/29/using-mercury-particle-engine-with-windows-phone-7/capture_thumb-png-12/</link>
  <pubDate>Sun, 29 Apr 2012 17:46:17 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/04/capture_thumb6.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>983</wp:post_id>
  <wp:post_date>2012-04-29 17:46:17</wp:post_date>
  <wp:post_date_gmt>2012-04-29 17:46:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-12</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>984</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/04/capture_thumb6.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2012/05/16/busy-may-with-ravendb/capture-png-15/</link>
  <pubDate>Wed, 16 May 2012 10:17:19 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/05/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>999</wp:post_id>
  <wp:post_date>2012-05-16 10:17:19</wp:post_date>
  <wp:post_date_gmt>2012-05-16 10:17:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-15</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1001</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/05/capture.png</wp:attachment_url>
</item>
<item>
  <title>Untitled.png</title>
  <link>http://roundcrisis.com/2012/05/16/busy-may-with-ravendb/untitled-png/</link>
  <pubDate>Wed, 16 May 2012 10:17:21 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/05/untitled.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1000</wp:post_id>
  <wp:post_date>2012-05-16 10:17:21</wp:post_date>
  <wp:post_date_gmt>2012-05-16 10:17:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>untitled-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1001</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/05/untitled.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2012/08/06/fail-to-add-a-sprite-to-xna-content-project/capture-png-16/</link>
  <pubDate>Mon, 06 Aug 2012 10:05:51 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/08/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1015</wp:post_id>
  <wp:post_date>2012-08-06 10:05:51</wp:post_date>
  <wp:post_date_gmt>2012-08-06 10:05:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-16</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1018</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/08/capture.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2012/08/06/fail-to-add-a-sprite-to-xna-content-project/capture_thumb-png-13/</link>
  <pubDate>Mon, 06 Aug 2012 10:05:52 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/08/capture_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1016</wp:post_id>
  <wp:post_date>2012-08-06 10:05:52</wp:post_date>
  <wp:post_date_gmt>2012-08-06 10:05:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-13</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1018</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/08/capture_thumb.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-smile.png</title>
  <link>http://roundcrisis.com/2012/08/06/fail-to-add-a-sprite-to-xna-content-project/wlemoticon-smile-png-3/</link>
  <pubDate>Mon, 06 Aug 2012 10:05:53 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/08/wlemoticon-smile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1017</wp:post_id>
  <wp:post_date>2012-08-06 10:05:53</wp:post_date>
  <wp:post_date_gmt>2012-08-06 10:05:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-smile-png-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1018</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/08/wlemoticon-smile.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-winkingsmile.png</title>
  <link>http://roundcrisis.com/?attachment_id=1020</link>
  <pubDate>Mon, 13 Aug 2012 09:26:07 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2012/08/wlemoticon-winkingsmile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1020</wp:post_id>
  <wp:post_date>2012-08-13 09:26:07</wp:post_date>
  <wp:post_date_gmt>2012-08-13 09:26:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-winkingsmile-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2012/08/wlemoticon-winkingsmile.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-sadsmile.png</title>
  <link>http://roundcrisis.com/2013/01/12/mono-for-android/wlemoticon-sadsmile-png/</link>
  <pubDate>Sat, 12 Jan 2013 13:24:08 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/01/wlemoticon-sadsmile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1041</wp:post_id>
  <wp:post_date>2013-01-12 13:24:08</wp:post_date>
  <wp:post_date_gmt>2013-01-12 13:24:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-sadsmile-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1043</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/01/wlemoticon-sadsmile.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-smile.png</title>
  <link>http://roundcrisis.com/2013/01/12/mono-for-android/wlemoticon-smile-png-4/</link>
  <pubDate>Sat, 12 Jan 2013 13:24:10 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/01/wlemoticon-smile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1042</wp:post_id>
  <wp:post_date>2013-01-12 13:24:10</wp:post_date>
  <wp:post_date_gmt>2013-01-12 13:24:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-smile-png-4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1043</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/01/wlemoticon-smile.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2013/01/28/a-build-system-for-games/capture-png-17/</link>
  <pubDate>Mon, 28 Jan 2013 23:21:59 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/01/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1044</wp:post_id>
  <wp:post_date>2013-01-28 23:21:59</wp:post_date>
  <wp:post_date_gmt>2013-01-28 23:21:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-17</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1046</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/01/capture.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2013/01/28/a-build-system-for-games/capture_thumb-png-14/</link>
  <pubDate>Mon, 28 Jan 2013 23:22:01 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/01/capture_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1045</wp:post_id>
  <wp:post_date>2013-01-28 23:22:01</wp:post_date>
  <wp:post_date_gmt>2013-01-28 23:22:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-14</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1046</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/01/capture_thumb.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-openmouthedsmile.png</title>
  <link>http://roundcrisis.com/2013/02/24/mono-for-androidbeyond-getting-started/wlemoticon-openmouthedsmile-png/</link>
  <pubDate>Sun, 24 Feb 2013 12:18:02 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/02/wlemoticon-openmouthedsmile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1050</wp:post_id>
  <wp:post_date>2013-02-24 12:18:02</wp:post_date>
  <wp:post_date_gmt>2013-02-24 12:18:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-openmouthedsmile-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1053</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/02/wlemoticon-openmouthedsmile.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-winkingsmile.png</title>
  <link>http://roundcrisis.com/2013/02/24/mono-for-androidbeyond-getting-started/wlemoticon-winkingsmile-png-2/</link>
  <pubDate>Sun, 24 Feb 2013 12:18:03 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/02/wlemoticon-winkingsmile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1051</wp:post_id>
  <wp:post_date>2013-02-24 12:18:03</wp:post_date>
  <wp:post_date_gmt>2013-02-24 12:18:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-winkingsmile-png-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1053</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/02/wlemoticon-winkingsmile.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2013/02/24/mono-for-androidbeyond-getting-started/capture-png-18/</link>
  <pubDate>Sun, 24 Feb 2013 12:18:06 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/02/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1052</wp:post_id>
  <wp:post_date>2013-02-24 12:18:06</wp:post_date>
  <wp:post_date_gmt>2013-02-24 12:18:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-18</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1053</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/02/capture.png</wp:attachment_url>
</item>
<item>
  <title>MonogameLogo512x512.png</title>
  <link>http://roundcrisis.com/2013/03/15/monogame-presentation-at-gig2013-and-gamesfleadh/monogamelogo512x512-png/</link>
  <pubDate>Fri, 15 Mar 2013 16:06:22 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/03/monogamelogo512x512.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1058</wp:post_id>
  <wp:post_date>2013-03-15 16:06:22</wp:post_date>
  <wp:post_date_gmt>2013-03-15 16:06:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>monogamelogo512x512-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1060</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/03/monogamelogo512x512.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-openmouthedsmile.png</title>
  <link>http://roundcrisis.com/2013/03/15/monogame-presentation-at-gig2013-and-gamesfleadh/wlemoticon-openmouthedsmile-png-2/</link>
  <pubDate>Fri, 15 Mar 2013 16:06:24 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/03/wlemoticon-openmouthedsmile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1059</wp:post_id>
  <wp:post_date>2013-03-15 16:06:24</wp:post_date>
  <wp:post_date_gmt>2013-03-15 16:06:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-openmouthedsmile-png-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1060</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/03/wlemoticon-openmouthedsmile.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-sadsmile.png</title>
  <link>http://roundcrisis.com/2013/03/15/more-mono-for-android-xamarin-android-little-tips/wlemoticon-sadsmile-png-2/</link>
  <pubDate>Fri, 15 Mar 2013 16:22:54 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/03/wlemoticon-sadsmile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1061</wp:post_id>
  <wp:post_date>2013-03-15 16:22:54</wp:post_date>
  <wp:post_date_gmt>2013-03-15 16:22:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-sadsmile-png-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1062</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/03/wlemoticon-sadsmile.png</wp:attachment_url>
</item>
<item>
  <title>wlEmoticon-sadsmile.png</title>
  <link>http://roundcrisis.com/2013/05/15/the-dying-platform-net/wlemoticon-sadsmile-png-3/</link>
  <pubDate>Wed, 15 May 2013 11:06:43 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/wlemoticon-sadsmile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1070</wp:post_id>
  <wp:post_date>2013-05-15 11:06:43</wp:post_date>
  <wp:post_date_gmt>2013-05-15 11:06:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wlemoticon-sadsmile-png-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1071</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/wlemoticon-sadsmile.png</wp:attachment_url>
</item>
<item>
  <title>Capture1.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture1-png/</link>
  <pubDate>Sat, 25 May 2013 20:38:29 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1079</wp:post_id>
  <wp:post_date>2013-05-25 20:38:29</wp:post_date>
  <wp:post_date_gmt>2013-05-25 20:38:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture1-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture1.png</wp:attachment_url>
</item>
<item>
  <title>Capture1_thumb.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture1_thumb-png/</link>
  <pubDate>Sat, 25 May 2013 20:38:31 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture1_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1080</wp:post_id>
  <wp:post_date>2013-05-25 20:38:31</wp:post_date>
  <wp:post_date_gmt>2013-05-25 20:38:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture1_thumb-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture1_thumb.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture-png-19/</link>
  <pubDate>Sat, 25 May 2013 20:38:34 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1081</wp:post_id>
  <wp:post_date>2013-05-25 20:38:34</wp:post_date>
  <wp:post_date_gmt>2013-05-25 20:38:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-19</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture_thumb-png-15/</link>
  <pubDate>Sat, 25 May 2013 20:38:36 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1082</wp:post_id>
  <wp:post_date>2013-05-25 20:38:36</wp:post_date>
  <wp:post_date_gmt>2013-05-25 20:38:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-15</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture_thumb.png</wp:attachment_url>
</item>
<item>
  <title>Capture1.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture1-png-2/</link>
  <pubDate>Sat, 25 May 2013 21:03:06 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture11.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1084</wp:post_id>
  <wp:post_date>2013-05-25 21:03:06</wp:post_date>
  <wp:post_date_gmt>2013-05-25 21:03:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture1-png-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture11.png</wp:attachment_url>
</item>
<item>
  <title>Capture1_thumb.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture1_thumb-png-2/</link>
  <pubDate>Sat, 25 May 2013 21:03:08 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture1_thumb1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1085</wp:post_id>
  <wp:post_date>2013-05-25 21:03:08</wp:post_date>
  <wp:post_date_gmt>2013-05-25 21:03:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture1_thumb-png-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture1_thumb1.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture-png-20/</link>
  <pubDate>Sat, 25 May 2013 21:03:10 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1086</wp:post_id>
  <wp:post_date>2013-05-25 21:03:10</wp:post_date>
  <wp:post_date_gmt>2013-05-25 21:03:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-20</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture2.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture_thumb-png-16/</link>
  <pubDate>Sat, 25 May 2013 21:03:12 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture_thumb1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1087</wp:post_id>
  <wp:post_date>2013-05-25 21:03:12</wp:post_date>
  <wp:post_date_gmt>2013-05-25 21:03:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-16</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture_thumb1.png</wp:attachment_url>
</item>
<item>
  <title>image.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/image-png/</link>
  <pubDate>Mon, 27 May 2013 09:47:01 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/image.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1091</wp:post_id>
  <wp:post_date>2013-05-27 09:47:01</wp:post_date>
  <wp:post_date_gmt>2013-05-27 09:47:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/image.png</wp:attachment_url>
</item>
<item>
  <title>image_thumb.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/image_thumb-png/</link>
  <pubDate>Mon, 27 May 2013 09:47:03 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/image_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1092</wp:post_id>
  <wp:post_date>2013-05-27 09:47:03</wp:post_date>
  <wp:post_date_gmt>2013-05-27 09:47:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image_thumb-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/image_thumb.png</wp:attachment_url>
</item>
<item>
  <title>image.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/image-png-2/</link>
  <pubDate>Mon, 27 May 2013 09:47:05 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/image1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1093</wp:post_id>
  <wp:post_date>2013-05-27 09:47:05</wp:post_date>
  <wp:post_date_gmt>2013-05-27 09:47:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image-png-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/image1.png</wp:attachment_url>
</item>
<item>
  <title>image_thumb.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/image_thumb-png-2/</link>
  <pubDate>Mon, 27 May 2013 09:47:07 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/image_thumb1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1094</wp:post_id>
  <wp:post_date>2013-05-27 09:47:07</wp:post_date>
  <wp:post_date_gmt>2013-05-27 09:47:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image_thumb-png-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/image_thumb1.png</wp:attachment_url>
</item>
<item>
  <title>image.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/image-png-3/</link>
  <pubDate>Mon, 27 May 2013 09:47:09 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/image2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1095</wp:post_id>
  <wp:post_date>2013-05-27 09:47:09</wp:post_date>
  <wp:post_date_gmt>2013-05-27 09:47:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image-png-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/image2.png</wp:attachment_url>
</item>
<item>
  <title>image_thumb.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/image_thumb-png-3/</link>
  <pubDate>Mon, 27 May 2013 09:47:11 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/image_thumb2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1096</wp:post_id>
  <wp:post_date>2013-05-27 09:47:11</wp:post_date>
  <wp:post_date_gmt>2013-05-27 09:47:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image_thumb-png-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/image_thumb2.png</wp:attachment_url>
</item>
<item>
  <title>image.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/image-png-4/</link>
  <pubDate>Mon, 27 May 2013 10:23:49 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/image3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1098</wp:post_id>
  <wp:post_date>2013-05-27 10:23:49</wp:post_date>
  <wp:post_date_gmt>2013-05-27 10:23:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image-png-4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/image3.png</wp:attachment_url>
</item>
<item>
  <title>image_thumb.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/image_thumb-png-4/</link>
  <pubDate>Mon, 27 May 2013 10:23:51 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/image_thumb3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1099</wp:post_id>
  <wp:post_date>2013-05-27 10:23:51</wp:post_date>
  <wp:post_date_gmt>2013-05-27 10:23:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image_thumb-png-4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/image_thumb3.png</wp:attachment_url>
</item>
<item>
  <title>About</title>
  <link>http://roundcrisis.com/about/</link>
  <pubDate>Wed, 22 Oct 2008 15:25:40 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false"/>
  <description/>
  <content:encoded><![CDATA[Andrea is a professional software developer and has accrued many years of experience building solid applications. She has been consuming new technologies and frameworks daily for the last 10 years in a never-ending quest for knowledge and a happy developer path.

After a long life in the entreprise development world she is now developing games and the proud co-founder of <a href="http://batcatgames.com">BatCat Games</a>. Andrea is involved in the organisation of <a title="Mono for Android–Beyond getting started" href="http://dublingamecraft.com">GameCraft</a>, <a href="http://dublinalt.net" target="_blank">Alt Net in Dublin</a> and other code related communities in Ireland.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2008-10-22 15:25:40</wp:post_date>
  <wp:post_date_gmt>2008-10-22 15:25:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-10-22 15:25:40]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>79</wp:comment_id>
    <wp:comment_author><![CDATA[Nadya]]></wp:comment_author>
    <wp:comment_author_email>dvvlondon@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.jobandpleasure.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>78.138.170.66</wp:comment_author_IP>
    <wp:comment_date>2009-07-15 16:15:01</wp:comment_date>
    <wp:comment_date_gmt>2009-07-15 16:15:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi, I really like it here on your blog!!!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>342</wp:comment_id>
    <wp:comment_author><![CDATA[Michael]]></wp:comment_author>
    <wp:comment_author_email>guthur@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>212.183.128.77</wp:comment_author_IP>
    <wp:comment_date>2011-10-04 21:45:16</wp:comment_date>
    <wp:comment_date_gmt>2011-10-04 21:45:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Andrea,

I was at your Code Kata session during the Developer Developer Developer conference Belfast.

You mentioned you would have liked to see the solution in Common Lisp (CL), after I mentioned it. I think these Katas are a neat idea so I decided to code it. check link below.

http://paste.lisp.org/display/125071

You mentioned about unit testing CL, there is actually less need for formal unit testing frameworks with CL due to fact it is a dynamic language that allows interactive programming, having a REPL. But I decide to whip something together anyway, the top 2/3 of the code is the "testing framework" if you can really call it that; I just whipped it together in little over 1/2 hour.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1317764716.9314";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1317809811</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1317809811.3787";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>343</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2011-10-05 16:00:12</wp:comment_date>
    <wp:comment_date_gmt>2011-10-05 16:00:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Michael: Thanks for the message, that's an interesting solution.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>342</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1317830412</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1317830412.8733";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Why NHibernate and not EF?</title>
  <link>http://roundcrisis.com/?p=9</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=9</guid>
  <description/>
  <content:encoded><![CDATA[<div>There was some talk about performance, I don’t have metrics for NH and I used it for a good while and never had any problems with this if the entities are correct defined (ie define lazy loading, etc) but then I started reading a bit more, NH has other levels of caching (identity map cache, another one that’s cusotm)<br />Various fetching strategies available (join, subselect, batched select, caching, multi queries, etc).<br />I know we don’t need it but we might in the future, need support for distributed scenarions (sharding distributed caching, etc)<br />Also I think this is a feature the boses are going to like , support for Lucene.net, this is a full text search add on come on!<br /><br />NH is extensible, don’t like the way something works? Without changing the core code we can just extend it           <br />Also the fact that is open source </div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>9</wp:post_id>
  <wp:post_date>2008-05-22 12:54:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="entity-framework"><![CDATA[Entity Framework]]></category>
  <category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/6481717353580249005]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Frustrating Development</title>
  <link>http://roundcrisis.com/?p=25</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=25</guid>
  <description/>
  <content:encoded><![CDATA[<div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>25</wp:post_id>
  <wp:post_date>2008-06-26 12:14:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/125489564290480253]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>jQuery UI ThemeRoller</title>
  <link>http://roundcrisis.com/?p=26</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=26</guid>
  <description/>
  <content:encoded><![CDATA[I finnally had some time to play around a little with this.
<br />Its a good idea but either I dont get it or ... well I actually think I dont fully get it.
<br />
<br />So I went and downloaded a theme and as it come with a demo I started loking through it and all, seems fine. Works fine in FF and ie.
<br />
<br />So far so good, then I found a post about theme roller and how you can plug the theme into your own jQuery components [<a href="http://www.filamentgroup.com/lab/developer_your_own_jquery_themeroller_ready_components/">link</a>] and this is where I realised I dont know enough CSS or JS . because i m sure i dont want to so something like
<br />
<br />i want to do something like
<br />
<br />and add this component name somewhere (dont know where really) and then that the necesary styles are applyed to it such as hover, click, etc and knowing this is posible with jQuery by convention. I m just guessing I m doing this wrong wil keep trying...
<br /></div></blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>26</wp:post_id>
  <wp:post_date>2008-07-02 10:23:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
  <category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
  <category domain="category" nicename="themeroller"><![CDATA[themeRoller]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/2695260907898372349]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>NHibernate InAction</title>
  <link>http://roundcrisis.com/?p=27</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=27</guid>
  <description/>
  <content:encoded><![CDATA[<div>Review of Chapter 3</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>27</wp:post_id>
  <wp:post_date>2008-07-04 06:47:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/2876751732575557666]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Generic Search with IoC and AR</title>
  <link>http://roundcrisis.com/?p=28</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=28</guid>
  <description/>
  <content:encoded><![CDATA[<div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>28</wp:post_id>
  <wp:post_date>2008-07-04 06:52:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/9084618162405628880]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Using Lucene.Net</title>
  <link>http://roundcrisis.com/?p=29</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=29</guid>
  <description/>
  <content:encoded><![CDATA[<div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>29</wp:post_id>
  <wp:post_date>2008-07-04 07:00:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/5431515870438858603]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>MIgrations in .Net</title>
  <link>http://roundcrisis.com/?p=30</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=30</guid>
  <description/>
  <content:encoded><![CDATA[<div>Machine.Migrations</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>30</wp:post_id>
  <wp:post_date>2008-07-04 07:00:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/8585191860324387787]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Using Umbrella</title>
  <link>http://roundcrisis.com/?p=31</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=31</guid>
  <description/>
  <content:encoded><![CDATA[<div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>31</wp:post_id>
  <wp:post_date>2008-07-04 07:02:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/2430739065012679311]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>jQuery Validator</title>
  <link>http://roundcrisis.com/?p=34</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=34</guid>
  <description/>
  <content:encoded><![CDATA[<div>j</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>34</wp:post_id>
  <wp:post_date>2008-07-07 21:38:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/3201255685883994907]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Logging your errors with castle</title>
  <link>http://roundcrisis.com/?p=39</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=39</guid>
  <description/>
  <content:encoded><![CDATA[<div>More as a reminder to self than anything else</div>
<br /><p>The rescue in castle has access to the controller, if like in the project I m working on at the moment, you have a base controller class you can create a simple method like </p>
<br /><p>public void LogRescueErrors(Exception e)</p>
<br /><p>{</p>
<br /><p>m_logger.Log()</p>
<br /><p>}</p>
<br /><p><br /> </p>
<br /><div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>39</wp:post_id>
  <wp:post_date>2008-08-05 10:24:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="castle"><![CDATA[castle]]></category>
  <category domain="category" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="category" nicename="nvelocity"><![CDATA[NVelocity]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/3294497484761179360]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>GWT Ext</title>
  <link>http://roundcrisis.com/?p=42</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=42</guid>
  <description/>
  <content:encoded><![CDATA[<div><strong>What s GWT</strong></div>
 
<div></div>
 
<div></div>
 
<div></div>
 
<div><strong>Whats intersting about it</strong></div>
 
<div></div>
 
<div>not sure yet, but browser compatibility and unit testing and a more maintainable code would do the trick for me</div>
 
<div></div>
 
<div><strong>Whats EXT</strong></div>
 
<div></div>
 
<div>why not the javascript version?</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>42</wp:post_id>
  <wp:post_date>2009-01-09 17:08:33</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/1960447778270658353]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Stock Update with GWT</title>
  <link>http://roundcrisis.com/?p=47</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=47</guid>
  <description/>
  <content:encoded><![CDATA[<div>so i went throught the sample application from GWT documentation for Stock Update</div>
<br /><div>there are a few things that make me a little nervous here</div>
<br /><div> </div>
<br /><div>- </div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>47</wp:post_id>
  <wp:post_date>2008-10-23 14:54:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/8899350729654793712]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>NHibernate MultiCriteria</title>
  <link>http://roundcrisis.com/?p=52</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=52</guid>
  <description/>
  <content:encoded><![CDATA[The idea behind NHibernate MultiCriteria is to send many criterias in one request hence saving roundtrips to the database and getting the result back in a colleciton 

<strong>What problem does it solve:</strong>

if you have a problem with multiple trips to the database (for example rountrups are long)

<strong>Why I like it</strong>

It makes me think about performance 

<strong>Example</strong>

Note: I m using NH 2.1.0.1001

<strong> More <a href="http://ayende.com/Blog/archive/2007/05/20/NHibernate-Multi-Criteria.aspx">here</a></strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>52</wp:post_id>
  <wp:post_date>2008-12-08 18:23:35</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/posts/default/5065406485771967160]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Creating a Monorail project Quick</title>
  <link>http://roundcrisis.com/?p=57</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=57</guid>
  <description/>
  <content:encoded><![CDATA[I wish monorail had a project creator, so at least I ll go an list what is needed to get up an hello world in MR and at some point do something about it

<strong>Required Assemblies [</strong>in alphabetical order<strong>]</strong>

 
<tr>
<td width="64" height="20">Castle.ActiveRecord.dll</td>
</tr>
<tr>
<td height="20">Castle.Components.Binder.dll</td>
</tr>
<tr>
<td height="20">Castle.Components.Common.EmailSender.dll</td>
</tr>
<tr>
<td height="20">Castle.Components.Common.TemplateEngine.dll</td>
</tr>
<tr>
<td height="20">Castle.Components.Common.TemplateEngine.NVelocityTemplate.dll</td>
</tr>
<tr>
<td height="20">Castle.Components.Validator.dll</td>
</tr>
<tr>
<td height="20">Castle.Core.dll</td>
</tr>
<tr>
<td height="20">Castle.MonoRail.ActiveRecordScaffold.dll<span> </span></td>
</tr>
<tr>
<td height="20">Castle.MonoRail.ActiveRecordSupport.dll</td>
</tr>
<tr>
<td height="20">Castle.MonoRail.Framework.dll</td>
</tr>
<tr>
<td height="20">Castle.MonoRail.Framework.Views.NVelocity.dll</td>
</tr>
<tr>
<td height="20">Isei.Collection.dll

NHibernate.dll  </td>
</tr>
<tr>
<td height="20"></td>
</tr>
 

 <strong>The Web.config</strong>

asdasd]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>57</wp:post_id>
  <wp:post_date>2008-12-10 11:02:54</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="post_tag" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="post_tag" nicename="new_project"><![CDATA[new_project]]></category>
</item>
<item>
  <title>Some </title>
  <link>http://roundcrisis.com/?p=76</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=76</guid>
  <description/>
  <content:encoded><![CDATA[<strong>This is some question?</strong>

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse eu velit. Aenean commodo varius velit. Cras ultrices dolor et metus. Vivamus egestas pulvinar nunc. Donec diam justo, posuere in, tempor eu, luctus sit amet, felis. Donec hendrerit sollicitudin felis. Morbi volutpat odio eu lorem. Vestibulum eget ante ac libero fermentum convallis. Morbi eu risus. Etiam malesuada congue metus. Praesent consectetur nunc in nibh. Nullam mattis sapien vitae libero. Pellentesque mauris lorem, blandit in, lacinia non, porttitor sit amet, eros.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>76</wp:post_id>
  <wp:post_date>2009-01-03 11:05:42</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
</item>
<item>
  <title>Git - the experience from a windows user</title>
  <link>http://roundcrisis.com/?p=91</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=91</guid>
  <description/>
  <content:encoded><![CDATA[I heard about git a good while ago when everyone got that link of Linus Torvalds talking about it. It seem pretty good at the time and I always promised myself to have a better look at it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>91</wp:post_id>
  <wp:post_date>2009-01-09 17:31:11</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>The "product options" problem</title>
  <link>http://roundcrisis.com/?p=115</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=115</guid>
  <description/>
  <content:encoded><![CDATA[so it comes a time whe writting an e-commerce shop were you have to decide the way to go about product "options"]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>115</wp:post_id>
  <wp:post_date>2009-01-28 14:13:43</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Writing a mini DAL in java</title>
  <link>http://roundcrisis.com/?p=120</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=120</guid>
  <description/>
  <content:encoded><![CDATA[I am going to write a mini DAL in java. To this effect I]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>120</wp:post_id>
  <wp:post_date>2009-01-29 17:56:44</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>What matters is how you work</title>
  <link>http://roundcrisis.com/?p=129</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=129</guid>
  <description/>
  <content:encoded><![CDATA[Following an interesting new trend in my "blogging" (I have to stop myself from laughing on this one ) , I realised of something blatanly obvious, and by realised I mean I learned 

I was trying to figure which technology was best suited to solve a problem (say getFoo()) it was a web service client so it didnt really matter as long as it works, right? maybe, I was browsing the net for solutions and found some horrible implementations of both technologies and then some nice ones.  After Isaw this I realised that the best was t use what I knew best and maybe write a nice post about it, however what I was most surprised about was the fact that when looking for something what really matters is how your work]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>129</wp:post_id>
  <wp:post_date>2009-02-18 16:21:48</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Testing the datamodel </title>
  <link>http://roundcrisis.com/?p=149</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=149</guid>
  <description/>
  <content:encoded><![CDATA[One of the best things about using an ORM is that you can test your datamodel for correctness and completeness and it helps you strengthen your datamodel design. But, how?

I know is not precisly correct but I use an in memory database to test, SqlLite.  We ll come back to why is not correct later on. 

So you have these clases , These clases are to create a twitter app

We a<strong>re </strong> using TDD so lets create a user

 

First I presume we need a user

then I presume we neesd a status class]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>149</wp:post_id>
  <wp:post_date>2009-02-13 11:52:35</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>S.O.L.I.D</title>
  <link>http://roundcrisis.com/?p=196</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=196</guid>
  <description/>
  <content:encoded><![CDATA[B]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>196</wp:post_id>
  <wp:post_date>2009-03-12 02:49:03</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
</item>
<item>
  <title>(Go) Live and Learn</title>
  <link>http://roundcrisis.com/?p=233</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=233</guid>
  <description/>
  <content:encoded><![CDATA[So, about a month ago we released into the wild this eCommerce Shop the few days leading to it was a real nightmare, except for the fact we didn't really sleep all that much so there was no time for nightmares.

We needed to make the change over from the existing php solution (oscommerce for the record) into our brand new, beta tested solution in .net <strong>during the weekend.</strong> Now, working during weekends was not a problem (doing that for the last 9 months really) the thing was to have customer support available for those uncomfortable DNS changes, SSL certs and all that jazz.

Of course, nothing went as planned but for some bizarre reason we went live, finally on the Monday the 2nd of March, (instead of the Saturday ) .

<strong>Things that didnt go as planned</strong>

<strong>Two websites</strong>

An eCommerce shop has really two parts, one been the website any customer visits and then the administration site. While we were testing and building the site we had access to it through an IP address and two virtual folder, this is not suitable for a live system 

<strong>Secure Certs</strong>

Related to the above item, you need to secure both the admin and the client and you need an SSL cert per domain.

<strong>Web Services/ API</strong>

ahh yeah of course, same problem with different websites and

In the endwe didnt know much about the webservSSL certs]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>233</wp:post_id>
  <wp:post_date>2009-04-15 16:28:15</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Service Bus</title>
  <link>http://roundcrisis.com/?p=236</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=236</guid>
  <description/>
  <content:encoded><![CDATA[Hi all 

So I m learning a bit about Enterprise Service Bus, originally I read this post By Godjo about reliably handling email confirmations, so I wanted to learn about queues, but then I heard about Service Bus and I just had to figure out really how all this worked, and really what was the best solution to this problem and what other pains it could easy.

So first I watched <a href="http://www.infoq.com/presentations/Enterprise-Service-Bus" target="_blank">this </a>to learn about Service Bus, interesting, it did help with the concepts,however because it was java based, I felt i wasn't really grasping it all, very handy as an intro tho.

So I went to try to figure what are the options for me, it boils down to 3 options: <a href="http://masstransit.pbworks.com/FrontPage" target="_blank">MassTransit</a>, nServiceBus and Rhino Service Bus(in no particular order)

I m not in a mad rush to make use of this, so I want to take time and try each of those frameworks. I started with Mass Transit as I found a <a href="http://elegantcode.com/2009/03/18/code-cast-25-masstransit/" target="_blank">podcast</a> last night(if you are downloading this instead of listening live,  check that is over an hour, because it happened to me and others that the download was cut short ) . In that podcast I liked the examples they gave about order processing,

Then I went on to try and learn more and read about the <a href="http://www.enterpriseintegrationpatterns.com/ramblings/18_starbucks.html" target="_blank">Starsbucks Example</a>, the idea behind this example is simple to show the synchronous/asynchronous operations and how you can use them togheter.

Then last week we were discussing ESBs in our Dublin Alt.Net Meeting, where Clive Fooley and Sean gave us a really good idea on how to get going.

What can you do with an ESB

- You can integrate your different systems in an asynchronous way, you comunicate via messages. The way you deal with the messages is up to you and depends on the needs of your systems, for example if this something like a weather update where if you miss one message is no big deal, then all fine, on the other hand if the message is about a purchase order you want reliable delivery and it appears that you will want to use a saga.

Also, the idea is that once you send the message is pretty much shoot and forget,]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>236</wp:post_id>
  <wp:post_date>2009-05-22 08:19:37</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Why I like programming</title>
  <link>http://roundcrisis.com/?p=240</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=240</guid>
  <description/>
  <content:encoded><![CDATA[I was reading about how there are not so many girls in the industry, I always find myself disagreeing with what I read, instead of complaining I decided to <strong>also</strong> write my own post about it.
<ul>
	<li><strong>Logic</strong>. Love it when I see logic in action. Same reason why I like unit testing.  Really like a working solution.</li>
	<li><strong>Elegant Solutions</strong>. its pretty much linked to the previous point.  logic in action is good,  and normally I want to get the best solution</li>
	<li><strong>Continuos Improvement</strong>. You can <strong>always</strong> be better, learn more things.  A bit frustrating sometimes but it keeps you awake at the same time.</li>
	<li>Interaction</li>
	<li><strong>Who the fukc are you</strong>. No matter who you are when someone reads your code, (s)he doesnt care who are you,  if they can get the intention of your code quick and or it solves them a problem they love you. Inverse applies. and sometimes they like Witch hunting</li>
	<li><strong>No need to dress up for work</strong>. A really important thing about my job is that I dont have to be dressed up like a banker (apologies to any banker that is reading this by accident) honestly I hate the whole business suit tbh.</li>
</ul>
Why do you like programing?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>240</wp:post_id>
  <wp:post_date>2009-06-02 17:57:44</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>The Well Grounded Rubyist</title>
  <link>http://roundcrisis.com/?p=257</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=257</guid>
  <description/>
  <content:encoded><![CDATA[Hi.

I m part of Ruby Ireland and we got some free ebooks from Manning to review, I havent read a language specific book in a while , so I decided to not skip any chapter. Its gonna be a very granular review, so skip this if you are not interested in detail.
<h2>Chapter 1</h2>
An introduction to the ruby language. This chapter starts by separating between : the core language, extensions and libraries and command line tools. Then it goes to talk about the irb, and using irb with --simple-prompt option ( i wasnt aware of this and its nice not to have all that noise)
Then it looks at basic syntax, operators, conditionals, etc without really defining them, which is probably good. A brief but concise introduction to identifiers and their conventions:
Local Variables 
<pre>first_name</pre>
Instance Variables. These types of variables store information for an individual object
<pre>@first_name</pre>
Class Variables. Store information about class hierarchy.
<pre>@@running_total</pre>
Global Variables. Pretty obvious and no matter the format after the dollar sign, if there is one there its a global
<pre> $Countries</pre>
Constants
<pre>CanBeCamelCase or UPPER_CASE_WITH_UNDERSCORES</pre>
I m actually adding these conventions here because I find it hard to remember them myself, I normally work in C# and Java and the conventions are very different, and I hate slapping my hand every five minutes because I forgot the proper convention for the language I am using.

Its important to note that Ruby sees everything as an object. I like the clarification made in the book regarding calling methods or sending messages to an objects.
An interesting thing you can do in Ruby is change the existing Ruby classes, my instinct tells me this is a bad idea, but apparently this will be reviewed later on the book. (i would think by default is a bad idea, but then there might be some cases where this is applicable) I would think extending them (native classes) is fine, however not a great idea to modify them completely...will see
Then there is an example on how to run a simple Celsius to Fahrenheit converter, how the interpreter manages puts and print. Then it quickly moves on to examples using gets, file reading and writing, and how to write more dense code.

This part I really enjoyed, when it drives you to Ruby config files, the options on how to read all this info even from the irb. The book then goes on into suggesting having a look into rubylibdur and the C extensions directory, honestly i ve never look there, so it was nice to have this suggestion.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>257</wp:post_id>
  <wp:post_date>2009-05-23 16:19:59</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="book-review"><![CDATA[book-review]]></category>
  <category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
</item>
<item>
  <title>Autocomplete on for ExtJs</title>
  <link>http://roundcrisis.com/?p=272</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=272</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>272</wp:post_id>
  <wp:post_date>2009-06-08 09:01:46</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
</item>
<item>
  <title>ExtJs TextField autocomplete</title>
  <link>http://roundcrisis.com/?p=273</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=273</guid>
  <description/>
  <content:encoded><![CDATA[This is more of a reference link for myself, as it was hard to find here it goes.

If you need a TextField to have autocomplete="on" you need to set it up in <strong>autocreate </strong> otherwise you need to do an override]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>273</wp:post_id>
  <wp:post_date>2009-06-08 16:21:57</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="extjs"><![CDATA[ExtJs]]></category>
  <category domain="post_tag" nicename="extjs"><![CDATA[ExtJs]]></category>
  <category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Monorail and GWT </title>
  <link>http://roundcrisis.com/?p=286</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=286</guid>
  <description/>
  <content:encoded><![CDATA[Playing nicely together...

This is just a little POC to show how you can use GWT (and any of its inherited libraries like GXT or GWT-Ext) and Monorail.

What I m doing is basically send data as JSON from the server and use GWT to generate the UI and render the data.

So first things first. Get GWT and make sure it runs in your local, eclipse has now a plug in for GWT so creating a project is pretty simple. Just in case a tutorial here.

Just to save time, I m gonna use an example I did some time ago, NetTwitt for the Monorail side of things and modify it so when we need data, we get it as JSON.

I guess that its better to let you look at the code =).  that you can get in my google code repo. However here are the main changes

1)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>286</wp:post_id>
  <wp:post_date>2009-06-11 07:45:30</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="post_tag" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="category" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="post_tag" nicename="monorail"><![CDATA[monorail]]></category>
</item>
<item>
  <title>GWT without RPC</title>
  <link>http://roundcrisis.com/?p=296</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=296</guid>
  <description/>
  <content:encoded><![CDATA[I dont undertand the idea behind designing GWT in a way that prefers RPC.

However it is possible to use GWT and (GWT-Ext or Ext-GWT ) without them, so to speak to have a stronagly typed UI frmework.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>296</wp:post_id>
  <wp:post_date>2009-06-18 10:52:39</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="post_tag" nicename="gwt"><![CDATA[GWT]]></category>
</item>
<item>
  <title>Cucumber for the rest of us</title>
  <link>http://roundcrisis.com/?p=298</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=298</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>298</wp:post_id>
  <wp:post_date>2009-06-19 13:21:23</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
</item>
<item>
  <title>Missing IoC Containers</title>
  <link>http://roundcrisis.com/?p=321</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=321</guid>
  <description/>
  <content:encoded><![CDATA[For the last while I have spent a lot of time writting GWT code,]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>321</wp:post_id>
  <wp:post_date>2009-06-29 14:04:03</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Simple Layout and Grid (JSON)</title>
  <link>http://roundcrisis.com/?p=323</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=323</guid>
  <description/>
  <content:encoded><![CDATA[Quick post

This is nearly a copy and paste from the sample GXT, the difference is that

a) its working in my machine :D

b) it has a layout around it

c) I m posting the JSON ( that I couldnt find anywhere on the site)

I wanted to create a simple layout with a top panel ,a  collapsible left panel and the main center panel.

To achieve that I need to use a border layout and the main class must extend LayoutContainer]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>323</wp:post_id>
  <wp:post_date>2009-06-30 20:54:44</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Non Obvious things of GWT development for a net developer </title>
  <link>http://roundcrisis.com/?p=338</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=338</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>338</wp:post_id>
  <wp:post_date>2009-07-14 12:06:58</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Windsor Lifestyle</title>
  <link>http://roundcrisis.com/?p=340</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=340</guid>
  <description/>
  <content:encoded><![CDATA[We were discussing IoC containers last Thursday in our Monthly Alt net meeting. That got me thinking about some functionality available to Windsor, that is slightly more advanced.

I want to learn about all these functionalities, so I ll do a series of posts about it, that will include a short intro as well as when , and how to use this.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>340</wp:post_id>
  <wp:post_date>2009-07-17 15:42:57</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="windsor"><![CDATA[windsor]]></category>
</item>
<item>
  <title>Implementing the Observer Pattern in GWT (1 of n)</title>
  <link>http://roundcrisis.com/?p=346</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=346</guid>
  <description/>
  <content:encoded><![CDATA[public interface Subject {
void addObserver(Observer o);
void removeObserver(Observer o);
}

public interface Observer(){
void update(Subject o);

}

public class Combo implements Observer{

public void update(Subject o){
//it saved
//something specific that this observer should do regarding the save
}
}

public class Category implements Subject(){
List observers = new List&lt;&gt;();

public void persist(){

....
notify();
}

public void addObserver(Observer o){
observers.put(o);
}
public void removeObserver(Observer o){
observers.remove(o);
}

private void notify(){

for(Observer o: observers){
o.update(this);
}

}

}

now, what is wrong with this?

Discussing this with pandy (you know who you are ;) ) the code changed to

public interface Subject {
void addObserver(Observer o);
void removeObserver(Observer o);
}

public interface Observer(){
void update(Subject o,String event);

}

public class Combo implements Observer{

public void update(Subject o, String event){
//it saved
//something specific that this observer should do regarding the save
}
}

public abstract class ObservableSubject implements Subject{
List observers = new List();
public void addObserver(Observer o, String event){
observers.put(o);
}
public void removeObserver(Observer o, String event){
observers.remove(o);
}

protected void notify(String event){
for(Observer o: observers){
o.update(this, event);
}

}

}
public class Category extends ObservableSubject(){

public void persist(){

....
notify(event);
}

}]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>346</wp:post_id>
  <wp:post_date>2009-08-12 16:40:30</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="post_tag" nicename="observer"><![CDATA[Observer]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Composition over inheritance</title>
  <link>http://roundcrisis.com/?p=369</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=369</guid>
  <description/>
  <content:encoded><![CDATA[So, a non code post.

Composition is good, it tends to make your code more testable

Small units with very specific concerns, why this is good? you can probably test very quickly, and the fact that testing is easy in most cases means that your dependencies are as small as possible ( at least in my experience)

a side effect of all this is developer productivity , I think most developers have a very short atention span, when classes are small and concerns are constrained it is easier to stay focused

for some reason this makes me think about persistance ignorance]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>369</wp:post_id>
  <wp:post_date>2009-09-03 10:49:05</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Selenium Testing and GWT-Ext </title>
  <link>http://roundcrisis.com/?p=387</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=387</guid>
  <description/>
  <content:encoded><![CDATA[Some gotchas on this topic.

there are CSS selectors

A sample
<div class="code"><span class="Namespace">using</span> System;

<span class="Namespace">using</span> System.Text;

<span class="Namespace">using</span> System.Text.RegularExpressions;

<span class="Namespace">using</span> System.Threading;

<span class="Namespace">using</span> NUnit.Framework;

<span class="Namespace">using</span> Selenium;

<span class="Namespace">namespace</span> SeleniumTests

{

[TestFixture]

<span class="Modifier">public</span> <span class="ReferenceType">class</span> LoginAndNewLandingPage

{

<span class="Modifier">private</span> ISelenium selenium;

<span class="Modifier">private</span> StringBuilder verificationErrors;

[SetUp]

<span class="Modifier">public</span> <span class="ValueType">void</span> SetupTest()

{

selenium = <span class="Keyword">new</span> DefaultSelenium(<span class="String">"localhost"</span>, 4444, <span class="String">"*chrome"</span>, <span class="String">"http://change-this-to-the-site-you-are-testing/"</span>);

selenium.Start();

verificationErrors = <span class="Keyword">new</span> StringBuilder();

}

[TearDown]

<span class="Modifier">public</span> <span class="ValueType">void</span> TeardownTest()

{

<span class="Statement">try</span>

{

selenium.Stop();

}

<span class="Statement">catch</span> (Exception)

{

<span class="InlineComment">// Ignore errors if unable to close the browser</span>

}

Assert.AreEqual(<span class="String">""</span>, verificationErrors.ToString());

}

[Test]

<span class="Modifier">public</span> <span class="ValueType">void</span> TheLoginAndNewLandingPageTest()

{

selenium.Open(<span class="String">"/crm70b9/eware.dll/US"</span>);

selenium.Click(<span class="String">"//div[@id='LOGONBUTTON']/table/tbody/tr[5]/td[2]/div"</span>);

selenium.WaitForPageToLoad(<span class="String">"30000"</span>);

selenium.SelectFrame(<span class="String">"EWARE_MENU"</span>);

selenium.Click(<span class="String">"Landing"</span>);

selenium.SelectFrame(<span class="String">"relative=up"</span>);

selenium.SelectFrame(<span class="String">"EWARE_MID"</span>);

<span class="Statement">for</span> (<span class="ValueType">int</span> second = 0;; second++) {

<span class="Statement">if</span> (second &gt;= 60) Assert.Fail(<span class="String">"timeout"</span>);

<span class="Statement">try</span>

{

<span class="Statement">if</span> (selenium.IsElementPresent(<span class="String">"css=label:contains('Landing Page Name')"</span>)) <span class="Statement">break</span>;

}

<span class="Statement">catch</span> (Exception)

{}

Thread.Sleep(1000);

}

selenium.Click(<span class="String">"css=button:contains('New SomethingPage')"</span>);
selenium.Type(<span class="String">"css=.x-form input[type=\"text\"] (4)"</span>, <span class="String">"test"</span>);
selenium.Type(<span class="String">"css=.x-form input[type=\"text\"] (5)"</span>, <span class="String">"test"</span>);
selenium.Click(<span class="String">"ext-gen155"</span>);
selenium.Click(<span class="String">"css=button:contains('Ok')"</span>);
}
}

}</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>387</wp:post_id>
  <wp:post_date>2009-09-15 16:38:07</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Teams</title>
  <link>http://roundcrisis.com/?p=393</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=393</guid>
  <description/>
  <content:encoded><![CDATA[On teams - you need to build the teeam make sure everyone is on the sam epage and dfoing the same thigns otherwise isd not a team is just a bunch of people working in the same place , how do you build a team? no idea, but whne you are in one you know

- some ways to get there:  developers: if you are making major changes into someone elses code, let them know because first you might be missing something or they might learn something or both  the chat could take 5 min and it could help getting a better solution ( keep the chat to standing maybe or decide to pair if there are details that make you require it)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>393</wp:post_id>
  <wp:post_date>2009-09-17 09:14:08</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>The "Gu" in Dublin - Asp.NET MVC -  Visual Studio 2010 and Asp.NET 4 </title>
  <link>http://roundcrisis.com/?p=399</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=399</guid>
  <description/>
  <content:encoded><![CDATA[Last Monday Scott Guthrie was in Dublin, he talked about Asp.Net MVC, Visual Studio 2010 and Asp.Net 4.0, I was quite impressed by the energy he seemed to have; he was talking for about 5 hours with only half an hour brake in between. A lot of code shown.

There is just too much content to go into detail, so these are pretty much my crude notes.

<strong>Asp.Net MVC</strong>

In general an overview of Asp.Net MVC, It wasn't an in-depth talk but it did cover the basics.

- 2 weeks to previews 5
- Mvc 2 bundled with asp.net
- Templated html helpers ( Equivalent to Monorail components? )
- Areas ( similar/ same that monorail areas?)
- Actions return an object,  this can be a string (ugly) or any kind of view
- Master Pages ( Monorail equivalent of layouts?)
- Showed an example of using strongly typed views
- Little nice thing, by default the title of the page is the name of the Action
- He mentioned NHibernate  !!!
- In asp.net 4 the &lt;%: does html encoding for free tho there is a HTML.Encode(....
- Shows how routing works and where to set it up/ change it using MapRoute
routes.MapRoute( see default for example, it allows RegEx and some constraints can be added

- Helper methods (that build the Urls for example) would build the url using the defined routes, I wonder how this will be handled if the routing engine/ or the helper is changed

- HTTPPost replaces AccessibleThrough in Asp.Net MVC 2

- Validation on the server side and client side interesting.

- EditorFor. Scaffolding for Model, there are basic defaults but can they can be overriden. He gave an example where you have a List&lt;Category&gt; that is render as a dropdown. There is also a "DisplayFor"

- Smart binding on an action and have an object as a parameter of a [post] action

- Mentions code coveratge tools, including NDepend and NCover.
<h2>VS 2010 and Asp.net 4.0</h2>
<h3>Visual Studio</h3>
- Super extensible (how?)
- Built using wpf

-Multiple monitors support

- Highlights variables like Eclipse

- Better intellisense, keyboard bindings: find usages, get types, etc.

- Code analysis tells you if a type is not beeing used

- ALT to select sqaures

Gu talks about TDD

REsharper and other tools lol

better support for tdd, it does pretty much what resharper can do

code editing features

C#

HTML snippets for HTML

better support for exceptions
you can step back in the stackl
historical debugging

check default options
some user can be runung they can dump the current state and you can debug that
there is an historical viewer
state can be dumped to a text file

versioning and multi targeting

,net 4 new version string

it means you can have may difrent versions of the .net framework

in IIS you can select with runtime to use depending on the apppoool

Multi targeting

new project dialog box
filter available projects by target

diferent versions of the net framework  they can coexist in the same project without problems

ASP.NET 4

shorter web.config just 2 strings
you get a default template that looks similar to default project of asp.net  the id will be always the same that you assign
predictable -&gt; you assign a name but it makes it unique
auto -&gt; old behaviour

CSS
remove CSS adpters -&gt; rendertable false
many controls are les crap

view state management
profiler

you can optimize the IDE so it focusses intellisense, no editors. etc

optimize is what to use

asp.net can use the mvc routing engine
use in the global.asax the same  but poit to a view

again supports regular expressions
not the same that url rewritte (not sure why?)

SEO improvements
REsponse.redirect

they are saying you use MMVC or webforms

IIS SEO toolkit

web platform  seo
seo toolkit demo

he described  it as a very humbling exoerience

alt images importance
descriptions attributre missing
page contains unnecasary redirect

Javascript editing
faster Updating
library support

js librarues support is hard cause lib change a lot
cusotm lib support

support for cool tricks regarding intellisense and js
jquery

yahoo namespace

debugging js

RIA rich client
Asp.net AJAX  much smaller downloads
-

compression

Client templates

databinding on the c;ient side as well

jquery selectors

microsoft  CDN
content delivery network
some libraries  ajax.microsoft , jquery, some other
built in support with

EF

LinqToSql:  is alive

usage patterns
model first POCO

pluraliation singularization
lazy loading
full linq support
foreign keys can be exposed

discnected apis product object

T4 templates to customize code generation

Code only aproach _&gt; no need to
lfuent api cna be supported

you can use your own naming rules
( i wonder how_)

update model from db

ef creates fakes easily at least some suport for unit testing

performance improvments in the EF
caches the code gen

some complains about reflection
what are the perofmance improvements in EF?

automatic support for validation rules
by reflexion you get tose, in asp.net

asp.net Dynamic data
new field templates

Manyto many support

charts built-in

output cahce providers
automatically pre start applications - pre load data configure iis to do this
perf monitoting

syntax

deployment easier
MS deploy
end to end deploy
works in hosting works through firewalls
includesslls ACL, etc
compress and onlu push the deltas accorss

update db schema
2 web config -&gt; one deoky one for debug (cool =))

<strong>Silvelight Q &amp; A </strong>
- silvelight toolkit in codeplex ( no te olvides q estan basados en WPF)
- offline access how to deal with data synch
- the deepzoom composer debe ser como un sprite ?
se puede ahcer zoom a algun lugar particular de las cosas y tener un link a eso en especial
- silverlight supports webservices, SOAP support
can you unit test on the sandbocx
- Isolated storage !Mb default and there is some extra room but you need to request persmission from the user
there is an upper limit of about 50MB
- windows media server there is some limitations on the server side
- la diferencia entre WPF y silverligth is q el codigo de wpf es managed y el de silverlight no.
-Prism MVVM ,
- sample data source
-sketflow good for prototypes as oyu can define beaviours
- different personas? how do you
- photoshop  files  imported into sketchflow generates xaml code, woonder whats the impact of that
of that will genreate problems because of cide dependency
- Video - codecs? -&gt; how much freedom you have on these , different devices connection speeds
is that really an issue?
- tool for codec -&gt;av compare  shows side by side how an econded video displays
-video overlay credits can you add other mad stuff to it?
-es silverlight mutlithreaded
-IIs s=smooth streaming -&gt;
- GPU aceleration?
- smooth streaming and live streaming? scot sais yeah! =)
- some magnifier effects
-silverlight streaming
- ie 6 and  silverlight install questions
- whats new in silverlight 4?
- databinding -
-out of browser -&gt; SL 4 richer
- wcf | .net RIA -&gt; nice programing model
- RIA service spreview around PDC
- sharepoint new api
-easier to host silverlight apps
- hardware acceleration  really good for crapier devices
- HD resolution on netbooks
-is media services , smooth streaming clietn built in

- 2 second video
CDn

geoblocking , DRM play ready y
offline drm
-multicast support in SL4
-video into deep zom

drm chucks can be chunked but they are coded ther eis a ke

- thumbnails videos
-   double click]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>399</wp:post_id>
  <wp:post_date>2009-10-06 06:47:09</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="category" nicename="conference"><![CDATA[conference]]></category>
  <category domain="category" nicename="iis"><![CDATA[IIS]]></category>
  <category domain="category" nicename="silverlight"><![CDATA[silverlight]]></category>
  <category domain="category" nicename="technical-talks"><![CDATA[technical talks]]></category>
</item>
<item>
  <title>Asp.Net MVC first impressions</title>
  <link>http://roundcrisis.com/?p=409</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=409</guid>
  <description/>
  <content:encoded><![CDATA[I started using ASP.Net MVC a few days ago. After a watching a few presentations]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>409</wp:post_id>
  <wp:post_date>2009-10-08 00:30:36</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
</item>
<item>
  <title>Asp.Net MVC </title>
  <link>http://roundcrisis.com/?p=414</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=414</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>414</wp:post_id>
  <wp:post_date>2009-10-17 10:44:11</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
</item>
<item>
  <title>Windows Identity Foundation (Geneva)</title>
  <link>http://roundcrisis.com/?p=427</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=427</guid>
  <description/>
  <content:encoded><![CDATA[Some vocabulary first.

When i first started looking at WIF, Geneva , ADFS, and the federated identity implementation by microsoft I found the vocabulary a bit confusing, I knew Geneva was a code name, but I didnt know about all these other parts and I certaintly didnt know that Geneva ( now finally bauptised WIF) had other  names along the way (Zembratt wtf?).

Another thing that I wanted to know

On my first day researching this technology I set out to

Create an ASP.net MVC app that used WIF for authentication ( and ideally authorization) and find out how disruptive that was.

Some resources I used:

-

The training kit is really impressive, it has a setup app that runs some powershell comands that modifies you currentl]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>427</wp:post_id>
  <wp:post_date>2009-12-17 16:25:49</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Windows Identity Foundation Gotchas</title>
  <link>http://roundcrisis.com/?p=428</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=428</guid>
  <description/>
  <content:encoded><![CDATA[I ve been plauying aroud with WIF ( Windows Identity Foundation ) lately and these are a few gotchas that I collected along the way.

Concepts

- Naming: WIF is basically Geneva, before that it was called .., before it was called...

-

FedUtil

In my (really short) experience, this tool doesnt do what I expect. For example if you give it <a href="http://roundcrisis.files.wordpress.com/2009/12/federatedmetadata.png"><img class="alignleft size-medium wp-image-430" title="Federated Metadata" src="http://roundcrisis.files.wordpress.com/2009/12/federatedmetadata.png?w=300" alt="" width="300" height="226" /></a>a federated metadata like http://localhost/startersts when it generates the service references for a WCF client it will use the machine name ( so for example if your machine is called MyAwesomeMachine then in the ( aproximately 17  ) places where the url is used the url will be wrong, so unless you are using a cert that references that name and not localhost you wont be able to connect.

StarterSts

There is an open source STS available at]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>428</wp:post_id>
  <wp:post_date>2010-01-17 19:26:56</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="geneva"><![CDATA[Geneva]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="wif"><![CDATA[WIF]]></category>
</item>
<item>
  <title>Event Aggregator vs Publisher/Subscriber</title>
  <link>http://roundcrisis.com/?p=446</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=446</guid>
  <description/>
  <content:encoded><![CDATA[Not too long ago, I had to use pub/sub in an application. It was really helpful change and made the application easier to manage. However there were some complexities that needed to be handled  from all events all over the place( very ugly) to eventsbeeing neatly handled, however there was a few pain points: the publishers and subscribers were tightly coupled, there was always the danger of memory leaks ( this was in GWT, but in the end it was compiled to js)  and while I was using it I kept thinking that there must be a better way to handle the events.

I thought the publisher interface was quite lightweight but I didnt like the hihg dependency that the publishers and subscriber had , and didnt understand quite well how to handle unsubscribing and what were the possible issues of that ( ie memory leaks). Another problem with this is the

Come the Event Aggregator, the principle behind this pattern, as I see it , is that you aggregate all the events in one "bus" so there is no need]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>446</wp:post_id>
  <wp:post_date>2009-12-30 18:12:42</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>DDD By Eric Evans - Chapter 1</title>
  <link>http://roundcrisis.com/?p=451</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=451</guid>
  <description/>
  <content:encoded><![CDATA[So we are reading DDD by Eric Evans in Dublin alt.net,

Disclaimer: If you are reading this and thinking oh my gosh, this is so wrong, or even slightly disagree; I d love to hear about it.

this blog post is kind of a collection of the collective knowledge within the group, we started modelling a domain, I will expand later in this post.

Chapter 1 was focused on  a the Model , and how we think about the model:

- the model is <strong>not</strong> the representation of the requirements

- the model is a representation of "reality" that is suited to the problem we need to solve

- the model will change ... possibly a lot.

Reading at the first part where he is talking to the engineers about PCB design is clear his focus was on understanding and representing the <strong>model</strong> I know I m repeating myself here, however think about the first time you talk about a system with someone, do you focus on the model? or do you focus on the requisites?

Complexity, when is it neceasry to start workign in  a DDD way, this is a design tol that helps us solve the problem of complexity, if we are writing an  xml parser, do we really need a domain? the answer is , (as always) it depends of the problem you are trying to solve, in my opinion, experience and a good team will help finding the right balance.

like the prototype aproach because you can see that as a tool it works because "customers" get an idea of the actual result based on a real model,

This seem like a very consult based aproach, where you have a customer and you are trying to solve a problem, how about designing a product, where you know that you need to be more general

<strong>Ingredients of Effective Modelling</strong>
<ul>
	<li>Binding the model and the implementation: when i read this first, it confused me a bit, because I was thinking in terms of code,, my mistake, this is when you need to start reading some code I think.</li>
	<li>Cultivating a language based on the model: Completely sold on this, I think this is possibly one of the best things about DDD ( I m yet to learn about this so I m sure I ll find other things)</li>
	<li>Developing a knowledge rich model. Quote "The model wasn't just a data schema; it was integral to solving a complex problem. It captured knowledge of various kinds"  The previous sentence makes me think a lot about two things, first, that it sounds great, second, how to achieve that :)</li>
	<li>Distiling the model, expecting the model to evolve and change as we go along.</li>
	<li>Brainstorming and experimenting.  I think this also highlights the importance the team as a whole, plays in the design of a system. It also highlights the necesity for very fluent comunication between the team and having the <strong>customer</strong> (whoever is palying that role) available</li>
</ul>
Knowledge Crunching

I understand this section as a way to say, see all the stuff on the previous section... well, the way to achieve that is through trying and trying  a model until it makes sense to everyone, and how the way to approach model discovery is different to Waterfall, ie there is a continuous feedback in the process of modeling.

Continuous Learning

I like the start of this section: "When we start to write software, we never know enough" , even on domains we <em>think</em> we know.

This also reminded me about the importance of the team, because although the knowledge of the domain should be reflected on the code, and supporting documentation (...) all this knowledge is not 100% transferable

The learnign he si talking about is reflecte3d in this phrase: learned somethign aout PCB design yes, but mostly I learned to talk to PCb expeters, the focus is in the comunication

Knowledge Rich Design

Domain expeters are ont aware of how complex teir mental processes are,

this actually made me think that we dont ahve much literature in Building Software products ( ie not for just one customer/company, but for many)

<strong>Extracting a Hidden Concept</strong>

An example that makes a business rule more obvious

<strong>Deep Models</strong>

They seem to be about responsability

a way to look at the business
<h2>Our own Example</h2>
The system we are going to try to build revolves around a club and its members, one of the purpose of the system is to have events that are notified to contacts (these can be members of the club or not)

<a href="http://roundcrisis.files.wordpress.com/2010/01/domain.png"><img class="alignleft size-full wp-image-453" title="Model" src="http://roundcrisis.files.wordpress.com/2010/01/domain.png" alt="" width="460" height="314" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>451</wp:post_id>
  <wp:post_date>2010-01-29 10:43:12</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Use a View Model</title>
  <link>http://roundcrisis.com/?p=460</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=460</guid>
  <description/>
  <content:encoded><![CDATA[you use a fm for data access

you use a fm for  web

great, that doesnt mean you can pass nh object straigh into the view]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>460</wp:post_id>
  <wp:post_date>2010-01-25 15:30:26</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Automapper - Profiles</title>
  <link>http://roundcrisis.com/?p=474</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=474</guid>
  <description/>
  <content:encoded><![CDATA[Something quite useful that I didnt really find any docs for after a (very) quick search

is the Profiles feature of Automapper

<a href="http://www.lostechies.com/blogs/jimmy_bogard/archive/2010/02/01/automapper-1-0-rtw.aspx" target="_blank">Automapper </a>is a nice mapping library that converts instances from a type to another type, so its perfect for all those Domain types to Dto convertions, this normally means, that you ll have a lot of mappings to do. It was recently RTWed, so there is a few new thigs out there.

I have worked in projects that use Automapper, but the last few days I had to use it in anger.

I wasn't sure how to o

and that leaves you with the problems of where do we put all the mappings?, inline, looks dirty , so you can do something like this
<pre>			[Test]
			public void Given_a_profile_It_can_live_in_a_separate_namespace()
			{
				Mapper.Initialize(cfg =&gt; cfg.AddProfile());
				var activeTrade = new ActiveTrade();

				var dto = Mapper.Map(activeTrade);

				activeTrade.Blah.ShouldEqual(dto.Blah);
			}</pre>
and it was recently RTWed.

Anyway
the whole poit if this post (originally) was to show one of the features of automapper, I worked with projects that
use it but last few days I had to use it in anger and there were a few surprises for me anyway.

Firdt thigns first I had to update to a newer version of Automapper, and with that I got profiles and other goodness

Some things that I found strange

1)  Mapper is static?

so then I was reading about AM and the recomendation seem to be to have a configuration per something

but id din get the "best practise to be honest)

mapping by convention?
<pre>			[Test]
			public void Given_a_profile_It_can_live_in_a_separate_namespace()
			{
				Mapper.AddProfile(new MyProfile());
				var activeTrade = new ActiveTrade();

				var dto = Mapper.Map(activeTrade);

				activeTrade.Blah.ShouldEqual(dto.Blah);
			}</pre>
http://www.lostechies.com/blogs/jimmy_bogard/archive/2009/12/23/automapper-dsl-design-post-mortem.aspx]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>474</wp:post_id>
  <wp:post_date>2010-02-11 19:29:19</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Push on Green II - The Build Roulette</title>
  <link>http://roundcrisis.com/?p=498</link>
  <pubDate>Wed, 10 Mar 2010 15:35:20 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=498</guid>
  <description/>
  <content:encoded><![CDATA[<div id="_mcePaste">push on green More Brain dunmping</div>
<div id="_mcePaste">ok so lets suppose we are in a push on green environment</div>
<div id="_mcePaste">where your dependencies change without your explicit control</div>
<div id="_mcePaste">( is this it?)</div>
<div id="_mcePaste">now this could become the "build roulette" imagine this scenario</div>
<div id="_mcePaste">you are writting some tests and the dependencies change sundenly your test fail</div>
<div id="_mcePaste">and the failure is not related to your change</div>
push on green More Brain dunmping ok so lets suppose we are in a push on green environmentwhere your dependencies change without your explicit control( is this it?) now this could become the "build roulette" imagine this scenarioyou are writting some tests and the dependencies change sundenly your test failand the failure is not related to your change  Aceptance testing seems to focus a littelbti too much on the are the requirements complete , how do you verufy that the domain is correct ?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>498</wp:post_id>
  <wp:post_date>2010-03-10 15:35:20</wp:post_date>
  <wp:post_date_gmt>2010-03-10 15:35:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="push-on-green"><![CDATA[push-on-green]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Automapper Profiles</title>
  <link>http://roundcrisis.com/?p=500</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=500</guid>
  <description/>
  <content:encoded><![CDATA[Information found  <a href="http://groups.google.ie/group/automapper-users/browse_thread/thread/dd4948cbafcab6f0/fad05508b3833fd0?lnk=gst&amp;q=profile#" target="_blank">here</a> about profiles:

Profiles are a way to segregate configuration of type maps.  For example, we
have several different profiles on our current project:

ViewModelProfile (domain -&gt; UI view model)
EditModelProfile (domain -&gt; UI edit model)
ReportModelProfile (domain -&gt; UI reports)
MessageProfile (external messages -&gt; domain messages)

Type maps (created by Mapper.CreateMap) are global in scope, so that you
cannot create a mapping between two types in multiple profiles.  Each type
map can be assigned to one profile, and there is a default profile that all
type maps are assigned to, unless specified otherwise.

Profiles separate only certain types of configuration:

- Formatters (for object -&gt; string behavior)
- Nulls (for allowing null destination values)

The configuration scopes are:

Global
Profile
Type map
Property map

There are a few different ways to configure profiles, I suggest checking out
the available options in Mapper.Initialize for more.  We tend to create
concrete profiles by subclassing Profile, overriding the ProfileName
property, and overriding the Configure method to do profile configuration.
All configuration done inside a profile automatically assigns type maps
configured that profile.

How not to use

It might be obvious (or not) but if you do Mapper.Initialize(cfg =&gt; cfg.AddProfile) and you have other mappings this will blup

Another intersting thing

testing mappingEngine.Map(Source source, Destination destination)

need to be dont this way
<div id="_mcePaste">mappingEngineStub.Setup(x =&gt; x.Map(It.IsAny&lt;Source&gt;(), It.IsAny&lt;Destination&gt;()))</div>
<div id="_mcePaste">.Callback(() =&gt; destination.MyProperty = "Blah");</div>
why? because]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>500</wp:post_id>
  <wp:post_date>2010-03-01 17:25:10</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Cuke4Nuke - First Atempt</title>
  <link>http://roundcrisis.com/?p=515</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=515</guid>
  <description/>
  <content:encoded><![CDATA[I ve been meaning to try some frameworks for Acceptance testing for a while now, we have a need for it a work, which is always a great excuse to investigate a bit further.

Ive interested in <a href="http://cukes.info" target="_blank">Cucumber</a> for a while, liked the idea, but what s been putting me of it is the fact that it was hard to get it to work on Windwos and even harder to get it to work in a non web environment.. fast forward to now, there are a few alternatives.

One tool I ll need to try at some point soon is WebRat ()

ANyway I started of with Cuke4Nuke

Next step is to try SpecFlow]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>515</wp:post_id>
  <wp:post_date>2010-03-16 12:14:25</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Ninject - Why I like it</title>
  <link>http://roundcrisis.com/?p=523</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=523</guid>
  <description/>
  <content:encoded><![CDATA[<img class="alignleft" style="margin-right:10px;" src="http://enkari.com/images/icon-ninject.png" alt="" width="116" height="180" />Next wednesday there is an Alt.Net meetup where we are going to be discussing IoC frameworks, I know it sounds like an old topic but we all use one and we tend to stick with it ...because it works ( i guess) so we decided to dedicate one evening to see what the others have to offer.

For the last half a year or so I ve been using Ninject (version 2), coming from a very simplistic use of Windsor. And these are Ninjects strong points:
<ul>
	<li> Very <strong>easy to configure</strong>. All the configuration is code based and discoverable, you can get up and going very quickly</li>
	<li>Modules</li>
	<li>handy Provider</li>
</ul>
<a href="http://ninject.org/" target="_blank">Ninject web</a> |   <a href="http://wiki.github.com/enkari/ninject/" target="_blank">Documentation </a>|  <a href="http://github.com/enkari/ninject" target="_blank">Repository</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>523</wp:post_id>
  <wp:post_date>2010-04-06 16:54:10</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="di"><![CDATA[di]]></category>
  <category domain="post_tag" nicename="ioc"><![CDATA[ioc]]></category>
  <category domain="category" nicename="iocdi"><![CDATA[IoC/Di]]></category>
  <category domain="post_tag" nicename="ninject"><![CDATA[ninject]]></category>
</item>
<item>
  <title>Fluent NHibernate Mapping a Collection with backing field</title>
  <link>http://roundcrisis.com/?p=547</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=547</guid>
  <description/>
  <content:encoded><![CDATA[I had a class I wanted to map with Fluent NHibernate that looked like this:

so I searched around and there seemed to be a few options

Reveal.

was one but it did seem like there was

<a href="http://wiki.fluentnhibernate.org/Mapping_a_collection_that_uses_a_private_backing_field">http://wiki.fluentnhibernate.org/Mapping_a_collection_that_uses_a_private_backing_field</a>
<code>
public class OrderItem
{}
public class Order
{
private IList _orderItems;
public IEnumerable OrderItems { get { return _orderItems; } }
//...
}</code>

<code> </code>

<code> public class OrderMap : ClassMap
{
public OrderMap()
{
//....
HasMany(x =&gt; x.OrderItems)
.Cascade.SaveUpdate()
.KeyColumns.Add("ProductId")
.Inverse()
.Access.CamelCaseField(Prefix.Underscore);
}
}
</code>
jsut looking at the docs also found this

<a href="http://wiki.fluentnhibernate.org/Persistence_specification_testing">http://wiki.fluentnhibernate.org/Persistence_specification_testing</a>

wich doesnt reallly apply in the project I m working in at the moment but looks nice]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>547</wp:post_id>
  <wp:post_date>2010-04-08 14:32:15</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="fluentnhibernate"><![CDATA[FluentNhibernate]]></category>
  <category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>
  <category domain="post_tag" nicename="nhibernate"><![CDATA[NHibernate]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Changes &lt;- Refactoring</title>
  <link>http://roundcrisis.com/?p=557</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=557</guid>
  <description/>
  <content:encoded><![CDATA[Refatoring is funny

In gerneal is a great practise but too much of a good thing can also be bad for you?

When there is some change introduced to my code, and I m asked if I agree with the change I always hesitate,

why?

Well to complain"" about the change I need to have a compeling reason

It s unlikely i ll rembeber the decisions I made about the code

ok

we have tests that should catch those changes, but what happens when we are coding on a moving surface ( very movable btw)

The  quesiton I m trying to answer in my head is

when change to an existing code base happens and we need to review those changes

we would need a compeling reason to disagree with the changes and revert tham (say) or introduce even more change

and we are risking loosing detials of the original implementation, how do we not loose that]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>557</wp:post_id>
  <wp:post_date>2010-04-27 16:02:07</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Too many parameters in the constructors, internal kernels? </title>
  <link>http://roundcrisis.com/?p=559</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=559</guid>
  <description/>
  <content:encoded><![CDATA[multiple kernels within a solution seems a bit extreme

however sometimes that is necesary

how can we deal with increasing complexity when all we want is a clean API

examples are good for this

I want my command to

ONe thing I dont like about ioc is taht you could potentially have dependecies you dont actually need at all in the container,

the container is like a magical bag where yo u trhow everything you might need, you ll need to carry and pay for this weight at some point

why  and when to use multiple containers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>559</wp:post_id>
  <wp:post_date>2010-04-28 14:23:21</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Conferences, Community Events, etc</title>
  <link>http://roundcrisis.com/?p=578</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=578</guid>
  <description/>
  <content:encoded><![CDATA[I ll be Speaking about <strong>Lessons Learned in Unit Testing</strong> in:

- DDDSW - 5th of June Bristol, UK

- Epicenter - Trinity College, Dublin, Ireland

Both are really good events, dont hesitate to attend and say hi if you see me. All feedback welcome

I have to applaud the organisers of DDD, its such a fantastic event, and its free :)

Other upcoming events

- Irish Open Spaces Coding Day ( End of August/ early september) TBC

- OssBarcamp 25th and 26th of September

- DDD Ireland 25th of September]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>578</wp:post_id>
  <wp:post_date>2010-05-06 13:16:03</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>ExtJs Designer: yes it s a drag and drop tool</title>
  <link>http://roundcrisis.com/?p=581</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=581</guid>
  <description/>
  <content:encoded><![CDATA[So I was not vey excited about the ExtJs designer really when it came out

I gave it a spin and the only thing that I can think of is: it does what it should do

the markup it creates is... autogenerated (surpise surprise)

if you want to learn extjs , maybe dont use it cause you wont know what s going n]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>581</wp:post_id>
  <wp:post_date>2010-05-21 15:49:03</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Moq Verify</title>
  <link>http://roundcrisis.com/?p=585</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=585</guid>
  <description/>
  <content:encoded><![CDATA[I have been meaning to write this blog post for a while, I love moq, its a brilliant mocking framework.

Just a quick post about verification in Moq.

When you are using moq to create stubs you ll probably use

var  stubSomething = new Mock&lt;ISomething&gt;();

stubSomething.setup(...).Verifiable();

so basically by naming and by (not using) Verifiable in the end you are saying hey dudes, this is a stub

Honestly I would prefer this to be Stub&lt;&gt; so its a it more explicit ,also that way you could jsut get the object. and get the Setup as an extension method ... mmm

so if you are using

var mockSomething = new Mock&lt;ISomething&gt;();

mockSomethign.Setup(...).Verifiable();

//Action

mockSomething.Verify();

that will go green

if you do

var mockSomething = new Mock&lt;ISomething&gt;();

mockSomethign.Setup(...);

//Action

mockSomething.VerifyAll();

that will go green

Problem is

if you do

var mockSomething = new Mock&lt;ISomething&gt;();

mockSomethign.Setup(...);

//Action

mockSomething.Verify();

so just be aware of this , the way I found out this is by being paranoid, test is going green, make it fail again , just for the craic, verify that if the test passes is for the reason you think it is, and not something else]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>585</wp:post_id>
  <wp:post_date>2010-06-24 16:19:21</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="moq"><![CDATA[moq]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="unit-testing"><![CDATA[unit-testing]]></category>
</item>
<item>
  <title>When did Castle "Jumped the shark"</title>
  <link>http://roundcrisis.com/?p=592</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=592</guid>
  <description/>
  <content:encoded><![CDATA[Not long ago, I used a lot of the castle stack I used a lot of it: Monorail, Windsor, Rhino.common]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>592</wp:post_id>
  <wp:post_date>2010-06-29 14:29:49</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>git svn workflow</title>
  <link>http://roundcrisis.com/?p=594</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=594</guid>
  <description/>
  <content:encoded><![CDATA[I m sure there are 50M posts about how to use svn in conjunction with git. But I m writing this as a way to learn and hopefully get corrected about how to work with Subversion remotely and git locally.

To get the sources from svn you have two options

1) if you want history

git svn init -T &lt;svn repo&gt;

git svn fetch

(this could potentially take a lon long time, particularly if there is a big history )

2) quick and dirty , you are not intersted in the history

git svn clone -r XXX &lt;svn repo&gt;

this sholdn't take too long ( it took me a few minutes for a huge repo)

then do a git svn rebase before you start doing anything

(where XXX is your revision number)

then use git locally ( git commit -a)

Now its all good, right? well not really

In the end you are working on top of svn adn you need to treat it with <em>care</em> (I use italic for sarcasms sometimes)

for each gitsvn commit you ll have all your git commits being pushed one after the other to svn, this means that if you have CI and you didnt pa]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>594</wp:post_id>
  <wp:post_date>2010-07-15 13:22:48</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="scm"><![CDATA[scm]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Code Contracts and Pex</title>
  <link>http://roundcrisis.com/?p=606</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=606</guid>
  <description/>
  <content:encoded><![CDATA[Code contracts are available in .net 4

Its an evolution from Spec# and a  way to define]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>606</wp:post_id>
  <wp:post_date>2010-07-01 16:34:49</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="code-contract"><![CDATA[code-contract]]></category>
  <category domain="post_tag" nicename="pex"><![CDATA[pex]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Coding by Contracts with .Net 4</title>
  <link>http://roundcrisis.com/?p=608</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=608</guid>
  <description/>
  <content:encoded><![CDATA[So now Contracts are part of the .Net framework, this removes the question of should I add a dependency to code by contract or not.

Probably we all heard about what Code contracts at some point of our developer lives]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>608</wp:post_id>
  <wp:post_date>2010-08-12 12:51:17</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="code-contract"><![CDATA[code-contract]]></category>
  <category domain="post_tag" nicename="pex"><![CDATA[pex]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="unit-testing"><![CDATA[unit-testing]]></category>
</item>
<item>
  <title>Pex Coverage</title>
  <link>http://roundcrisis.com/?p=610</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=610</guid>
  <description/>
  <content:encoded><![CDATA[I m just going to post some stuff I learned about pex as I go along.

I m trying to find a workable workflow for TDD with Pex, but its proven a bit hard.

However these are some loose ends that I foudn on those travels.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>610</wp:post_id>
  <wp:post_date>2010-07-09 16:57:16</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Why .Net? July Meetup </title>
  <link>http://roundcrisis.com/?p=630</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=630</guid>
  <description/>
  <content:encoded><![CDATA[<div>The past  Wednesday the 21st of the July Meetup for Dublin Alt.Net we discussed Why .Net? (ie why are we using .Net and whats good and bad about it)</div>
<div>I took some notes while we were discussing this</div>
<div>
<ul>
	<li>Assumption that .Net devs are  spoon fed by Microsoft, is this real? My view on this is, When we say .net developers who are we really talking about? It appears that we see a fragmented scenario where we have the lazier developers that are not really interested and will do anything that seems good enough, and then the ones that do care and want to write good code, with varying levels of success. What is the result of this? there are developers that simply dont care to hear anything that is not MS, because, after all its "safe" and develoeprs that try to go the extra mille</li>
	<li>.Net a powerful framework, however not good to have the direction of it completely driven by a company.</li>
	<li>Microsoft very focused on creating good demos rapidly, however failing at even pointing at good practices .</li>
	<li>Why do we need Unity and MS Tests When we had Windsor, Ninject Structure Map and NUnit, xUnit, etc. Same approach with EF vs Nhibernate, MVC  and monorail, etc ( I don t remember if we got anywhere with this)</li>
	<li>Ruby looks like the platform of choice for entrepreneurs but why? Is it because is an opt in platform, that people consciously choose? The ethos of the community around ruby seems to be something like, "I did this this that is pretty cool, here I share it with you guys and make it more awesome" , also everyone seems to contribute there , where in .net none of the presents in the meeting where active commiters to any OSS project. And I can't help but wonder why. However we all use OSS frameworks one way or another.</li>
	<li>One of the open questions where, is there any framework (in any platform) that by default will guide you to write better code. The consensus on this one was that it comes down to the developer, Do they unit test? Do they care about good code?,  IS the developer thinking about maintainability of the code they are writting? . However, of course there are frameworks that are more obtrusive than others. Also <strong>good conventions</strong> can help.</li>
	<li>Problems particular to working on the .net stack:</li>
	<li>resistance to OSS from customers ?</li>
	<li>poor web hosting  offerings</li>
	<li>colleges tend to teach java, hence the pool of available developers is reduced. This is true perhaps in ireland, I went to college in Argentina where colleges were using C, C++,Pascal, Delphi, Visual Fox Pro (no comments on that :D )</li>
</ul>
</div>
<div>what I like: the framework, some of and What I would like to see improved</div>
<div>In this case the people involved in the discussion are very important,</div>
<div>However a good few interesting points were made</div>
<div>Basically the disucussion was around the</div>
<div>- it s about education, or lack of it</div>
<div id="_mcePaste">- it comes from MS</div>
<div id="_mcePaste">- demoware</div>
<div id="_mcePaste">- ruby good for enterprenurial but why?</div>
<div id="_mcePaste">- big sites on ruby on rails</div>
<div id="_mcePaste">- one platform for all</div>
<div id="_mcePaste">-maintainance? - if your a good developer</div>
<div id="_mcePaste">- test very improtant</div>
<div id="_mcePaste">- Do we believe that are platforms or fm that heklp you write</div>
<div id="_mcePaste">better code?</div>
<div id="_mcePaste">-flexibility is handy ,</div>
<div id="_mcePaste">-Good conventions can help</div>
<div id="_mcePaste">Is ruby more active because you opt in consiously?</div>
<div id="_mcePaste">was</div>
<div id="_mcePaste">if its windows its not cool</div>
<div id="_mcePaste">waht are the pain points?</div>
<div id="_mcePaste">- productivity is higher because there is a lot of mature</div>
<div id="_mcePaste">libraries</div>
<div id="_mcePaste">- not comunity oriented</div>
<div id="_mcePaste">-</div>
<div id="_mcePaste">Java - cross platform</div>
<div id="_mcePaste">-</div>
<div id="_mcePaste">Waht kind of libraries are not open sourced out</div>
<div id="_mcePaste">webflow (ie like a wizard)</div>
<div id="_mcePaste">twitter integration</div>
<div id="_mcePaste">a problim with using open source libraries</div>
<div id="_mcePaste">and customer askign for ms</div>
<div id="_mcePaste">in ruby =&gt; thisis awesome aproach, beign proud of what</div>
<div id="_mcePaste">maybe cultural</div>
<div id="_mcePaste">certification</div>
<div id="_mcePaste">comunity driven</div>
<div id="_mcePaste">open source</div>
<div id="_mcePaste">culture</div>
<div id="_mcePaste">hiring</div>
<div id="_mcePaste">iphone</div>
- it s about education, or lack of it- it comes from MS- demoware - ruby good for enterprenurial but why?- big sites on ruby on rails - one platform for all-maintainance? - if your a good developer  - test very improtant- Do we believe that are platforms or fm that heklp you write better code?  -flexibility is handy ,    -Good conventions can help Is ruby more active because you opt in consiously?was if its windows its not cool  waht are the pain points?  - productivity is higher because there is a lot of mature libraries  - not comunity oriented  - Java - cross platform - Waht kind of libraries are not open sourced out webflow (ie like a wizard)twitter integration  a problim with using open source libraries and customer askign for ms  in ruby =&gt; thisis awesome aproach, beign proud of what  maybe cultural  certification comunity driven  open sourceculture  hiring iphone  poor hosting offerings  most of us would need full trust to run some websites, at least in my experience this is not the default offering ,. some hsoting providers dont even know what taht means, or they dont put this on the specs
<h3>Some Related Blog posts about the topic</h3>
Garry Shutler - <a href="http://www.robustsoftware.co.uk/post/941414634/how-i-feel-about-dot-net" target="_blank">How I feel about .net lately</a>

Rob Connery - <a href="http://blog.wekeroad.com/2010/06/21/i-smell-smoke" target="_blank">I Smell Smoke</a>

Ayende Rahien <a href="http://feedproxy.google.com/~r/AyendeRahien/~3/gf42WZqs3Wo/if-i-run-dev-divhellip.aspx" target="_blank">If I ran Dev Div</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>630</wp:post_id>
  <wp:post_date>2010-09-24 10:20:01</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Code Contract gotchas with .Net 4</title>
  <link>http://roundcrisis.com/?p=643</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=643</guid>
  <description/>
  <content:encoded><![CDATA[<div>These are a few things I learned along the way about Code Contracts (in .net 4)</div>
<div>Interface Invariants</div>
<div>ContractClass and ContractClassFor</div>
An interesting note on this is that C# understands unbounded generic type names by simply omitting the type argument name.

[ContractClass(typeof(ISomethingContract&lt;&gt;))]
public interface ISomething
where X : IOrder
{
}

[ContractClassFor(typeof(ISomething&lt;&gt;))]
public abstract class ISomethingContract : ISomething

{
}
<h2>Postconditions</h2>
<div>Check Results</div>
<div>Contract.Ensures(null != Contract.Result&lt;resultType&gt;());</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>643</wp:post_id>
  <wp:post_date>2010-08-09 14:18:06</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
  <category domain="post_tag" nicename="code-contract"><![CDATA[code-contract]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Code Contracts Usage Patterns</title>
  <link>http://roundcrisis.com/?p=648</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=648</guid>
  <description/>
  <content:encoded><![CDATA[Hi there

I ve been using code contracts lately and there are some patterns that keep repeating themselves. I havent found many resources on code contracts but heres a few.

<strong>Interface / Abstract Class contract</strong>

You have a class, say  OrderService for example; that implements IOrderService you class could look like this

and your interface

and your contract

the same pattern can be applied to an abstract class
<pre>	}

	[ContractClassFor(typeof(IInterface1))]
	abstract class IInterface1Contracts : IInterface1
	{
		public Guid DoStuff()
		{
//			Contract.Ensures(Contract.Result&lt;Guid&gt;() != Guid.Empty);
			return Guid.Empty;
		}
	}

	[ContractClass(typeof(IInterface2Contracts&lt;&gt;))]</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>648</wp:post_id>
  <wp:post_date>2010-08-26 12:41:18</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Code Shapes</title>
  <link>http://roundcrisis.com/?p=671</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=671</guid>
  <description/>
  <content:encoded><![CDATA[<ul>
	<li></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>671</wp:post_id>
  <wp:post_date>2010-09-14 13:21:39</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>100% Unit Test Coverage gives you more than a figure</title>
  <link>http://roundcrisis.com/?p=684</link>
  <pubDate>Thu, 16 Sep 2010 09:09:07 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=684</guid>
  <description/>
  <content:encoded><![CDATA[Many times I thought 100% coverage is not worth it. I was very very wrong.

I wont try to convince anyone here, I will just give you examples of bugs I cached because I developed all these scenarios in a test driven  and then tried to reach 100% coverage.

I had a method that had an event attached to it
<pre>		public IUnitOfWork Create()		{			UnitOfWork unitOfWork = null;			try			{				unitOfWork = new UnitOfWork();				unitOfWork.OnDisposed += UnitOfWorkOnDisposed;				_tracker.SetCurrent(unitOfWork);			}			catch			{				if (unitOfWork != null)				{					unitOfWork.Dispose();				}				throw;			}			return unitOfWork;		}</pre>
<pre></pre>
<h4>Emerging Trends</h4>
<pre>It seems that I tend to not cover exception paths well. I think its because my workflow is code, and then run Code contracts, CA, etc</pre>
<pre>when running code contracts you tend to add some exception throwing and handling so .. I guess that’s why</pre>
<pre></pre>
<h4>Pros</h4>
<pre>- it catches a lot of potential bugs , and its proven that caching bugs earlier is more efficient and cheaper in the long run</pre>
<pre>- when 100% achieved it gives you some sort of finishing line.</pre>
<pre>- It forces you to read the code , and in many cases to refactor. I’ve found code that I couldn’t test,</pre>
<pre></pre>
<pre>Cons</pre>
<pre>- It’s a bit tedious, feels like a drag and a bit obtrusive</pre>
<pre>- When you find a big problem sometimes you are not sure its just the tooling or if there is really a potential problem.</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>684</wp:post_id>
  <wp:post_date>2010-09-16 09:09:07</wp:post_date>
  <wp:post_date_gmt>2010-09-16 09:09:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mocking"><![CDATA[mocking]]></category>
  <category domain="category" nicename="moq"><![CDATA[moq]]></category>
  <category domain="category" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <category domain="post_tag" nicename="unit-testing-coverage-mocking"><![CDATA[unit-testing coverage mocking]]></category>
</item>
<item>
  <title>Serializing Xml – Non Generic</title>
  <link>http://roundcrisis.com/?p=686</link>
  <pubDate>Wed, 08 Sep 2010 17:06:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=686</guid>
  <description/>
  <content:encoded><![CDATA[<p>I had a requirement the other day to serialise and deserialise a bunch of classes that implement an interface. Part of the requirement was that the class would be serialized to xml and persisted in some for of storage.</p>  <p>I set out to do this, with the typical optimistic view that this was a short task; a solved problem, and like Columbus when he landed in America(and he thought he was in India) I was wrong.</p>  <p>To make a long story short, I ll tell you about the solution I’ve reached. If there are better, I’d love to know.</p>  <p>The main problem with serializing xml for a bunch of classes that implement an Interface, is that when I m deserializing, I wont know the concrete type and an <em>XmlSerializer</em> has the following constructors</p>  <p><a href="http://msdn.microsoft.com/en-us/library/system.xml.serialization.xmlserializer.xmlserializer.aspx"><img style="display:inline;border-width:0;" title="Capture" border="0" alt="Capture" src="http://roundcrisis.files.wordpress.com/2010/09/capture1.png" width="119" height="244" /></a> </p>  <p>as you can see here, the ctor with no parameters is protected, so one way or another I need the type (or the type mapping), I took the simplest possible route and stored the type in a string. In my case I needed an Assembly Qualified Name with no version ( because we could move the assembly version but keep the type) </p>  <p>The signature of my serialization methods had to be non generic </p>  <p>Some sample classes I want to serialize</p>  <p>&#160;</p>  <pre>//			using (var memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(serializedDomainEvent)))<br />			//			{<br />			//				var formatter = new XmlSerializer(eventType, new[] { eventType });<br />			//<br />			//				var deserilizedType = formatter.Deserialize(memoryStream);<br />			//				if (deserilizedType == null)<br />			//				{<br />			//					throw new StorageException(&quot;Problem deserializing the events&quot;);<br />			//				}<br />			//				return (IDomainEvent)deserilizedType;<br />			//			}</pre>

<p><strong>Protocol Buffers .net</strong></p>

<p>There are a few alternatives worth looking into, and protocol buffers is definetly one of them</p>

<p>If you are happy serializing to Binary then this could be an interesting option</p>

<pre>		[Test]<br />		public void Serializes_as_expected()<br />		{<br />		    var personCreatedEvent = new PersonCreatedEvent() {Id = 2, Name = &quot;Andrew O Connor&quot;};<br />		    using (var ms = new MemoryStream())<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Serializer.NonGeneric.Serialize(ms, personCreatedEvent);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; var streamReader = new StreamReader(ms);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ms.Position = 0;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; var readToEnd = streamReader.ReadToEnd();<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; var evntType = typeof(PersonCreatedEvent);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ms.Position = 0;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; var deserialize = (PersonCreatedEvent)Serializer.NonGeneric.Deserialize(evntType, ms);<br />&#160; Assert.AreEqual(personCreatedEvent.Id, deserialize.Id);<br />&#160; Assert.AreEqual(personCreatedEvent.Name, deserialize.Name);<br /> <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }</pre>

<p>&#160;</p>

<p>XmlWriter meant I had to get each class that implemented ISomething to also implement IXmlSerializable that meant something like this on each class</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>686</wp:post_id>
  <wp:post_date>2010-09-08 17:06:00</wp:post_date>
  <wp:post_date_gmt>2010-09-08 17:06:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="category" nicename="serialization"><![CDATA[serialization]]></category>
</item>
<item>
  <title>Code Contracts Resources</title>
  <link>http://roundcrisis.com/?p=687</link>
  <pubDate>Thu, 16 Sep 2010 11:10:16 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=687</guid>
  <description/>
  <content:encoded><![CDATA[<p>If you are using Code Contracts with .net then you might find the following resources useful</p>  <p>&#160;</p>  <ul>   <li>If you use resharper get the code contracts live templates they are really handy <a href="http://devjourney.com/blog/code-contracts-livetemplate-for-resharper/">here</a>. Less typing for example type <strong>ce</strong> for Contract.Ensures(&lt;type here&gt;); </li>    <li>User docs, available from [<a href="http://research.microsoft.com/en-us/projects/contracts/userdoc.pdf">pdf link</a>] A necesary reading if you are using Code contracts, after all is pretty new, and the information is comprehensive </li>    <li>Visual Studio Extension (by Mike Barret) <a href="http://visualstudiogallery.msdn.microsoft.com/en-us/85f0aa38-a8a8-4811-8b86-e7f0b8d8c71b">http://visualstudiogallery.msdn.microsoft.com/en-us/85f0aa38-a8a8-4811-8b86-e7f0b8d8c71b</a> </li> </ul>  <p>&#160;</p>  <p>There are still a good few glitches in the contracts, for example I had problems with contracts not being re-written to the dll.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>687</wp:post_id>
  <wp:post_date>2010-09-16 11:10:16</wp:post_date>
  <wp:post_date_gmt>2010-09-16 11:10:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Serializing Exceptions? Don't forget ISafeSerializationData (.net 4)</title>
  <link>http://roundcrisis.com/?p=701</link>
  <pubDate>Fri, 24 Sep 2010 14:25:15 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=701</guid>
  <description/>
  <content:encoded><![CDATA[I was writing some code recently that required custom exceptions, and they had to be serializable. Testing this exceptions was already a bit of a pain, due to the SerializationInfo, I ll talk a bit more about this later, however I just saw a twitt <a title="http://twitter.com/sbohlen" href="http://twitter.com/sbohlen">by http://twitter.com/sbohlen</a> <a href="http://roundcrisis.files.wordpress.com/2010/09/capture3.png"><img style="display:inline;border:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2010/09/capture_thumb2.png" border="0" alt="Capture" width="244" height="74" /></a>

and I though… hold on, this could totally catch me.  in the Msdn Documentation there following paragraph
<blockquote>In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the GetObjectData() method. Starting with .NET Framework 4.0, that method is marked with the <a href="http://msdn.microsoft.com/en-us/library/system.security.securitycriticalattribute.aspx">SecurityCriticalAttribute</a> attribute which prevents execution in security-transparent code. To work around this condition, implement the ISafeSerializationDatainterface and add custom data as shown in the example below.</blockquote>
<a href="http://msdn.microsoft.com/en-us/library/ee191569.aspx" target="_blank">Security Transparent</a> code,  great chance to go and look this up ,]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>701</wp:post_id>
  <wp:post_date>2010-09-24 14:25:15</wp:post_date>
  <wp:post_date_gmt>2010-09-24 14:25:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="category" nicename="net4"><![CDATA[net4]]></category>
  <category domain="category" nicename="serialization"><![CDATA[serialization]]></category>
  <category domain="post_tag" nicename="serialization-net"><![CDATA[serialization .net]]></category>
</item>
<item>
  <title>7L7W - Scala Day 2</title>
  <link>http://roundcrisis.com/?p=718</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=718</guid>
  <description/>
  <content:encoded><![CDATA[Apparently, this chapter is about the most functional aspect of Scala.

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>718</wp:post_id>
  <wp:post_date>2010-11-11 15:52:54</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Using AggregateException for validation error aggregation</title>
  <link>http://roundcrisis.com/?p=759</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=759</guid>
  <description/>
  <content:encoded><![CDATA[This is a bit inline with the previous post, tho on the implementation detail side of things.

As you know in CQRS, the way to handle a command failure is by thrpo]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>759</wp:post_id>
  <wp:post_date>2010-12-01 16:42:47</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Manos de Mono - Creating a simple website</title>
  <link>http://roundcrisis.com/?p=781</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=781</guid>
  <description/>
  <content:encoded><![CDATA[So yesterday I went to try to create my first website.

If you use windows and in a hurry, you are better off using these assemblies

then

To be honest, the hardest part of using manos de mono at this very time is the fact that I m windows based, the way this platform is built is lightweight and easy to use if you come from the mono world, if you are VS based... not so, buit this might be the best thing yet... it all depends on how the project grows, I d love to have some more visibility as to where the project ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>781</wp:post_id>
  <wp:post_date>2011-02-07 15:36:58</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>CQRS Part 4: the validation question</title>
  <link>http://roundcrisis.com/?p=783</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=783</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>783</wp:post_id>
  <wp:post_date>2011-02-10 10:23:05</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>CQRS part 4: When to use</title>
  <link>http://roundcrisis.com/?p=785</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=785</guid>
  <description/>
  <content:encoded><![CDATA[I am going to diverge a bit from the previous plan and talk about when I think you get a benefit out of CQRS and CQRS with ES.

I think this is not a widely discussed topic and I'm hoping this will help in the conversation.

Intentional

Domain

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>785</wp:post_id>
  <wp:post_date>2011-02-24 19:04:35</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>When a NullReferenceException happens... </title>
  <link>http://roundcrisis.com/?p=789</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=789</guid>
  <description/>
  <content:encoded><![CDATA[Nothing more frustrating than a null reference exception...

Funny, but we dont seem to like looking at huge stack traces

When do they happen
What to do

talk about contracts and how a hard fail places the responsability on the call site , is this a good idea?

Never catch a NullReferenceException]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>789</wp:post_id>
  <wp:post_date>2011-07-08 11:54:13</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>One click deployment</title>
  <link>http://roundcrisis.com/?p=793</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=793</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>793</wp:post_id>
  <wp:post_date>2011-03-21 16:22:54</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title/>
  <link>http://roundcrisis.com/?p=795</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=795</guid>
  <description/>
  <content:encoded><![CDATA[I ve been talking to some people over the past few months about CQRS, particularly CQRS/ES and at some point of the conversation I get the <strong>framework </strong>question.  I think the implementation of the patterns CQRS and ES is not trivial (it's also not necessary to do both , but lets keep going) however, the escence of the advantages you get out of both comes from implementing the rules of the domain, in the domain. By making the state transitions explicit, by decoupling by messaging]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>795</wp:post_id>
  <wp:post_date>2011-03-25 12:41:18</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Importing an svn repository to mercurial and then push to your remote server</title>
  <link>http://roundcrisis.com/?p=796</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=796</guid>
  <description/>
  <content:encoded><![CDATA[The switch from svn to a distributed source control is inevitable, distributed makes merging simpler... and all other operations faster. Have you ever need to read the log for a file  and wait... and  checkout  and , yes you guessed, wait.

All the cool kids seem to prefer git, I used git broke a few repositories, learned a little, but to be honest found that it added friction to my workflow, perhaps I need to learn more, then I tried mercurial, and perhaps because I learned something about git before, tooling for mercurial in windows is better than for git and the commands are more obvious. This is a nice post about the <a href="http://importantshock.wordpress.com/2008/08/07/git-vs-mercurial/">differences between Git and Mercurial</a>, in case you are interested. In my opinion, they are quite similar, but for the normal user of svn, hg (Mercurial) seems to be the less friction way, after all , you want to write code, not spend ages learning a new source control system.

Anyway, the subject of this post was to convert an svn repo to Mercurial , so let's get to it:
<ol>
	<li>you need to modify your config file to include convert</li>
	<li>I m using Hg convert, this is a very simple and well described command: so in my c:\source\myproject I ran something like hg convert svn://myrepo/FooBar  , by default it will create a folder with whatever your svn project is and</li>
	<li>open a command line and navigate to c:\source\myproject\foobar-hg (the folder was created by hg convert and it is now an hg repository) . At this point please note that Hg convert basically grabbed the changes from each commit of your svn repo and add it to the just created hg repository, this is the reason why when you go to the this folder all you ll see is the .hg folder</li>
	<li>run hg update , this will make your source code available to you.</li>
</ol>
Some other handy links

<a href="http://mercurial.selenic.com/wiki/ConvertExtension">Convert Extension</a> From the mercurial docs]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>796</wp:post_id>
  <wp:post_date>2011-04-27 09:52:05</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Raven DB– Getting a distinct Reduce</title>
  <link>http://roundcrisis.com/?p=851</link>
  <pubDate>Wed, 14 Sep 2011 09:53:35 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=851</guid>
  <description/>
  <content:encoded><![CDATA[<p>Raven DB is a linq enabled document database. </p>  <p>For more information on how to get started with Raven please check</p>  <p>//brief intro to index</p>  <p>Recently, I had to create an interesting index unique per day and a string (in this case called source)</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>851</wp:post_id>
  <wp:post_date>2011-09-14 09:53:35</wp:post_date>
  <wp:post_date_gmt>2011-09-14 09:53:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Easily switch between Embedded and server based Document Store in Raven</title>
  <link>http://roundcrisis.com/?p=877</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=877</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>877</wp:post_id>
  <wp:post_date>2011-10-06 16:33:35</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Revisiting the Code Shapes project</title>
  <link>http://roundcrisis.com/?p=879</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=879</guid>
  <description/>
  <content:encoded><![CDATA[A long time ago I started writting Code Shapes, based on a blog post by Michael Feathers

Really interesting project and I hope I can find some use for it. Lets say I wont think about it for a moment

Some things I learned along the way

- graphviz:  Getting re acquainted with graph theory was refreshing and a very feature full library.

- I never really played a lot with Process, this time I had to find good ways to deal with a Process call and how to deal with failure

- File and Folder. What are good defaults when you want zero configuration and you really really dont know where this is going to be running

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>879</wp:post_id>
  <wp:post_date>2011-10-21 11:56:51</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Sagas and testing</title>
  <link>http://roundcrisis.com/?p=881</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=881</guid>
  <description/>
  <content:encoded><![CDATA[I ve been using stateless inside]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>881</wp:post_id>
  <wp:post_date>2011-12-20 12:28:02</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Euler integration</title>
  <link>http://roundcrisis.com/?p=893</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=893</guid>
  <description/>
  <content:encoded><![CDATA[What is Euler integration?

&nbsp;

Why would anyone care?

Well if you are trying to]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>893</wp:post_id>
  <wp:post_date>2011-11-15 13:41:18</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Handy Game Dev Resources: sounds, sprites, images.</title>
  <link>http://roundcrisis.com/?p=907</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=907</guid>
  <description/>
  <content:encoded><![CDATA[Some handy links/resources for gamedev:
<div>
<div><a href="http://www.pixelprospector.com/indie-resources/" target="_blank">http://www.pixelprospector.com/indie-resources/</a>  The page provides an easy and nice overview of all the topics and articles that you can find here on PP.</div>
<div><a href="http://opengameart.org/" target="_blank">http://opengameart.org/</a> : from their FAQ: If you've ever browsed Free/Open Source game sites (such as <a href="http://happypenguin.org/">The Linux Game Tome</a>, you'll notice that a fairly significant number of the games available suffer from what's lovingly referred to as 'programmer art'. There are, of course, some <a href="http://wesnoth.org/">notable exceptions</a> to this, but it's clear that, for an open source game to produce good art, it has to become large and popular enough to attract artists.Unfortunately, many fun and well-designed games never reach this point and are thus stuck with placeholder art, which ultimately detracts from their appeal and popularity. Furthermore, it's not unheard of for open source projects to rip their placeholder art from commercial games, which is illegal and could conceivably result in a lawsuit.
<p id="aeaoofnhgocdbnbeljkmbjdmhbcokfdb-mousedown">The purpose of this site is to provide a solid (and hopefully ever-expanding) variety of high quality, freely licensed art, so that free/open source game developers can use it in their games.</p>

<div><a href="http://www.soundsresource.com/" target="_blank">http://www.soundsresource.com/</a> Well organized sounds, I searched for Monkey and found none, but there was 1000+ for cats.. go figure :D</div>
<div><a href="http://www.lostgarden.com/search/label/free%20game%20graphics" target="_blank">http://www.lostgarden.com/search/label/free%20game%20graphics</a></div>
<div><a href="http://untamed.wild-refuge.net/rmxpresources.php?characters" target="_blank">http://untamed.wild-refuge.net/rmxpresources.php?characters</a></div>
</div>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>907</wp:post_id>
  <wp:post_date>2011-11-24 15:59:41</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Public Speaking</title>
  <link>http://roundcrisis.com/speaking/</link>
  <pubDate>Wed, 10 Oct 2012 14:24:19 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?page_id=1034</guid>
  <description/>
  <content:encoded><![CDATA[<ul>
	<li><strong><a href="http://www.dotnetrocks.com/default.aspx?showNum=910" target="_blank">.Net Rocks </a></strong>[Podcast] Building a game in .Net</li>
	<li><strong><a href="http://skillsmatter.com/podcast/open-source-dot-net/a-tutorial-by-andrea-magnorsky">SkillMatter </a>London</strong>– May 2013 – Abusing C# for .Net development London, UK</li>
	<li><strong><a href="http://www.gamesfleadh.ie/gamespro/" target="_blank">Games Fleadh</a></strong> - March 2013 - XNA is dead, long live monoGame</li>
	<li><strong><a href="http://www.microsoft.com/ireland/app/event.html" target="_blank">Gaming reimagined</a></strong> - February 2013 - Monogame</li>
	<li><strong><a href="http://www.skycon.skynet.ie/2012/timetable.php" target="_blank">Skycon 12</a></strong> - October 2012 - "It works on all machines". Limerick, Ireland</li>
	<li><strong><a href="http://skillsmatter.com/podcast/home/ravendb-intro" target="_blank">SkillMatter</a> London</strong>– May 2012 – Intro to Raven DB. London, UK</li>
	<li><strong>Belfast UG meetup 2011–</strong> CQRS/ES and Friends possibly distributed systems intentionally. Belfast, UK</li>
	<li><strong>DDD Scotland 2011– </strong>CQRS/ES and Friends possibly distributed systems intentionally. Glasgow, UK</li>
	<li><strong>Epicenter 2010 – </strong>Lessons Learned in Unit Testing. Dublin, Ireland</li>
	<li><strong>DDD Reading 2010 – </strong>Lessons Learned in Unit Testing. Reading, UK</li>
	<li><strong>DDD Belfast 2009 - </strong>An Introduction to Monorail. Belfast, UK<strong>
</strong></li>
	<li><strong>OssBarcamp 2009 - </strong>An Introduction to Monorail. Dublin, UK</li>
</ul>
And other several podcasts and video recordings in <a href="http://32minutos.net/" target="_blank">32minutos</a> (podcast about software in Spanish).]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1034</wp:post_id>
  <wp:post_date>2012-10-10 14:24:19</wp:post_date>
  <wp:post_date_gmt>2012-10-10 14:24:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>speaking</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-10-10 14:24:19]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Capture1.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture1-png-3/</link>
  <pubDate>Mon, 27 May 2013 11:26:01 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture12.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1101</wp:post_id>
  <wp:post_date>2013-05-27 11:26:01</wp:post_date>
  <wp:post_date_gmt>2013-05-27 11:26:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture1-png-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture12.png</wp:attachment_url>
</item>
<item>
  <title>Capture1_thumb.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture1_thumb-png-3/</link>
  <pubDate>Mon, 27 May 2013 11:26:03 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture1_thumb2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1102</wp:post_id>
  <wp:post_date>2013-05-27 11:26:03</wp:post_date>
  <wp:post_date_gmt>2013-05-27 11:26:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture1_thumb-png-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture1_thumb2.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture-png-21/</link>
  <pubDate>Mon, 27 May 2013 11:26:05 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1103</wp:post_id>
  <wp:post_date>2013-05-27 11:26:05</wp:post_date>
  <wp:post_date_gmt>2013-05-27 11:26:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-21</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture3.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/capture_thumb-png-17/</link>
  <pubDate>Mon, 27 May 2013 11:26:08 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/05/capture_thumb2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1104</wp:post_id>
  <wp:post_date>2013-05-27 11:26:08</wp:post_date>
  <wp:post_date_gmt>2013-05-27 11:26:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-17</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1077</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/05/capture_thumb2.png</wp:attachment_url>
</item>
<item>
  <title>Capture.png</title>
  <link>http://roundcrisis.com/2013/06/22/multithreaded-game-engineusing-concurrent-collections-instead/capture-png-22/</link>
  <pubDate>Sat, 22 Jun 2013 16:09:07 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/06/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1125</wp:post_id>
  <wp:post_date>2013-06-22 16:09:07</wp:post_date>
  <wp:post_date_gmt>2013-06-22 16:09:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture-png-22</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1127</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/06/capture.png</wp:attachment_url>
</item>
<item>
  <title>Capture_thumb.png</title>
  <link>http://roundcrisis.com/2013/06/22/multithreaded-game-engineusing-concurrent-collections-instead/capture_thumb-png-18/</link>
  <pubDate>Sat, 22 Jun 2013 16:09:09 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/06/capture_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1126</wp:post_id>
  <wp:post_date>2013-06-22 16:09:09</wp:post_date>
  <wp:post_date_gmt>2013-06-22 16:09:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capture_thumb-png-18</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1127</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/06/capture_thumb.png</wp:attachment_url>
</item>
<item>
  <title>image.png</title>
  <link>http://roundcrisis.com/2013/06/22/multithreaded-game-engineusing-concurrent-collections-instead/image-png-5/</link>
  <pubDate>Sat, 22 Jun 2013 16:27:30 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/06/image.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1129</wp:post_id>
  <wp:post_date>2013-06-22 16:27:30</wp:post_date>
  <wp:post_date_gmt>2013-06-22 16:27:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image-png-5</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1127</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/06/image.png</wp:attachment_url>
</item>
<item>
  <title>image_thumb.png</title>
  <link>http://roundcrisis.com/2013/06/22/multithreaded-game-engineusing-concurrent-collections-instead/image_thumb-png-5/</link>
  <pubDate>Sat, 22 Jun 2013 16:27:32 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/06/image_thumb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1130</wp:post_id>
  <wp:post_date>2013-06-22 16:27:32</wp:post_date>
  <wp:post_date_gmt>2013-06-22 16:27:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image_thumb-png-5</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1127</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/06/image_thumb.png</wp:attachment_url>
</item>
<item>
  <title>image.png</title>
  <link>http://roundcrisis.com/2013/06/22/multithreaded-game-engineusing-concurrent-collections-instead/image-png-6/</link>
  <pubDate>Sat, 22 Jun 2013 16:27:34 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/06/image1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1131</wp:post_id>
  <wp:post_date>2013-06-22 16:27:34</wp:post_date>
  <wp:post_date_gmt>2013-06-22 16:27:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image-png-6</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1127</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/06/image1.png</wp:attachment_url>
</item>
<item>
  <title>image_thumb.png</title>
  <link>http://roundcrisis.com/2013/06/22/multithreaded-game-engineusing-concurrent-collections-instead/image_thumb-png-6/</link>
  <pubDate>Sat, 22 Jun 2013 16:27:36 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.files.wordpress.com/2013/06/image_thumb1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1132</wp:post_id>
  <wp:post_date>2013-06-22 16:27:36</wp:post_date>
  <wp:post_date_gmt>2013-06-22 16:27:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image_thumb-png-6</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1127</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://roundcrisis.files.wordpress.com/2013/06/image_thumb1.png</wp:attachment_url>
</item>
<item>
  <title>Home</title>
  <link>http://roundcrisis.com/?p=1139</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=1139</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1139</wp:post_id>
  <wp:post_date>2013-12-31 10:37:36</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[1139]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://roundcrisis.com/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1388486256]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://roundcrisis.com/?p=1140</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=1140</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1140</wp:post_id>
  <wp:post_date>2013-12-31 10:37:36</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[2]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1388486256]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://roundcrisis.com/?p=1141</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=1141</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1141</wp:post_id>
  <wp:post_date>2013-12-31 10:37:36</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[1034]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1388486257]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Moving</title>
  <link>http://roundcrisis.com/2008/12/08/moving/</link>
  <pubDate>Mon, 08 Dec 2008 17:50:57 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=3</guid>
  <description/>
  <content:encoded><![CDATA[Hi there. This is my firt post in wordpress, I ll be  migrating all previous posts from <a href="http://ohmygodiamacat.blogspot.com/">http://ohmygodiamacat.blogspot.com/ </a>
So many questions so little time ....]]></content:encoded>
  <excerpt:encoded><![CDATA[Moving blog]]></excerpt:encoded>
  <wp:post_id>3</wp:post_id>
  <wp:post_date>2008-12-08 17:50:57</wp:post_date>
  <wp:post_date_gmt>2008-12-08 17:50:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>moving</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="moving_blog"><![CDATA[moving_blog]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-12-08 17:50:57]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Nhibernate from the begining</title>
  <link>http://roundcrisis.com/2008/05/22/nhibernate-from-the-begining/</link>
  <pubDate>Thu, 22 May 2008 10:48:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/05/22/nhibernate-from-the-begining/</guid>
  <description/>
  <content:encoded><![CDATA[I ve been suing NH for a while now, but i never started a project from the begining or used purely nh (I mean without Castle Active Record) started to read NHibernate in Action ( the EAP edition) so let see how it goes.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>8</wp:post_id>
  <wp:post_date>2008-05-22 10:48:00</wp:post_date>
  <wp:post_date_gmt>2008-05-22 10:48:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>nhibernate-from-the-begining</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/05/nhibernate-from-begining.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-05-22 10:48:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Some Cool Things</title>
  <link>http://roundcrisis.com/2008/06/05/some-cool-things/</link>
  <pubDate>Thu, 05 Jun 2008 06:57:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/05/some-cool-things/</guid>
  <description/>
  <content:encoded><![CDATA[<span class="blsp-spelling-corrected">Today's</span> interesting find is <a href="http://re3-bplus-001.yos.re3.yahoo.com/docs/samples/">Browser Plus</a> I heard about this first a few months ago but there was not much real info about it.<br />I have to say i was really impressed by the installer short, sweet and very intuitive.<br />Also the capabilities that it provides seem simple but <span class="blsp-spelling-corrected">powerful</span>, i m very interested in the Ruby Interpreter Service<br />Promising.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>10</wp:post_id>
  <wp:post_date>2008-06-05 06:57:00</wp:post_date>
  <wp:post_date_gmt>2008-06-05 06:57:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>some-cool-things</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="browser-plus"><![CDATA[browser plus]]></category>
  <category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/some-cool-things.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-05 06:57:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Umbrella</title>
  <link>http://roundcrisis.com/2008/06/05/umbrella/</link>
  <pubDate>Thu, 05 Jun 2008 12:22:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/05/umbrella/</guid>
  <description/>
  <content:encoded><![CDATA[Today ayende blogged about this and i found it really interesting<br />here: <a href="http://www.codeplex.com/umbrella">http://www.codeplex.com/umbrella#</a>  you can get the code and tests<br /><br /><a href="http://ayende.com/Blog/archive/2008/06/04/Review-Umbrella-project.aspx">http://ayende.com/Blog/archive/2008/06/04/Review-Umbrella-project.aspx</a> ayendes blog]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>11</wp:post_id>
  <wp:post_date>2008-06-05 12:22:00</wp:post_date>
  <wp:post_date_gmt>2008-06-05 12:22:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>umbrella</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ayende"><![CDATA[ayende]]></category>
  <category domain="category" nicename="umbrella-project"><![CDATA[umbrella project]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/umbrella.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-05 12:22:00]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8a660e951176c389bc425c1036490181</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b5fe01a4c459f2b6abc3aa14ca4b91b8</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Hidden Doc Gem - ExtJS</title>
  <link>http://roundcrisis.com/2008/06/05/hidden-doc-gem-extjs/</link>
  <pubDate>Thu, 05 Jun 2008 12:44:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/05/hidden-doc-gem-extjs/</guid>
  <description/>
  <content:encoded><![CDATA[hi again<br /><br /><br /><span class="blsp-spelling-corrected">OK</span> i just found this out last <span class="blsp-spelling-corrected">Monday</span> and it was there <span class="blsp-spelling-error">all</span> along i just never paid <span class="blsp-spelling-corrected">attention</span> to it and found it <span class="blsp-spelling-corrected">extremely</span> handy.<br />This <a href="http://extjs.com/learn/Ext_Manual">http://extjs.com/learn/Ext_Manual</a> there is a lot of <span class="blsp-spelling-error">JS</span> <span class="blsp-spelling-corrected">introduction</span> and also good to read about the component model <a href="http://extjs.com/learn/Ext_2_Overview#Component_Model">http://extjs.com/learn/Ext_2_Overview#Component_Model</a><br />I just though i d blog about it cause It was easy to miss]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2008-06-05 12:44:00</wp:post_date>
  <wp:post_date_gmt>2008-06-05 12:44:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hidden-doc-gem-extjs</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="extjs"><![CDATA[ExtJs]]></category>
  <category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/hidden-gem-extjs.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-05 12:44:00]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7369a6b24db4775158d02978c7443410</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_61d632d58ec8605d41d483b6d0fc6495</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Another Debugger for IE</title>
  <link>http://roundcrisis.com/2008/06/05/another-debugger-for-ie/</link>
  <pubDate>Thu, 05 Jun 2008 19:21:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/05/another-debugger-for-ie/</guid>
  <description/>
  <content:encoded><![CDATA[We all know how painful it is to debug websites in <span class="blsp-spelling-error">ie</span>, (particularly 6 what a terrible browser that.... i ll rant properly about it another day) today i stumbled across this little tool call <a href="http://www.my-debugbar.com/wiki/"><span class="blsp-spelling-error">DebugBar</span> </a> it was all great until I installed it in my machine and it <span class="blsp-spelling-corrected">doesn't</span> work. (no contextual menus, no nothing)<br />  However I ll have to give it a try in another machine as mine is a Vista Home Edition ( yuck yuck) I should be updating to ultimate pretty soon ( hopefully <span class="blsp-spelling-corrected">Saturday</span>) when I know I m safeguarded by at least a virtual environment to work in.<br /><br /><br />  All for now if anyone has comments/ opinions very welcome :D]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2008-06-05 19:21:00</wp:post_date>
  <wp:post_date_gmt>2008-06-05 19:21:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>another-debugger-for-ie</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ie"><![CDATA[ie]]></category>
  <category domain="category" nicename="ie-debugger"><![CDATA[ie debugger]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/another-debugger-for-ie.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364466750;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-05 19:21:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>MS Word save to PDF</title>
  <link>http://roundcrisis.com/2008/06/06/ms-word-save-to-pdf/</link>
  <pubDate>Fri, 06 Jun 2008 11:39:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/06/ms-word-save-to-pdf/</guid>
  <description/>
  <content:encoded><![CDATA[hi there<br />I dont think this is ultra necesary or anything like that but i know i ll need it at some point<br />Micro$oft has a plug in to save a document as a pdf its well integrated and seems to work ok.<br />here is the url <a href="http://url.ie/f9v">http://url.ie/f9v</a><br />there are other options if you dont have word 2k7 <em>I think is called pdf95</em>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>14</wp:post_id>
  <wp:post_date>2008-06-06 11:39:00</wp:post_date>
  <wp:post_date_gmt>2008-06-06 11:39:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ms-word-save-to-pdf</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="pdf"><![CDATA[pdf]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/ms-word-save-to-pdf.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364648608;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-06 11:39:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>No Non-sense jQuery</title>
  <link>http://roundcrisis.com/2008/06/09/no-non-sense-jquery/</link>
  <pubDate>Mon, 09 Jun 2008 19:28:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/09/no-non-sense-jquery/</guid>
  <description/>
  <content:encoded><![CDATA[John <span class="blsp-spelling-error">Resig</span> <a href="http://ejohn.org/blog/building-interactive-prototypes-with-jquery/">just posted some talks </a>he gave and they are so easy to understand that it hurts. I really like the <span class="blsp-spelling-error">jQuery</span> syntax, <span class="blsp-spelling-error">ok</span> is a different <span class="blsp-spelling-corrected">approach</span> to a <span class="blsp-spelling-error">JS</span> library than <span class="blsp-spelling-error"><a href="http://www.extjs.com/">ExtJs</a></span>, and I like it, <span class="blsp-spelling-corrected">unobtrusive</span> and lightweight with loads of <span class="blsp-spelling-corrected">plug ins</span> available.<br /><br />I really like <a href="http://tablesorter.com/docs/#Demo">this grid </a>(<span class="blsp-spelling-error">ok</span> <span class="blsp-spelling-error">ok</span> it does use a table for layout but hey, looks good and you read the code and <span class="blsp-spelling-corrected">immediately</span> know what's happening) .]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>15</wp:post_id>
  <wp:post_date>2008-06-09 19:28:00</wp:post_date>
  <wp:post_date_gmt>2008-06-09 19:28:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>no-non-sense-jquery</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
  <category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/no-non-sense-jquery.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-09 19:28:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>New release of Nhibernate EAP</title>
  <link>http://roundcrisis.com/2008/06/10/new-release-of-nhibernate-eap/</link>
  <pubDate>Tue, 10 Jun 2008 21:44:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/10/new-release-of-nhibernate-eap/</guid>
  <description/>
  <content:encoded><![CDATA[The most interesting thing today was an email from <span class="blsp-spelling-corrected">Manning</span> with the new release of the <span class="blsp-spelling-error">EAP</span> of <span class="blsp-spelling-error">Nhibernate</span> in Action (still in chapter 3 :( ) .<br />On the plus side, first time I ever bother reading the table of contents in detail, and yes, I found an <span class="blsp-spelling-corrected">appendix</span> called Introducing <span class="blsp-spelling-error">ActiveRecord</span> and <span class="blsp-spelling-error">MonoRail</span>, at first this made me really happy, but now that I think about it, the <span class="blsp-spelling-corrected">appendix</span> should really only be about Active Record, else its gonna be too short.<br />I think I would like to see a mention of Machine Migrations (and similar tools) <br /><br /><span style="color:#666666;">PS: Did I just say this is the most interesting thing in the day ? ( well appart from lunch in the park yeah, it pretty much was)</span>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>16</wp:post_id>
  <wp:post_date>2008-06-10 21:44:00</wp:post_date>
  <wp:post_date_gmt>2008-06-10 21:44:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>new-release-of-nhibernate-eap</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/new-release-of-nhibernate-eap.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-10 21:44:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Silverlight 2 Beta 2 Installation</title>
  <link>http://roundcrisis.com/2008/06/10/silverlight-2-beta-2-installation/</link>
  <pubDate>Tue, 10 Jun 2008 21:57:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/10/silverlight-2-beta-2-installation/</guid>
  <description/>
  <content:encoded><![CDATA[I saw Scott <span class="blsp-spelling-error">Gu's</span> post about <span class="blsp-spelling-error">Silverlight</span> and I decided <span class="blsp-spelling-corrected">OK</span> I ll go and get it. Well the install took 10 <span class="blsp-spelling-corrected">minutes and</span> i had to close everything (Visual Studio ,IE Firefox), such an nuisance compared to the instal of Yahoo's Browser plus.<br />Did not try anything after that, to be honest , it doesnt call me or something... I ll need to be pushed into this one.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2008-06-10 21:57:00</wp:post_date>
  <wp:post_date_gmt>2008-06-10 21:57:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>silverlight-2-beta-2-installation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="silverlight"><![CDATA[silverlight]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/silverlight-2-beta-2-installation.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364470952;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-10 21:57:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Theme Roller and UI.jQuery</title>
  <link>http://roundcrisis.com/2008/06/11/theme-roller-and-uijquery/</link>
  <pubDate>Wed, 11 Jun 2008 18:20:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/11/theme-roller-and-uijquery/</guid>
  <description/>
  <content:encoded><![CDATA[I really like this UI.jQuery.com<br />Will post more later...]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>18</wp:post_id>
  <wp:post_date>2008-06-11 18:20:00</wp:post_date>
  <wp:post_date_gmt>2008-06-11 18:20:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>theme-roller-and-uijquery</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
  <category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/theme-roller-and-uijquery.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-11 18:20:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Js Frameworks usage amongst top sites</title>
  <link>http://roundcrisis.com/2008/06/13/js-frameworks-usage-amongst-top-sites/</link>
  <pubDate>Fri, 13 Jun 2008 16:04:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/13/js-frameworks-usage-amongst-top-sites/</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://royal.pingdom.com/?p=305">http://royal.pingdom.com/?p=305</a><br /><br />First Prototype, closely followed by jQuery :D then moo]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>19</wp:post_id>
  <wp:post_date>2008-06-13 16:04:00</wp:post_date>
  <wp:post_date_gmt>2008-06-13 16:04:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>js-frameworks-usage-amongst-top-sites</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/js-frameworks-usage-amongst-top-sites.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-13 16:04:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Super easy image replacement with jQuery</title>
  <link>http://roundcrisis.com/2008/06/18/super-easy-image-replacement-with-jquery/</link>
  <pubDate>Wed, 18 Jun 2008 17:52:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/18/super-easy-image-replacement-with-jquery/</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://www.webdesignerwall.com/demo/jquery/img-replacement.html">http://www.webdesignerwall.com/demo/jquery/img-replacement.html</a><br />look at the source code for this, is it clean or what?<br />took me little time to get something up and <span class="blsp-spelling-corrected">running</span> in a real nice way<br />This is a <span class="blsp-spelling-corrected">sufficient</span> reason to love <span class="blsp-spelling-error">jQuery</span> and whoever it is wrote this :)<br /><br />Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>20</wp:post_id>
  <wp:post_date>2008-06-18 17:52:00</wp:post_date>
  <wp:post_date_gmt>2008-06-18 17:52:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>super-easy-image-replacement-with-jquery</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
  <category domain="category" nicename="ui"><![CDATA[UI]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/super-easy-image-replacement-with.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2e7f85b6a72dd40560b9a2904b5da165</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-18 17:52:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>IOTC Conference</title>
  <link>http://roundcrisis.com/2008/06/23/iotc-conference/</link>
  <pubDate>Mon, 23 Jun 2008 10:44:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/23/iotc-conference/</guid>
  <description/>
  <content:encoded><![CDATA[Last Thursday and Friday I was at the IOTC, an Open Source Conference. I went to a few talks<br /><br />1) Saw Geoffrey Grosenbach <a href="http://iotc.firstport.ie/lecture/23/">talking </a>about <a href="http://www.modrails.com/">Phusion Passenger</a>. The talk target was a bit too wide, however i think he was good at explaining some of the basics. It would have been good to see some sample code but hey. All in all interesting<br /><br />2) Talk by Clint Oram the guy from Sugar CRM, well he was basically evangelising about Open Source in general, TBH It was really boring, maybe i just didnt understand the whole topic of the talk ... I believe most of us in the audience were developers, I wish he showed us some goodness, some features, some smart API ...or how do they manage their interactions with all the developers in !=locations, how do they evaluate whats code to include or not, who is in charge of that, etc ...<br />He mentioned some deal that they(Sugar CRM) made with hosting 365 and Clint is now living in Ireland.<br /><br />3) <a href="http://www.blogger.com/wurfl.sourceforge.net/">WURFL</a> and WALL. This talk was the start of a really interesting day and a great talk about something I might be using at some point . WURFL is a Device Description repository, it uses a tag that the device send to find out what capabilities does the device have, WURLF seems to fit in nicely with WALL, a markup language (that reminded me a little to nVelocity) that renders according to the querying device. Really interesting and real cool the way the WURFL file is organized (and a surprising 8Mb File)<br /><br />4) <a href="http://www.zope.org/">ZOPE</a>. A Phyton Framework. I think this talked turned out to be very different to what was originally intended however it was good to hear practises applyed to a OS Irish Shop. There was a lot of talk about how their complete process flows, from development to deplyment. For example he mentioned how they use subversion, firebug, how do they use versioning of their phyton and db versions... and then he talked about Zope, I only had a very diluted idea of what was Zope Architecture and what was it supposed to do, I m still not terribly clear however there were some interesting details all the food related stuff was real nice(and good easy to remember names) Eggs, cheeseShop, etc. I must check the entity generation as it sounds very interesting.<br /><br />The presenter, Con Hennessy works for a company called OpenApp interestingly they deploy solutions for the government, he mentioned the HSE. All in all real interesting<br /><br />5) PHP Frameworks. This talk really took me by surprise, David Coallier is part of the php core team and he knew what he was on about. He talked about web frameworks: <a href="http://www.blogger.com/www.cakephp.org/">Cake</a>, <a href="http://www.zend.com/">Zend</a>, <a href="http://www.blogger.com/www.symfony-project.org/">Symfony </a>(all MVCs) and <a href="http://www.pradosoft.com/">Prado</a>( an event driven one that I dont find interesting at all) then he went on talking about testing frameworks (this was really interesting as I knew nothing about php testing frameworks) here the list was PHPUnit, SimpleTest (it looks like he liked this one and I liked the asserts syntax) and another one that was for real low leve testing (hence not interested as I know for sure I m not gonna be debugging php core anytime soon )<br /><br /><br />ok that s all for today I wanted to add some nice pics but as I was searching I realised i don't know how to make sure i m not breaking any law by using the image so I ll find out later and go to sleep now]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>21</wp:post_id>
  <wp:post_date>2008-06-23 10:44:00</wp:post_date>
  <wp:post_date_gmt>2008-06-23 10:44:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>iotc-conference</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="conference"><![CDATA[conference]]></category>
  <category domain="category" nicename="php"><![CDATA[php]]></category>
  <category domain="category" nicename="phyton"><![CDATA[phyton]]></category>
  <category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
  <category domain="category" nicename="wall"><![CDATA[WALL]]></category>
  <category domain="category" nicename="wurfl"><![CDATA[WURFL]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/iotc-conference.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-23 10:44:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Sign the Entity Framework Comunity Vote of no Confidence</title>
  <link>http://roundcrisis.com/2008/06/24/sign-the-entity-framework-comunity-vote-of-no-confidence/</link>
  <pubDate>Tue, 24 Jun 2008 00:40:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/24/sign-the-entity-framework-comunity-vote-of-no-confidence/</guid>
  <description/>
  <content:encoded><![CDATA[OMG I just saw this <a href="http://efvote.wufoo.com/forms/ado-net-entity-framework-vote-of-no-confidence/">http://efvote.wufoo.com/forms/ado-net-entity-framework-vote-of-no-confidence/</a> and I had to post it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>22</wp:post_id>
  <wp:post_date>2008-06-24 00:40:00</wp:post_date>
  <wp:post_date_gmt>2008-06-24 00:40:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sign-the-entity-framework-comunity-vote-of-no-confidence</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="best-practices"><![CDATA[Best Practices]]></category>
  <category domain="category" nicename="entity-framework"><![CDATA[Entity Framework]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/sign-entity-frmaework-comunity-vote-of.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f7ccd52b3b8a0131103c5e795bf6467a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-24 00:40:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Nokia Open sources Symbian</title>
  <link>http://roundcrisis.com/2008/06/24/nokia-open-sources-symbian/</link>
  <pubDate>Tue, 24 Jun 2008 11:36:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/24/nokia-open-sources-symbian/</guid>
  <description/>
  <content:encoded><![CDATA[Talking  about open sourcing <a href="http://www.nokia.com/A4136001?newsid=1230415">http://www.nokia.com/A4136001?newsid=1230415</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>23</wp:post_id>
  <wp:post_date>2008-06-24 11:36:00</wp:post_date>
  <wp:post_date_gmt>2008-06-24 11:36:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>nokia-open-sources-symbian</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/nokia-open-sources-symbian.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-24 11:36:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Jiffy</title>
  <link>http://roundcrisis.com/2008/06/24/jiffy/</link>
  <pubDate>Tue, 24 Jun 2008 16:44:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/06/24/jiffy/</guid>
  <description/>
  <content:encoded><![CDATA[This is a firebug extension for measuring accurately the JS performance I have installed and tested it in <a href="http://billwscott.com/jiffyext/">this site</a> sounds like a good idea and to see it running makes sense will start using it from now on,particularly on extJs sites ;p]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>24</wp:post_id>
  <wp:post_date>2008-06-24 16:44:00</wp:post_date>
  <wp:post_date_gmt>2008-06-24 16:44:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>jiffy</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="extjs"><![CDATA[ExtJs]]></category>
  <category domain="category" nicename="firebug"><![CDATA[FireBug]]></category>
  <category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/06/jiffy.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-06-24 16:44:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Speed is all</title>
  <link>http://roundcrisis.com/2008/07/04/speed-is-all/</link>
  <pubDate>Fri, 04 Jul 2008 08:06:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/07/04/speed-is-all/</guid>
  <description/>
  <content:encoded><![CDATA[PDF Readers<br /><br />I m thinking about a serious of "meaty" post for this weeked or at least the one decent one, but meanwhile I though I should post about the incredible diference in speed between Adobe Reader and Foxit. A friend of mine (<em>one of the two suscribers to this blog</em>) told me about foxit like a year ago, i went yeah yeah but then about two weeks ago i actually download it and it is really fast, i love it.<br /><br />FF2 vs FF3<br />OMG i m so happy with FF3 I m still testing it in only one of my machines but so far much better performance and now that firebug is behaving, happy days. The Add ons I have are: Firebug with YSlow, Jiffy, Web Developer, and of course Google Toolbar. The best feature is no memory problems :D<br /><br />Now tempted to install the Beta 2 of IE8....]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>32</wp:post_id>
  <wp:post_date>2008-07-04 08:06:00</wp:post_date>
  <wp:post_date_gmt>2008-07-04 08:06:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>speed-is-all</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="adobe"><![CDATA[adobe]]></category>
  <category domain="category" nicename="firefox"><![CDATA[firefox]]></category>
  <category domain="category" nicename="foxit"><![CDATA[foxit]]></category>
  <category domain="category" nicename="ie"><![CDATA[ie]]></category>
  <category domain="category" nicename="speed"><![CDATA[speed]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/07/speed-is-all.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-07-04 08:06:00]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2</wp:comment_id>
    <wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP/>
    <wp:comment_date>2008-07-04 08:28:00</wp:comment_date>
    <wp:comment_date_gmt>2008-07-04 08:28:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm famous! <br/><br/>("A friend")]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Small but interesting find</title>
  <link>http://roundcrisis.com/2008/07/07/small-but-interesting-find/</link>
  <pubDate>Mon, 07 Jul 2008 16:03:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/07/07/small-but-interesting-find/</guid>
  <description/>
  <content:encoded><![CDATA[Yesterday I was coding and I needed to create a criteria like<br /><br />....<br />Repository.FinOne(Restriccions.Eq("Email", email));<br />...<br /><br />however I wanted to make sure that there was not prblems with caseing<br />it turns out IgnoreCase exists and can be used this way :D<br /><br />Repository.FinOne(Restriccions.Eq("Email", email).<strong>IgnoreCase</strong>());<br /><br />I was really happy to find this, thanks NHibernate in Action!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>33</wp:post_id>
  <wp:post_date>2008-07-07 16:03:00</wp:post_date>
  <wp:post_date_gmt>2008-07-07 16:03:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>small-but-interesting-find</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/07/small-but-interesting-find.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-07-07 16:03:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Transparency Fix for PNG on IE</title>
  <link>http://roundcrisis.com/2008/07/23/transparency-fix-for-png-on-ie/</link>
  <pubDate>Wed, 23 Jul 2008 19:44:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/07/23/transparency-fix-for-png-on-ie/</guid>
  <description/>
  <content:encoded><![CDATA[Saw <a href="http://ajaxian.com/archives/iepngfix-2-now-supports-css-background-position-and-repeat">this </a>on ajaxian and i think is really handy and at some (not too far in time i ll need this)<br /><a href="http://www.twinhelix.com/css/iepngfix/demo/">http://www.twinhelix.com/css/iepngfix/demo/</a> basically to add some transparency you just add a few files to your sever and a line of css and thats it.<br />Will tell when the time to use this comes :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>35</wp:post_id>
  <wp:post_date>2008-07-23 19:44:00</wp:post_date>
  <wp:post_date_gmt>2008-07-23 19:44:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>transparency-fix-for-png-on-ie</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/07/transparency-fix-for-png-on-ie.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a819faa8b871ef7dd5d3453cc6ac82f1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-07-23 19:44:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>NVelocity - creating urls</title>
  <link>http://roundcrisis.com/2008/07/23/nvelocity-creating-urls/</link>
  <pubDate>Wed, 23 Jul 2008 19:58:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/07/23/nvelocity-creating-urls/</guid>
  <description/>
  <content:encoded><![CDATA[I always forget these two:<br /><br />$Url.Link('label', "%{controller='controllerName',action='actionName'}")<br /><br />and this:<br /><br />To Create a form<br /><br /><br />$Form.FormTag("%{id= 'formId', action='save', immediate = 'true'}")<br />$Form.EndFormTag<br /><br />I really wished there was a MR RC4 :D]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>36</wp:post_id>
  <wp:post_date>2008-07-23 19:58:00</wp:post_date>
  <wp:post_date_gmt>2008-07-23 19:58:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>nvelocity-creating-urls</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="nvelocity"><![CDATA[NVelocity]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/07/nvelocity-creating-urls.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-07-23 19:58:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>NVelocity Parse</title>
  <link>http://roundcrisis.com/2008/07/23/nvelocity-parse/</link>
  <pubDate>Wed, 23 Jul 2008 20:12:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/07/23/nvelocity-parse/</guid>
  <description/>
  <content:encoded><![CDATA[A little thing that drove me completely insane<br /><br />when using parse (<a href="http://velocity.apache.org/engine/releases/velocity-1.5/vtl-reference-guide.html">appache ref</a>) the path to the view includes the folder that you are in<br /><br />say you are in the folder .../views/Blog<br />editing a view called one.vm<br />if you want to parse something in the same folder as one.vm you have to use<br /><br />#parse("Blog/two.vm")<br />and if you happen to use a / before blog you ll get a nice exception that has a very unclear message<br /><br />Just to note]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>37</wp:post_id>
  <wp:post_date>2008-07-23 20:12:00</wp:post_date>
  <wp:post_date_gmt>2008-07-23 20:12:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>nvelocity-parse</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="nvelocity"><![CDATA[NVelocity]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/07/nvelocity-parse.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-07-23 20:12:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Time picker / PNG Transparency fix</title>
  <link>http://roundcrisis.com/2008/08/05/time-picker-png-transparency-fix/</link>
  <pubDate>Tue, 05 Aug 2008 08:40:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/08/05/time-picker-png-transparency-fix/</guid>
  <description/>
  <content:encoded><![CDATA[Hi. at some point we all need a click time picker, found <a href="http://ajaxian.com/archives/nogray-visual-time-picker">this </a>one (in ajaxian)<br /><br />Also in Ajaxian, I found a PNG fix I used the sample and it works, however I can't make it work on my server, it doesnt even hit the *.htc file.<br />The instructions say that you should give the path to the htc relative to index.html however I dont seem to be able to get it up and running for my web app, anyway... will try again with a little bit more time later on.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>38</wp:post_id>
  <wp:post_date>2008-08-05 08:40:00</wp:post_date>
  <wp:post_date_gmt>2008-08-05 08:40:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>time-picker-png-transparency-fix</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
  <category domain="category" nicename="png"><![CDATA[png]]></category>
  <category domain="category" nicename="time-picker"><![CDATA[time picker]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/08/time-picker-png-transparency-fix.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-08-05 08:40:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SSIS Pain</title>
  <link>http://roundcrisis.com/2008/08/18/ssis-pain/</link>
  <pubDate>Mon, 18 Aug 2008 22:11:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/08/18/ssis-pain/</guid>
  <description/>
  <content:encoded><![CDATA[hi<br />This post is basically a rant, a rant about <span class="blsp-spelling-error">SSIS</span>, whoever designed this <span class="blsp-spelling-error">UI</span> please take a good look at your career and either retire or consider a career change.<br /><br />I think the idea behind this service is great; we all need data migration tools; but why make people <span class="blsp-spelling-corrected">suffer</span>?<br />Some examples of why this tool drives me insane; in a data flow, you can createa Derived column, say for some crazy and ridiculous reason (please ntoe sarcasm here) you need to change your something on your source, well then the aforementioned Derived Column thing gies u a nice error(to a level fair enough), but then you deal with the problem you click ok, the dialog closes and then you have to open the same dialog again, why?<br /><br />Anyone that say that they think <span class="blsp-spelling-error">SSIS</span> is great is just because they <span class="blsp-spelling-corrected">haven't</span> used it.<br />Rant over ( however i need to keep <span class="blsp-spelling-corrected">going</span> with this data migration)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>40</wp:post_id>
  <wp:post_date>2008-08-18 22:11:00</wp:post_date>
  <wp:post_date_gmt>2008-08-18 22:11:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ssis-pain</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="sql-server"><![CDATA[Sql Server]]></category>
  <category domain="category" nicename="ssis"><![CDATA[SSIS]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/08/ssis-pain.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-08-18 22:11:00]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>33</wp:comment_id>
    <wp:comment_author><![CDATA[Marksu Engelhardt]]></wp:comment_author>
    <wp:comment_author_email>angel@mindfucked.de</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>217.194.34.103</wp:comment_author_IP>
    <wp:comment_date>2009-02-25 14:31:37</wp:comment_date>
    <wp:comment_date_gmt>2009-02-25 14:31:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I TOTALLY AGREE

It's pain in the ass
The ideas were godd, but it is soooooo buggy!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>34</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>212.120.152.165</wp:comment_author_IP>
    <wp:comment_date>2009-02-25 15:13:40</wp:comment_date>
    <wp:comment_date_gmt>2009-02-25 15:13:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[:) Actually i was working with it again last weekend, I totally hate it
Very tempted to grab Ayende's ETL and make it a good go]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>From Code Monkey to Code Crafter ftw</title>
  <link>http://roundcrisis.com/2008/08/27/from-code-monkey-to-code-crafter-ftw/</link>
  <pubDate>Wed, 27 Aug 2008 15:13:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/08/27/from-code-monkey-to-code-crafter-ftw/</guid>
  <description/>
  <content:encoded><![CDATA[This idea has been in my head for a while now, I'm sure all developers get here at some point where you want to move forward but not terribly sure how to get there, how to get better, how to write elegant maintainable code that you are proud of.<br />For me it all started when I saw how ruby on rails worked and now i m on the path (i think ) to become better and coding using principles like mvc, active record, etc<br />I remember I started assisting Ruby Ireland meetups and there was nothing like that for .net or java and it still feels like there still isn't a place(maybe i didnt look properly please let me know) or group that you can say, hey lets do<br /><ul><li>A code jam about data models or </li><li>A talk about how to do high performance Persistantent Domain Models or </li><li>A talk about a particular project the talker worked on and what they learned in a very detailed technical way [not interested in company secrets but how to become a better dev how to learn from other peoples experience ] or- hey lets compare javascript frameworks or </li><li>This is how you do unit testing in lolcats(im making this up but i recon this exists).<br /></li></ul><p>I would like to think this is possible, I would like to think that the group can be technology agnostic to a certain degree as i believe most best practises are general for all languages, however I am a c# developer so I talked to Martha Rotter about this and she was interested so we met and talked about this and we will be meeting in open coffee with other (hopefully) like minded people I will post here a date when this is decided but please let me know any thoughts and comments </p><p>Baiscally I m interested in relevant, higher level developer talk, in concept very similar to alt.net groups around the world. <a href="http://altnetpodcast.com/">http://altnetpodcast.com/</a> <a href="http://altdotnet.org/">http://altdotnet.org/</a> following good design principles from the <a href="http://martinfowler.com/books.html">Patterns book </a>from Martin Fowler, apply XP , etc </p><p></p><p>Cheers<br /></p><p></p><p><span style="font-family:courier new;">EDIT: Ozone thanks for agreing to the use of code crafter :D</span></p><p><span style="font-family:courier new;">Note: Thanks jaime for the proof reading :D</span></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>41</wp:post_id>
  <wp:post_date>2008-08-27 15:13:00</wp:post_date>
  <wp:post_date_gmt>2008-08-27 15:13:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>from-code-monkey-to-code-crafter-ftw</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="altnet"><![CDATA[alt.net]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/08/from-code-monkey-to-code-crafter.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364909591;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_691e82a707f5ec5dc8f4ef6ca763c665</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6760031b7f22e8e96ed262d4f82b1bde</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-08-27 15:13:00]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3</wp:comment_id>
    <wp:comment_author><![CDATA[Jaime S]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP/>
    <wp:comment_date>2008-08-27 15:46:00</wp:comment_date>
    <wp:comment_date_gmt>2008-08-27 15:46:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Last FM atleast talked about how they do quality control.<br/><br/>http://blog.last.fm/2008/08/01/quality-control]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>4</wp:comment_id>
    <wp:comment_author><![CDATA[Jaime S]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP/>
    <wp:comment_date>2008-08-27 15:58:00</wp:comment_date>
    <wp:comment_date_gmt>2008-08-27 15:58:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes when I studied computer science we talked about these things all the time.   We talked to our tutors and peers and brought up issues learnt in class in other lectures.    <br/><br/>What you are talking about is a bigger concept, a continual discussion and openness about how companies achieve what they do. <br/><br/>You don't want company secrets but in a way these things are key to their success.     I don't believe all companies know this though so may be happy to contribute to the wider 'best practices' pool.<br/><br/>Open source/ Open Coding Practices/methods.. hrmn...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>13</wp:comment_id>
    <wp:comment_author><![CDATA[Dublin Alt Net Meetup - 12th of Feb 7pm &laquo; Oh my God I am A Cat]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://roundcrisis.com/2009/01/26/dublin-alt-net-meetup-12th-of-feb-7pm/</wp:comment_author_url>
    <wp:comment_author_IP>74.200.243.222</wp:comment_author_IP>
    <wp:comment_date>2009-01-26 10:27:54</wp:comment_date>
    <wp:comment_date_gmt>2009-01-26 10:27:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] a new chapter of this post finally we are doing an  Alt.net meet up, I can t wait and hope for the best.  The meet up will [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Trying GXT (ExtJs in GWT)</title>
  <link>http://roundcrisis.com/2008/08/29/trying-gxt-extjs-in-gwt/</link>
  <pubDate>Fri, 29 Aug 2008 10:13:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/08/29/trying-gxt-extjs-in-gwt/</guid>
  <description/>
  <content:encoded><![CDATA[Today I'm trying out Ext GWT<br /><br /><p></p><br /><p>To use Ext GWT<br /></p><br /><br /><br /><br />Installation was simple ( i needed the java sdk i got 1.6Update 7 )<br /><br /><br />downloaded GWT1.5.1 and decompressed it. happy days!<br /><br /><br />then i ran the sample hello and I was running, really fast<br /><br /><br /><br /><br /><br />[if you have problems with some error that ends with  and then an exception, it s very likely to be that your path is reading some other version of java first, if so go to environment variables and change your system settings so you have the recently installed java sdk first]<br /><br /><br /><br /><br /><br />to check the java version open the command line and do java -version<br /><br /><br /><strong>Why Ext GWT?</strong><br /><br /><br /><br /><br /><br /><a id="GWT_Compiler">GWT is a compiler that converts Java source into JavaScript</a><br /><br /><br />this means you write and test java code<br /><br /><br /><br /><br /><br /><br /><strong>Getting Started</strong><br /><br /><br />as in the sample i went and changed the email application and it changed properly and that was cool, lets get to the business now<br /><br /><br />lets create our own app and try to handle some event<br /><br /><br /><br /><strong>Creating an Application</strong><br /><br /><br />There is an ApplicationCreator that generates a series of files including a java file with a sort of hello world, an html file a css file and two cmd files this all following a naming convention.<br /><br /><br /><br /><br /><br /><strong>Adding support for GWT -EXT</strong><br /><br /><br />OK I went to the <a href="http://extjs.com/helpcenter/topic/com.extjs.gxt.help/html/gettingstarted/gettingstarted.html">Ext GWT documentation web</a> and there are a few screencast, if you follow them you get to the EXT-GWT (from extjs.com) hello world however there isnt much more sample applications , there is one but seems like a big jump<br /><br /><br /><strong></strong><br /><br />To be honest this took a while to get right, i m not used to java and the path convention is a bit too strange, i followed the video in the docs above and finally its working :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>43</wp:post_id>
  <wp:post_date>2008-08-29 10:13:00</wp:post_date>
  <wp:post_date_gmt>2008-08-29 10:13:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>trying-gxt-extjs-in-gwt</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gwt"><![CDATA[GWT]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/08/trying-gxt-extjs-in-gwt.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1365182940;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-08-29 10:13:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>From Code Monkey to Code Crafter II</title>
  <link>http://roundcrisis.com/2008/09/03/from-code-monkey-to-code-crafter-ii/</link>
  <pubDate>Wed, 03 Sep 2008 10:34:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/09/03/from-code-monkey-to-code-crafter-ii/</guid>
  <description/>
  <content:encoded><![CDATA[Hi again<br /><br />Well hopefully that meeting will go ahead on the saturday the 13th of september<br /><br /><a href="http://www.opencoffeedublin.com/september-saturday-opencoffee-dublin-1392008/">http://www.opencoffeedublin.com/september-saturday-opencoffee-dublin-1392008/</a><br /><br />looking forward to it now :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>44</wp:post_id>
  <wp:post_date>2008-09-03 10:34:00</wp:post_date>
  <wp:post_date_gmt>2008-09-03 10:34:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>from-code-monkey-to-code-crafter-ii</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="opencoffee"><![CDATA[openCoffee]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/09/from-code-monkey-to-code-crafter-ii.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-09-03 10:34:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>jQuery ExtJS talk</title>
  <link>http://roundcrisis.com/2008/09/03/jquery-extjs-talk/</link>
  <pubDate>Wed, 03 Sep 2008 10:48:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/09/03/jquery-extjs-talk/</guid>
  <description/>
  <content:encoded><![CDATA[I m doing a lighting talk about <span class="blsp-spelling-error">jQuery</span> and <span class="blsp-spelling-error">ExtJs</span> (maybe mention <span class="blsp-spelling-error">GWT</span>) in the next Ruby Ireland on the 9<span class="blsp-spelling-error">th</span> of September <a href="http://tinyurl.com/6q5n9p">link</a>

I ll add a link to the slides as soon as i finish them, <strong>any suggestions very welcome</strong>.
so far i m doing a quick intro, some of the features, stuff i found useful or interesting or use with code samples and finally some links. For <span class="blsp-spelling-error">jQuery</span> I m touching on <span class="blsp-spelling-error">ui</span>.<span class="blsp-spelling-error">jquery</span> and <span class="blsp-spelling-error">themeroller</span> and the event observer implementation <a href="http://almaer.com/blog/enjoying-the-observer-pattern-with-custom-events">link</a>

For ext again intro and show some code and then maybe touch on EXT (<span class="blsp-spelling-error">GWT</span> implementation of EXT <span class="blsp-spelling-error">Js</span>) just started to have a look at this but it does seem very <span class="blsp-spelling-corrected">promising</span>

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>45</wp:post_id>
  <wp:post_date>2008-09-03 10:48:00</wp:post_date>
  <wp:post_date_gmt>2008-09-03 10:48:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>jquery-extjs-talk</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="development"><![CDATA[development]]></category>
  <category domain="category" nicename="extjs"><![CDATA[ExtJs]]></category>
  <category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
  <category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <category domain="post_tag" nicename="talk"><![CDATA[talk]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/09/jquery-extjs-talk.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-09-03 10:48:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ruby Ireland Meetup</title>
  <link>http://roundcrisis.com/2008/09/10/ruby-ireland-meetup/</link>
  <pubDate>Wed, 10 Sep 2008 12:25:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/09/10/ruby-ireland-meetup/</guid>
  <description/>
  <content:encoded><![CDATA[I was in ruby <span class="blsp-spelling-corrected">Ireland</span> last night ( good turn up <span class="blsp-spelling-error">btw</span>) and it was great to see Paul Campbell talking about <a href="http://incubator.apache.org/couchdb/">Couch Db</a>, a non relational DB in their own words<br /><br /><blockquote><p>"Apache <span class="blsp-spelling-error">CouchDB</span> is a distributed, fault-tolerant and schema-free<br />document-oriented database accessible via a <span class="blsp-spelling-error">RESTful</span> HTTP/<span class="blsp-spelling-error">JSON</span> <span class="blsp-spelling-error">API</span>. Among other<br />features, it provides robust, incremental replication with bi-directional<br />conflict detection and resolution, and is <span class="blsp-spelling-error">queryable</span> and <span class="blsp-spelling-error">indexable</span> using a<br />table-oriented view engine with JavaScript acting as the default view definition<br />language."<br /></p><p></p></blockquote><br /><br />Anna showed some interesting rake tasks and i did a short intro to <span class="blsp-spelling-error">jQuery</span> (slides <a href="http://www.slideshare.net/roundcrisis/jquery-presentation">here</a>) hopefully someone found it interesting.<br /><br />This Saturday the 13<span class="blsp-spelling-corrected">Th </span> is the open coffee meeting in the New York Grind that will include the talk about trying to come up with something similar to alt.net <span class="blsp-spelling-corrected">Ireland</span>. as discussed in <a href="http://ohmygodiamacat.blogspot.com/2008/08/from-code-monkey-to-code-crafter.html">previous post</a><br /><br />And the universe didnt disapear (aparently) thumbs up.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>46</wp:post_id>
  <wp:post_date>2008-09-10 12:25:00</wp:post_date>
  <wp:post_date_gmt>2008-09-10 12:25:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ruby-ireland-meetup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="couchdb"><![CDATA[couchDB]]></category>
  <category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/09/ruby-ireland-meetup.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-09-10 12:25:00]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>5</wp:comment_id>
    <wp:comment_author><![CDATA[Jaime S]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP/>
    <wp:comment_date>2008-09-10 13:04:00</wp:comment_date>
    <wp:comment_date_gmt>2008-09-10 13:04:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I thought your talk was great, for me it was a perfect introduction to jquery.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>6</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP/>
    <wp:comment_date>2008-09-10 14:03:00</wp:comment_date>
    <wp:comment_date_gmt>2008-09-10 14:03:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[thanks :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>What s happening</title>
  <link>http://roundcrisis.com/2008/11/26/what-s-happening/</link>
  <pubDate>Wed, 26 Nov 2008 13:06:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/11/26/what-s-happening/</guid>
  <description/>
  <content:encoded><![CDATA[<p>Since my last post I ve been trying to avoid writting about trivial small things however meaty post take time and I just dont have it right now.</p><h5>Questions in my head now</h5><p>- when do you create a service?</p><p>- where can I find an example of a well designed GWT app?</p><h5>Events that Im interested in </h5><p>GGD 4th of December in La Taverna di Baco in the Quays (in dublin)</p><p>IJTC its the 7th of January in UGC, some good speakers but it feels like thi IcTC conferences are a bit desorganized</p><p>FOWA Dublin -  March 6th. I want to go but dont know really why</p><p>Edit: missign OSSBarcamp Dublin - 28th March 2009 this is one I want to go to as well :)</p><h5>Cool Things</h5><p> - I ve been using <a href="https://addons.mozilla.org/en-US/firefox/addon/8487"><strong>Pencil</strong></a> ( a  pluggin for firefox) and its pretty cool because its easy to use, lightweight, free. Great for putting screens togheter quickly </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>48</wp:post_id>
  <wp:post_date>2008-11-26 13:06:00</wp:post_date>
  <wp:post_date_gmt>2008-11-26 13:06:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-s-happening</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="events-pencil"><![CDATA[events pencil]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/what-s-happening.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-11-26 13:06:00]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>7</wp:comment_id>
    <wp:comment_author><![CDATA[Jaime S]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP/>
    <wp:comment_date>2008-11-26 14:10:00</wp:comment_date>
    <wp:comment_date_gmt>2008-11-26 14:10:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Umah you need to add OSSBarcamp to the list http://www.ossbarcamp.com/ <br/><br/>I did want to go to FOWA but I'm off to Belfast that night so wouldn't be able to booze it up with everyone anyways.  I'm so about networking and discussions.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>8</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP/>
    <wp:comment_date>2008-11-26 14:16:00</wp:comment_date>
    <wp:comment_date_gmt>2008-11-26 14:16:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[true. Added OSSBarcamp I knew i was forgetting something :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Ruby Ireland Meetup - 9th of December 7.30 Fitzwilliams Place</title>
  <link>http://roundcrisis.com/2008/11/26/ruby-ireland-meetup-9th-of-december-730-fitzwilliams-place/</link>
  <pubDate>Wed, 26 Nov 2008 15:01:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/11/26/ruby-ireland-meetup-9th-of-december-730-fitzwilliams-place/</guid>
  <description/>
  <content:encoded><![CDATA[It looks like Ruby Ireland is getting a bit more attention from people, and that is great to see
I had my own reservations about if I should continue going to these meet ups because basically I haven't been doing much Ruby in the last months, but I do love to hear about it and it does give me ideas about how to work on my own code. I see people solving problems in a completely different way to  what I would do and I think that has value and I hope they don't mind me showing up there.
Also ,there is a common ground in software development and web development in particular. This is why we are gonna start a podcast on software development and I hope it will work out
and by work out I mean that it makes us learn more about how we develop software and hopefully get some feedback from the community, no matter were they are.

<span class="blsp-spelling-error">Declan</span> <span class="blsp-spelling-error">McGrath</span> came up with the idea in a thread in ruby groups, we met up and came up with some ideas for topics:

<strong>Ruby</strong>
<ul>
	<li>in general about hosting an Ruby on rails application,</li>
	<li>how do mongrels work and what do they actually do,</li>
</ul>
<strong> General Software development Topics </strong>
<ul>
	<li> What is Inversion of Control  Dependency Injection and why do you use it</li>
	<li>Improving your tests . Test Driven Development</li>
</ul>
<strong> Tools / frameworks</strong>
<ul>
	<li> What Tools are you using for software development productivity</li>
	<li>The Linux <span class="blsp-spelling-error">distro</span> <span class="blsp-spelling-error">Declan</span> is using for recording/editing the sessions</li>
	<li>Funnily enough I would probably mention castle</li>
</ul>
After, we got some interest from Justin McCarthy (haven't met him yet) but its great to see more involvement.
These are initial thoughts would welcome any suggestions , corrections later on, etc]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>49</wp:post_id>
  <wp:post_date>2008-11-26 15:01:00</wp:post_date>
  <wp:post_date_gmt>2008-11-26 15:01:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ruby-ireland-meetup-9th-of-december-730-fitzwilliams-place</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="development"><![CDATA[development]]></category>
  <category domain="post_tag" nicename="meetup"><![CDATA[meetup]]></category>
  <category domain="category" nicename="podcast"><![CDATA[podcast]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/ruby-ireland-meetup-9th-of-december-730.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-11-26 15:01:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Linking imges in Monorail</title>
  <link>http://roundcrisis.com/2008/11/30/linking-imges-in-monorail/</link>
  <pubDate>Sun, 30 Nov 2008 17:56:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/2008/11/30/linking-imges-in-monorail/</guid>
  <description/>
  <content:encoded><![CDATA[A quick one 

Say you have an image or god knows what and  you need to add a link to it, in html you ll do something like

<!-- code formatted by http://manoli.net/csharpformat/ -->
<pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">a</span> <span class="attr">href</span><span class="kwrd">="http://foo.bar/something.html"</span><span class="kwrd">&gt;</span>
<span class="kwrd">&lt;</span><span class="html">img</span> <span class="attr">src</span><span class="kwrd">="..."</span> <span class="kwrd">/&gt;</span> <span class="kwrd">&lt;/</span><span class="html">a</span><span class="kwrd">&gt;</span>

in a view you can do this

<span class="kwrd">&lt;</span><span class="html">a</span> <span class="attr">href</span>=$<span class="attr">UrlHelper</span>.<span class="attr">For</span>(<span class="kwrd">"%{ controller='product'}"</span>)<span class="kwrd">&gt;</span>  
    <span class="kwrd">&lt;</span><span class="html">img</span> <span class="attr">src</span><span class="kwrd">="$!Image.Path"</span> <span class="attr">alt</span><span class="kwrd">="$!Name"</span> <span class="kwrd">/&gt;</span>
<span class="kwrd">&lt;/</span><span class="html">a</span><span class="kwrd">&gt;</span></pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>50</wp:post_id>
  <wp:post_date>2008-11-30 17:56:00</wp:post_date>
  <wp:post_date_gmt>2008-11-30 17:56:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>linking-imges-in-monorail</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="castle"><![CDATA[castle]]></category>
  <category domain="post_tag" nicename="development"><![CDATA[development]]></category>
  <category domain="category" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="post_tag" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="category" nicename="nvelocity"><![CDATA[NVelocity]]></category>
  <category domain="category" nicename="urlhelper"><![CDATA[urlhelper]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ohmygodiamacat.blogspot.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[roundcrisishttp://www.blogger.com/profile/06922900548114206360noreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/linking-imges-in-monorail.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-11-30 17:56:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ruby Ireland Meet up </title>
  <link>http://roundcrisis.com/2008/12/10/ruby-ireland-meet-up/</link>
  <pubDate>Wed, 10 Dec 2008 16:57:04 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=60</guid>
  <description/>
  <content:encoded><![CDATA[Yesterday we had a really nice Ruby Ireland meet up some links

- Rest <a href="http://netzooid.com/presentations/scalable_reliable_secure_rest.ppt">link  </a>

- RateMyArea talk<a href="http://ciaran-lee.com/RMA-rug.pdf"> http://ciaran-lee.com/RMA-rug.pdf</a> 

- google Geo Location API via Darragh <a href="http://google-code-updates.blogspot.com/2008/08/two-new-ways-to-location-enable-your.html" target="_blank">link</a> 

 

Follow up on the website and other projects soon

The idea is that the next meet up (would that be teh 13th of January) is a meetup that involves coding.

Thnaks to the people providing the sambos, beers and mince pies and above all the place to have the meeting.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>60</wp:post_id>
  <wp:post_date>2008-12-10 16:57:04</wp:post_date>
  <wp:post_date_gmt>2008-12-10 16:57:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ruby-ireland-meet-up</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-12-10 16:57:04]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Languages</title>
  <link>http://roundcrisis.com/2008/12/12/languages/</link>
  <pubDate>Fri, 12 Dec 2008 14:59:06 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=63</guid>
  <description/>
  <content:encoded><![CDATA[Hi 

I was reading <a href="http://www.hanselman.com/blog/DoYouHaveToKnowEnglishToBeAProgrammer.aspx">hanselman's blog</a> today about languages, not programing languages, but spoken languages like english, spanish, french, chinese, etc.

The post kinda discusses , "<strong>if you dont speak englsih , you are not a programmer</strong>", 

I think the post is worth the read and I have two comments about it.

As native spanish speaker I have to say the fact that I was interested in French from a early age and english later on helped massively when I started programming because I could make sense of things faster. Later on, at college , even thou we had english as a requirement in college, most people couldn't actually read papers properly and they would prefer even badly translated copies

Another thing I have to add is that, a friend of mine, Cristian Espeche, is a great developer, however he still finds it really hard to get documentation and I know he knows  he would be a much better programmer if he could read english, I m mentioning this in my blog to maybe encourage him to learn :) .

I dont know what the solution is yet but I can see this is a problem]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>63</wp:post_id>
  <wp:post_date>2008-12-12 14:59:06</wp:post_date>
  <wp:post_date_gmt>2008-12-12 14:59:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>languages</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="development"><![CDATA[development]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-12-12 14:59:06]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Happy Holidays post and welcome 2009</title>
  <link>http://roundcrisis.com/2008/12/30/happy-holidays-post-and-welcome-2009/</link>
  <pubDate>Tue, 30 Dec 2008 13:20:05 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=65</guid>
  <description/>
  <content:encoded><![CDATA[well this is one of those end of year post that I think you must write. This is the first year I actually keep my blogging pretty constant (thou changed blogging engines ...) so first time I m actually writing one of these. Anyway

I m very happy with the year thats g0ne, <strong>loads </strong>of changes in my life, one of them being having no weekends at all for most of the year as I ve been working on a project with a friend of mine. That project is going well, we can nearly touch the code complete stage , only 8 tickets left open now so that's great, I ll blog more about it when I know how public we want this to be.  And yes it is written in .net with the castle project (<a title="castleproject.org" href="http://www. castleproject.org" target="_blank">castleproject.org</a>)

I ve been paying more attention to networking and its paid off big time, so next year I m gonna do more of that, and hopefully i ll dare to prepare a few talks on castle, as I ve been using Monorail,  ActiveRecord and Windsor. However  If I have to prepare a talk I will have to do some serious reading that I ve been meaning to do to actually have a more complete knowledge.

In 2009 I  want to get my teeth into RoR  I ve been trying to put time towards Ruby Jobs ( please refer to previous post too lazy to actually fetch the link)  however due to the project mentioned above its impossible, it just eats all my time.

Another great thing that might not interest anyone but me is that my brother is coming over to visit me for a few weeks, he is 19 and reading Computing, I m sooo proud of him.

Looking forward to FOWA Dublin , OSS barcamp, DDD .

Looking forward to a lot of really cool new records that hopefully will come out. 

I think 2009 will be a very challenging year, I hope not too see too many friends go ( I miss a few that left Dublin already)  and I hope this will not turn Dublin in a less secure place, I think we all enjoy been able to walk to and from places. 

Another thing that I want to see happening and I want to contribute heavily towards is, <a title="dublinalt.net" href="dublinalt.net">dublinalt.net</a>  I hope it works out and that we all learn a lot.

Mostly I would like that people are happy and that we enjoy the journey as we go.  

Happy 2009

 

Andrea]]></content:encoded>
  <excerpt:encoded><![CDATA[Ramblings about 2009]]></excerpt:encoded>
  <wp:post_id>65</wp:post_id>
  <wp:post_date>2008-12-30 13:20:05</wp:post_date>
  <wp:post_date_gmt>2008-12-30 13:20:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>happy-holidays-post-and-welcome-2009</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364248171;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-12-30 13:20:05]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to use Google webmaster tools with wordpress</title>
  <link>http://roundcrisis.com/2008/12/31/how-to-use-google-webmaster-tools-with-wordpress/</link>
  <pubDate>Wed, 31 Dec 2008 11:27:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=72</guid>
  <description/>
  <content:encoded><![CDATA[I found this <a href="http://jalaj.net/2007/05/21/get-your-wordpresscom-blog-google-verified/">post</a> on how to verify google webmaster tools.

Basically you just create a new page with the name of the html that google requires, if you choose the option to upload a new page. 

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>72</wp:post_id>
  <wp:post_date>2008-12-31 11:27:00</wp:post_date>
  <wp:post_date_gmt>2008-12-31 11:27:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-use-google-webmaster-tools-with-wordpress</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="blogging"><![CDATA[blogging]]></category>
  <category domain="post_tag" nicename="wordpress"><![CDATA[wordpress]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1366103130;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2008-12-31 11:27:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Component View Caching with Castle</title>
  <link>http://roundcrisis.com/2009/01/07/component-view-caching-with-castle/</link>
  <pubDate>Wed, 07 Jan 2009 12:41:44 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.wordpress.com/?p=74</guid>
  <description/>
  <content:encoded><![CDATA[I had to add some caching for a ViewCompoment in castle recently and, at least for me, it wasnt too clear what to do at first.

A ViewComponent is a very handy thing in castle, amongst other things it allows you to have  aView Component that can be, a login box, a menu,  an rss feed reader.  Sometimes the you need to cache the viewcomponent and this is how you need to go to this post by <a href="http://hammett.castleproject.org/?p=226">hammet </a>

I couldn't use the decoration
<code>
[ViewComponentDetails("comp1", Cache=ViewComponentCache.Always)]
</code>
because I needed the component to be refreshed every so often , so I used my own implementation
<code>
[ViewComponentDetails("BlogComponent", Cache = ViewComponentCache.UseCustomCacheKeyGenerator, CacheKeyFactory = typeof(YourCacheKeyGenerator))]
</code>

<em>YourCacheKeyGenerator </em>is a class that you create that must implement <em>IViewComponentCacheKeyGenerator </em>something similar to
<code>
public class YourCacheKeyGenerator: IViewComponentCacheKeyGenerator
{
public CacheKey Create(string viewComponentName, IDictionary parameters, IEngineContext context)
{
CacheKey key = new NamedCacheKey();
.....
..... your implementation here
return key;
}
</code>
I made my implementation dependant on time but you can make it dependant on anything you need

If there are any errors or comments please let me know]]></content:encoded>
  <excerpt:encoded><![CDATA[Using caching on ViewComponent]]></excerpt:encoded>
  <wp:post_id>74</wp:post_id>
  <wp:post_date>2009-01-07 12:41:44</wp:post_date>
  <wp:post_date_gmt>2009-01-07 12:41:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>component-view-caching-with-castle</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="castle"><![CDATA[castle]]></category>
  <category domain="post_tag" nicename="castle"><![CDATA[castle]]></category>
  <category domain="post_tag" nicename="development"><![CDATA[development]]></category>
  <category domain="category" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="post_tag" nicename="monorail"><![CDATA[monorail]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-01-07 12:41:44]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>14</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>212.120.152.165</wp:comment_author_IP>
    <wp:comment_date>2009-01-27 11:09:47</wp:comment_date>
    <wp:comment_date_gmt>2009-01-27 11:09:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes i generate the key for an interval, you can set a parameter in the component that you can then pass on to the implementation of your cache key

When you create an implementation of IViewComponentCacheKeyGenerator, the create method will have a IDictionary called parameters. 

If you are adding hours or minutes to create a key make sure you return the existing key 

Does this answer yr question?
I hope so and thanks for drooping by]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>12</wp:comment_id>
    <wp:comment_author><![CDATA[rjlopes]]></wp:comment_author>
    <wp:comment_author_email>rjlopes@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>195.23.24.127</wp:comment_author_IP>
    <wp:comment_date>2009-01-26 09:50:46</wp:comment_date>
    <wp:comment_date_gmt>2009-01-26 09:50:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi, you said you made your implementation dependant on time. 

How do you do that? do you generate a different key at each time interval, ex: key_yyyyMMddHH to get the component to cache one hour ?

Thanks.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>23</wp:comment_id>
    <wp:comment_author><![CDATA[Rjlopes]]></wp:comment_author>
    <wp:comment_author_email>rjlopes@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>195.23.24.127</wp:comment_author_IP>
    <wp:comment_date>2009-02-17 10:49:27</wp:comment_date>
    <wp:comment_date_gmt>2009-02-17 10:49:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi,

Where do the IViewComponentCacheKeyGenerator parameters come from?

How can i set them?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>24</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>212.120.152.165</wp:comment_author_IP>
    <wp:comment_date>2009-02-17 10:56:58</wp:comment_date>
    <wp:comment_date_gmt>2009-02-17 10:56:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Rj:
That is part of castle http://svn.castleproject.org:8080/svn/castle/trunk/MonoRail/Castle.MonoRail.Framework/ViewComponents/IViewComponentCacheKeyGenerator.cs
Let me know if you are stuck 
Cheers

Andrea]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>23</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>25</wp:comment_id>
    <wp:comment_author><![CDATA[Rjlopes]]></wp:comment_author>
    <wp:comment_author_email>rjlopes@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>195.23.24.127</wp:comment_author_IP>
    <wp:comment_date>2009-02-17 11:35:56</wp:comment_date>
    <wp:comment_date_gmt>2009-02-17 11:35:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I saw that file, but how to I pass parameters to the IViewComponentCacheKeyGenerator?

I looked at the ViewComponentDetailsAttribute and didn't saw anything, what is sent to the CacheKeyGenerator in the parameters param?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>26</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>212.120.152.165</wp:comment_author_IP>
    <wp:comment_date>2009-02-17 11:50:33</wp:comment_date>
    <wp:comment_date_gmt>2009-02-17 11:50:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[the attributes for your view component class will be something like

 [ViewComponentDetails("YourComponent", Cache = ViewComponentCache.UseCustomCacheKeyGenerator, CacheKeyFactory = typeof(YourCacheKey))]

in the definition you will probably have a parameter defined like this

[ViewComponentParam(Required = false, Default = "something")]
           public string yourParameter  { get; set; }

you can then get that from you YourCacheKey like this
var parameter = parameters["yourParameter"].ToString();

Hope it helps

Cheers

Andrea]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>25</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>27</wp:comment_id>
    <wp:comment_author><![CDATA[Rjlopes]]></wp:comment_author>
    <wp:comment_author_email>rjlopes@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>195.23.24.127</wp:comment_author_IP>
    <wp:comment_date>2009-02-17 12:05:38</wp:comment_date>
    <wp:comment_date_gmt>2009-02-17 12:05:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, the documentation of the CacheKeyGenerator didn't said what was the parameters and i didn't relate it to the ViewComponentParam.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>28</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>212.120.152.165</wp:comment_author_IP>
    <wp:comment_date>2009-02-17 13:40:02</wp:comment_date>
    <wp:comment_date_gmt>2009-02-17 13:40:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[No Problem, glad it helped 
Where are you using castle by the way? Any public site?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>27</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>29</wp:comment_id>
    <wp:comment_author><![CDATA[Rjlopes]]></wp:comment_author>
    <wp:comment_author_email>rjlopes@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>195.23.24.127</wp:comment_author_IP>
    <wp:comment_date>2009-02-17 18:12:33</wp:comment_date>
    <wp:comment_date_gmt>2009-02-17 18:12:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I used RC3 on a small site as proof of concept and I'm using now the current trunk version on a big site that will run on mono. If you want we can continue this conversation by mail.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Ruby Jobs live!</title>
  <link>http://roundcrisis.com/2009/01/09/ruby-jobs-live/</link>
  <pubDate>Fri, 09 Jan 2009 16:27:09 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=85</guid>
  <description/>
  <content:encoded><![CDATA[Hi all
just though I' d  advertise the fact that <a href="http://rubyjobs.ie/" target="_blank">rubyjobs.ie</a> is live.

I m really happy with this, Its great to see the community releasing things. Ok its very basic but I think is a really good start.
Most of the effort came from Gavin Joyce, but Declan and other people (that I cant remmeber right now, sorry no memory ) contributed to the project; it is open source and <a href="http://github.com/GavinJoyce/rubyjobs/tree/master" target="_blank">hosted in github</a>.

It all started last meetup and It will sure continue on the next one , that is the 13th of January @ 7pm in 10 Upper Fitzwilliams Street.

[googlemaps http://maps.google.com/maps?f=q&amp;hl=en&amp;geocode=&amp;q=+10+Upper+Fitzwilliam+Street&amp;sll=53.344104,-6.267494&amp;sspn=0.263178,0.53009&amp;g=10+Upper+Fitzwilliam+Street&amp;ie=UTF8&amp;t=h&amp;z=14&amp;iwloc=addr&amp;ll=53.342866,-6.245556&amp;output=embed&amp;s=AARTsJoTF_5PsIIoZOTSk5Bpqn90_tEkZA&amp;w=425&amp;h=350]

Thanks again to <a href="http://www.igopeople.com/" target="_blank">IGO People </a>that kindly provides the meeting room :) and they also launched very recently.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>85</wp:post_id>
  <wp:post_date>2009-01-09 16:27:09</wp:post_date>
  <wp:post_date_gmt>2009-01-09 16:27:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ruby-jobs-live</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="git"><![CDATA[git]]></category>
  <category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-01-09 16:27:09]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Alt.net Ireland</title>
  <link>http://roundcrisis.com/2009/01/19/altnet-ireland/</link>
  <pubDate>Mon, 19 Jan 2009 10:26:17 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=93</guid>
  <description/>
  <content:encoded><![CDATA[hi

We met with some folks in the open coffee recently. It was really nice to have a good turn out and a lot of new faces. I had in mind to talk about Alt.Net and I think one thing that is clear now is that we need to come up with a clear <strong>to do</strong>, how are we gonna work? where? that kind of thing. Its also important to have an easy way to explain this easily.

I think  it's about learning from your peers, having a space where , if you have a problem you can bounce ideas or ask if your solution is good. Someone is bound to have gone through a similar situation.

There were some discussions, and my view on this is, we should focus on the best solutions, and what are the best processes to get there  and why. 

Open Coffee was great, I was really sorry I had to leave so early... looking forward to the next one. :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>93</wp:post_id>
  <wp:post_date>2009-01-19 10:26:17</wp:post_date>
  <wp:post_date_gmt>2009-01-19 10:26:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>altnet-ireland</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="alt-net"><![CDATA[alt-net]]></category>
  <category domain="category" nicename="altnet"><![CDATA[alt.net]]></category>
  <category domain="category" nicename="opencoffee"><![CDATA[openCoffee]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1365786171;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-01-19 10:26:17]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>10</wp:comment_id>
    <wp:comment_author><![CDATA[Dinh]]></wp:comment_author>
    <wp:comment_author_email>dinh@doanvanbien.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>87.192.160.73</wp:comment_author_IP>
    <wp:comment_date>2009-01-19 11:13:51</wp:comment_date>
    <wp:comment_date_gmt>2009-01-19 11:13:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Seen that under your post:

&gt;&gt; Possibly related posts: (automatically generated)
&gt;&gt;
&gt;&gt;  How Did Angelina and Britney Lose Weight? NFL Linebacker Knows

Andrea, this is plain weird!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>11</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>212.120.152.165</wp:comment_author_IP>
    <wp:comment_date>2009-01-19 13:56:59</wp:comment_date>
    <wp:comment_date_gmt>2009-01-19 13:56:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, I dont know how that can be related, funny thou :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>A Talk about Castle on the way</title>
  <link>http://roundcrisis.com/2009/01/20/a-talk-about-castle-on-the-way/</link>
  <pubDate>Tue, 20 Jan 2009 01:57:58 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=99</guid>
  <description/>
  <content:encoded><![CDATA[Hi
This should be pretty exciting, I m hoping to do a talk in <a href="http://www.ossbarcamp.com/speakers/" target="_blank">OSSBarcamp </a>( well not really a talk but  you know) and depending on votes, I might be talking in <a href="http://developerdeveloperdeveloper.com/belfast/ProposedSessions.aspx" target="_blank">DDD Ireland</a> too, we will see.

The talk will be on Castle Project, a walk through of a sample application, the main focus on Monorail and Active Record as I saw some other people can cover IoC and DI ( which in itself is a really long talk).

I have still to decide what this app will do, I actually wanted to build something simple but useful, a few ideas but nothing that I go, yeah thats right, suggestions welcome)

I asked some people for advice on this "create a talk"  thing. I think the most sensible answer I got so far is to tell the advantages of using castle first.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>99</wp:post_id>
  <wp:post_date>2009-01-20 01:57:58</wp:post_date>
  <wp:post_date_gmt>2009-01-20 01:57:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-talk-about-castle-on-the-way</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="altnet"><![CDATA[alt.net]]></category>
  <category domain="category" nicename="castle"><![CDATA[castle]]></category>
  <category domain="post_tag" nicename="castle"><![CDATA[castle]]></category>
  <category domain="category" nicename="monorail"><![CDATA[monorail]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-01-20 01:57:58]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Dublin Alt Net Meetup - 12th of Feb 7pm</title>
  <link>http://roundcrisis.com/2009/01/26/dublin-alt-net-meetup-12th-of-feb-7pm/</link>
  <pubDate>Mon, 26 Jan 2009 10:27:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=103</guid>
  <description/>
  <content:encoded><![CDATA[Hi there: 

As a new chapter of <a href="http://roundcrisis.com/2008/08/27/from-code-monkey-to-code-crafter-ftw/" target="_blank">this post</a> finally we are doing an  <a href="http://dublinalt.net/2009/01/23/meet-up-12th-of-february-7pm/" target="_blank">Alt.net meet up</a>, I can t wait and hope for the best.  The meet up will be the <strong>12Th of February at 7pm in The Duke</strong> (off Grafton Street). Unfortunately we didn't realise it was on the same day that twestival ( a charity event for twitterers) I think we are very different events, thou i m sorry I ll be missing it, as it is a worthy cause.

I like the definition of Alt.net I found in <a href="http://laribee.com/blog/" target="_blank">David Laribee's blog</a>
<blockquote>What does it mean to be ALT.NET? In short it signifies:
<ol>
	<li>You’re the type of developer who uses what works while keeping an eye out for a better way.</li>
	<li>You reach outside the mainstream to adopt the best of any community: Open Source, Agile, Java, Ruby, etc.</li>
	<li>You’re not content with the status quo. Things can always be better expressed, more elegant and simple, more mutable, higher quality, etc.</li>
	<li>You know tools are great, but they only take you so far. It’s the principles and knowledge that really matter. The best tools are those that embed the knowledge and encourage the principles (e.g. Resharper.)</li>
</ol>
</blockquote>
I think we might be comming late into the party, however I m not interested on how are we called, I see it mostly as a way to learn and exchange ideas, solutions. Hope we can get talking about interesting topics and that we can come up with a plan for the next meet up.

Anyway, hope to see you there :), if you have any suggestions or comments you are very welcome]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>103</wp:post_id>
  <wp:post_date>2009-01-26 10:27:00</wp:post_date>
  <wp:post_date_gmt>2009-01-26 10:27:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dublin-alt-net-meetup-12th-of-feb-7pm</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="altnet"><![CDATA[alt.net]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364900503;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-01-26 10:27:00]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Find the problem, then the solution</title>
  <link>http://roundcrisis.com/2009/01/27/find-the-problem-then-the-solution/</link>
  <pubDate>Tue, 27 Jan 2009 12:19:43 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=110</guid>
  <description/>
  <content:encoded><![CDATA[I found myself making the mistake I read about a lot of times. 

It turns out we have to migrate parts of an existing solution to a different platform and I had all this questions about how to organize the new solution and I realised, hold on, I must first have a deep dive into the existing code and <strong>then</strong> start thinking about the new solution and how to architect it.

I was so easily driven to think about the solution that I lost sight of the problem, terrible and now I m advertising it... 

Maybe it was just the idea of going through the existing code disgusted me so much that I didn't want to think about it? or maybe its the fact that reading code is harder that writing it?

Hopefully I learned from it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>110</wp:post_id>
  <wp:post_date>2009-01-27 12:19:43</wp:post_date>
  <wp:post_date_gmt>2009-01-27 12:19:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>find-the-problem-then-the-solution</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="best-practices"><![CDATA[Best Practices]]></category>
  <category domain="post_tag" nicename="common-mistakes"><![CDATA[common mistakes]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-01-27 12:19:43]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Two New tools</title>
  <link>http://roundcrisis.com/2009/01/29/two-new-tools/</link>
  <pubDate>Thu, 29 Jan 2009 17:43:59 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=117</guid>
  <description/>
  <content:encoded><![CDATA[In web development, you come across tools all the time, some are incredible and I was lucky enough to find two today.

Firescope is a firebug plugin that gives you HTML and css help. its really neat <img class="alignnone" title="firescope" src="http://tools.sitepoint.com/firescope/images/firescope-logo.jpg" alt="" width="300" height="100" />

it looks like this in your firebug

<img class="alignnone" title="firescope in firebug" src="http://tools.sitepoint.com/firescope/images/screenshot-crumbtrail.png" alt="" width="737" height="311" />

(note to my friend: note the lower case logo!! hehehe)

 

Another tool that is kinda cool , but I would probably not use that much but the days that i need it I will http://www.scrnshots.com/  they have some <a href="http://www.scrnshots.com/tools" target="_blank">tools </a> and a nice api, that you can query and mash it up where ever you feel like.  This is what i mean
<a href="http://www.scrnshots.com/users/roundcrisis/screenshots/112371"><img src="http://s3.amazonaws.com/scrnshots.com/screenshots/112371/tmppng_med_rect" alt="" /></a>

I hope it helps :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>117</wp:post_id>
  <wp:post_date>2009-01-29 17:43:59</wp:post_date>
  <wp:post_date_gmt>2009-01-29 17:43:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>two-new-tools</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="tools"><![CDATA[tools]]></category>
  <category domain="category" nicename="web-development"><![CDATA[web-development]]></category>
  <category domain="post_tag" nicename="web-development"><![CDATA[web-development]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364396582;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-01-29 17:43:59]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Pragmatic Ubuntu?</title>
  <link>http://roundcrisis.com/2009/01/30/pragmatic-ubuntu/</link>
  <pubDate>Fri, 30 Jan 2009 10:17:18 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=122</guid>
  <description/>
  <content:encoded><![CDATA[Through Andy Hunt's Blog ( one of the Authors of The Pragmatic Programer)  I got the Pocket Ubuntu guide for free.

Thanks Andy and thanks to Keir Thomas for making this available in the  <a href="http://www.ubuntupocketguide.com/faq.html" target="_blank">http://www.ubuntupocketguide.com</a> 

I just went through the first chapter and found out about <a href="http://wubi-installer.org/" target="_blank">Wubi</a> ( possibly something I will try now  as I like the idea of trying things quickly without having to reboot, installing... no i didnt read much  yet).<img class="alignnone" title="Wubi" src="http://wubi-installer.org/images/wubi_logo.gif" alt="" width="256" height="84" />
<div style="font-size:15px;"><strong><span style="color:#000080;">Edit </span><span style="font-weight:normal;"> installed Wubi and its not a  virtual machine of some sort as I originally though, however its a really easy installer for windows, I intalled it as a program then rebooted and there it was, dual booting without the headaches :D with a full ubuntu desktop, not what I thoough it was but real nice :)</span></strong></div>
So far the book looks good, more on it later on. 

Cheers :D]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>122</wp:post_id>
  <wp:post_date>2009-01-30 10:17:18</wp:post_date>
  <wp:post_date_gmt>2009-01-30 10:17:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pragmatic-ubuntu</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
  <category domain="post_tag" nicename="ubuntu"><![CDATA[ubuntu]]></category>
  <wp:postmeta>
    <wp:meta_key>_oembed_9bcdd7521be7a49794ac4b7426cfb07c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-01-30 10:17:18]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Iron Ruby and talking too fast</title>
  <link>http://roundcrisis.com/2009/02/09/iron-ruby-and-talking-too-fast/</link>
  <pubDate>Mon, 09 Feb 2009 15:03:54 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=131</guid>
  <description/>
  <content:encoded><![CDATA[So today i was reading an article by Ben Hall on <a href="http://msdn.microsoft.com/en-us/magazine/dd434651.aspx" target="_blank">Getting Started With IronRuby And RSpec, Part 1</a> after I read a few paragraphs I twitted that there were "..so many things in this article that I disagreed with" Ben listened and ... asked me why.

I actually disagreed about some sentences that talk about the processes, or opinions about stuff (for example naming conventions and whent you need a framework ) however the article is really good, it explains very clearly what is the purpose of the post, there is a nice intro into Iron Ruby, some sample code, then rspec and the difference between BDD and TDD as well as a very extensive warning about how mature Iron Ruby is

What I ve learned
<ol>
	<li>Read the whole damn article before saying stuff</li>
	<li>Give reasons why is good/bad</li>
	<li>Maybe read less things, but read them properly</li>
	<li>maybe testing with IronRuby is viable and would be really nice to give a try</li>
	<li>I actaully miss duck typing much more that what i remember</li>
	<li>something that I m obviously forgetting, that i though I should add and forgot</li>
</ol>
Anyway

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>131</wp:post_id>
  <wp:post_date>2009-02-09 15:03:54</wp:post_date>
  <wp:post_date_gmt>2009-02-09 15:03:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>iron-ruby-and-talking-too-fast</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="blogging"><![CDATA[blogging]]></category>
  <category domain="post_tag" nicename="ironruby"><![CDATA[ironruby]]></category>
  <category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-02-09 15:03:54]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>I do not blog about WINE...wait actually I Do!</title>
  <link>http://roundcrisis.com/2009/02/10/i-do-not-blog-about-winewait-actually-i-do/</link>
  <pubDate>Tue, 10 Feb 2009 11:44:30 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=136</guid>
  <description/>
  <content:encoded><![CDATA[I saw some incoming links from <a href="http://curiouswines.ie" target="_blank">curiouswines.ie</a> and I though I would clarify I m not a <a class="p" href="http://www.google.ie/search?hl=en&amp;rlz=1C1CHMG_enIE291IE304&amp;ei=h2WRSbGmKZWN-gaqxemJCw&amp;sa=X&amp;oi=spell&amp;resnum=1&amp;ct=result&amp;cd=1&amp;q=wine+connoisseur&amp;spell=1">wine <strong><em>connoisseur</em></strong></a>  (I ll keep trying tho :D) however, the word does remind me about WINE, the translation layer that allows windows applications to be run on Linux.

<a href="http://www.winehq.org/about/"> <img class="alignnone" title="WINE" src="http://appdb.winehq.org/images/winehq_logo_glass_sm.png" alt="" width="60" height="94" /></a><img class="alignnone" title="Wine HQ" src="http://www.winehq.org/images/winehq_logo_text.png" alt="" width="112" height="35" />

<a href="http://www.winehq.org/about/"></a>Please note WINE stands for Wine Is Not an Emulator, hence not paying the penalties of one.  It looks like this is mostly for games, thou Photoshop and Autocad are supported (with minor issues) I dont really need either right now but you never know when you are going to need one.

For the more conventional wine (ie the one to drink), i think you better to talk to the guys down in Cork, <a href="http://curiouswines.ie/"> curiouswines.ie </a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>136</wp:post_id>
  <wp:post_date>2009-02-10 11:44:30</wp:post_date>
  <wp:post_date_gmt>2009-02-10 11:44:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>i-do-not-blog-about-winewait-actually-i-do</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-02-10 11:44:30]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Tool set for .net  development</title>
  <link>http://roundcrisis.com/2009/02/15/tool-set-for-net-development/</link>
  <pubDate>Sun, 15 Feb 2009 12:40:39 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=151</guid>
  <description/>
  <content:encoded><![CDATA[I have 10 minutes to write this, and I ve been meaning to ...

This is a few things that I use (or want to try) :
<h3><strong>Unit Testing Tools</strong></h3>
<a href="http://www.mbunit.com/" target="_blank">MbUnit </a>- Faster to test AR Datamodels 

<a href="http://nunit.org/index.php" target="_blank">NUnit</a> Nothing bad about it, nothing that made me go <strong>wow!</strong> that's great!  (that i can remember right now)

and of course

<a href="http://www.testdriven.net/" target="_blank">Test Driven </a> Just love the fact that you can right click a test, a unit or a project or a solution and just run the test or in the worse case scenario debug the test.
<h3>Mocking Tools</h3>
<a href="http://ayende.com/projects/rhino-mocks.aspx" target="_blank">Rhino Mocks </a> Used it a few times, don't really like it, perhaps because I don't understand it all that well

<a href="http://www.typemock.com/" target="_blank">Type Mock  </a>Supposedly easier to use but compromises design

Roy Osherove posted <a href="http://code.google.com/p/mocking-frameworks-compare/" target="_blank">this </a>today on twitter. Basically a google code projet to compare differnt mocking frameworks, since this is part of the topics for <strong><span style="color:#339966;">alt.net meetup next month</span></strong> have a look :) 
<h3>DI IoC Containers</h3>
<a href="http://castleproject.org/container/index.html" target="_blank">Windsor/MicroKernel</a>

Windsor is an Inversion of Control container, it helps you decouple your code and by proxy, it makes your code more testable.  IT is pretty obvious I m not gonna go into detail, however I will say I found this to be very useful

<a href="http://structuremap.sourceforge.net/Default.htm" target="_blank">Structure Map</a>

I havent used this IoC DI tool, is in my wish list and would like to see how it differs from Windsor.
<h3>Commons</h3>
<strong>Edit:I </strong>had to add this, <a href="http://ayende.com/wiki/Rhino%20Commons.ashx" target="_blank">Rhino Commons</a> this includes two things that are very useful, a generic Repository ( i know some peoplea re against this) , the Log4net helper and the IoC helper
<h3>IDE Add Ins</h3>
<img class="alignleft" title="Resharper" src="http://www.jetbrains.com/resharper/favicon.ico" alt="" width="48" height="48" />I don't think i even have to mention <a href="http://www.jetbrains.com/resharper/" target="_blank">ReSharper</a>, I really can not code without it :) KeyMap <a href="http://www.jetbrains.com/resharper/documentation/feature_map.html" target="_blank">here</a>

In my wish list and from JetBrains as well,  is to test <a href="http://www.jetbrains.com/teamcity/" target="_blank">Team City</a>,a simple to use CI; an alternative to this is <a href="http://confluence.public.thoughtworks.org/display/CCNET/Welcome+to+CruiseControl.NET" target="_blank">Cruise Control.net</a> , not so simple to set up but open source

 

<a href="http://www.red-gate.com/products/reflector/" target="_blank">Reflector </a>by Red Gate is a handy tool as well. Use it a lot to inspect castle helpers. Reflector was originally developed by <a href="http://www.lutzroeder.com/" target="_blank">Lutz Roeder</a> ; Red Gate has promised to  maintain a free version for the benefit of the community. I Really hope so.

 

I m doing web development , this obviously means I m using Firebug. I found gotapi.com a really useful site (html, css and js reference amongst others)

Browsers: my default is Chrome at the moment, however I use Firefox and ie ( to test that it works )

No more time for today will continue later .  

Have a Nice Sunday! If you feel like it, what is your tool set?]]></content:encoded>
  <excerpt:encoded><![CDATA[Now Updated to add Rhino Commons]]></excerpt:encoded>
  <wp:post_id>151</wp:post_id>
  <wp:post_date>2009-02-15 12:40:39</wp:post_date>
  <wp:post_date_gmt>2009-02-15 12:40:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tool-set-for-net-development</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="mock"><![CDATA[mock]]></category>
  <category domain="category" nicename="productivity"><![CDATA[productivity]]></category>
  <category domain="post_tag" nicename="software-development"><![CDATA[software-development]]></category>
  <category domain="post_tag" nicename="tool"><![CDATA[tool]]></category>
  <category domain="post_tag" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-02-15 12:40:39]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>19</wp:comment_id>
    <wp:comment_author><![CDATA[Slava Imeshev]]></wp:comment_author>
    <wp:comment_author_email>vimeshev@viewtier.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.viewtier.com</wp:comment_author_url>
    <wp:comment_author_IP>24.130.12.57</wp:comment_author_IP>
    <wp:comment_date>2009-02-16 05:18:46</wp:comment_date>
    <wp:comment_date_gmt>2009-02-16 05:18:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You might also add our <a href="http://www.viewtier.com" rel="nofollow">Parabuild</a> to the toolset - we have quite some number of .NET developers as customers.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>20</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>212.120.152.165</wp:comment_author_IP>
    <wp:comment_date>2009-02-16 11:43:29</wp:comment_date>
    <wp:comment_date_gmt>2009-02-16 11:43:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Cheers Slava will give it a try]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>19</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>21</wp:comment_id>
    <wp:comment_author><![CDATA[Claudio Perrone]]></wp:comment_author>
    <wp:comment_author_email>cperrone@innerworkings.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.claudioperrone.com/blog</wp:comment_author_url>
    <wp:comment_author_IP>193.1.209.151</wp:comment_author_IP>
    <wp:comment_date>2009-02-16 12:23:30</wp:comment_date>
    <wp:comment_date_gmt>2009-02-16 12:23:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I love the mock comparison link...good find. By the way, if you have problems with understanding Rhino, you may definitely look into Moq. If you also have problems with Moq, you may want to see what is like to do mocks and stubs by hand over and over :-)
Rhino syntax has evolved recently, but, for compatibility sake, left quite a bit of alternative notations that might put you off initially.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>22</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>87.198.31.39</wp:comment_author_IP>
    <wp:comment_date>2009-02-16 21:21:51</wp:comment_date>
    <wp:comment_date_gmt>2009-02-16 21:21:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Claudio :D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>21</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Careful What you Cache For</title>
  <link>http://roundcrisis.com/2009/02/23/careful-what-you-cache-for/</link>
  <pubDate>Mon, 23 Feb 2009 18:07:05 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=162</guid>
  <description/>
  <content:encoded><![CDATA[Had a DetachedCriteria, very simple,  I check it running with  profiler side by side  and I see loads of queries running. Why?

The criteria was something like this 
<code>
var criteria = DetachedCriteria.For&lt;MyEntity&gt;()
.SetCacheable(true)
.SetCacheRegion(CacheRegions.RarelyChanges)
.SetFetchMode("<span style="color:#ff6600;">Things</span>", FetchMode.Eager)
.AddOrder(Order.Asc("Name"));</code>

I was trying to cache a criteria for MyEntity and have an eager fetch mode for  <span style="color:#ff6600;">Things </span>( a collection of <span style="color:#ff6600;">Thing</span>) ,  so, it turns out that i have an n+1 .

In the view, there was an iterator in the <span style="color:#ff6600;">Things</span> Collection, so  just to confirm I removed the reference in the view to this and profiler was running the expected queries(no n+1). 

removed the references to caching in the criteria  just to see what was happening, an the resulting query was getting what it supposed to get,  added the call in my view for each <span style="color:#ff6600;">Thing </span>in the <span style="color:#ff6600;">Things</span><span style="color:#ff6600;"> </span>Collection perfect, the query was running fine and not doing the n+1 .

I decided to leave caching out just this one time and I m writing this post to remind myself to check exactly why this is happening, or maybe someone will have the answer already?

Can't remember the definition of MyEntity, might add it to comments later]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>162</wp:post_id>
  <wp:post_date>2009-02-23 18:07:05</wp:post_date>
  <wp:post_date_gmt>2009-02-23 18:07:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>careful-what-you-cache-for</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="caching"><![CDATA[caching]]></category>
  <category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>
  <category domain="post_tag" nicename="nhibernate"><![CDATA[NHibernate]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-02-23 18:07:05]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Technical Speaker Training Event (free)</title>
  <link>http://roundcrisis.com/2009/02/21/technical-speaker-training-event-free/</link>
  <pubDate>Sat, 21 Feb 2009 11:00:16 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=164</guid>
  <description/>
  <content:encoded><![CDATA[Hi all:

I m really glad this is happening, there is going to be a series of meet ups to learn how to do technical talks specially for woman in technology.

The meet ups are going to be about an hour and a half long on how to do technical talks. This is something organized with the girls from Girl Geek Dinner. 

The talks are as follows:
<p class="MsoNormal"><span><strong>Speaker Night 1:               Thursday, February 26<sup>th</sup> from 6pm-7:30pm</strong></span></p>
<p class="MsoNormal"><span><span>                Topic: <em>What Am *<strong>I</strong>* Supposed to Talk About?</em></span></span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Finding your voice</span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Coming up with topics/content/titles</span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Building a story from your content</span></p>
<p class="MsoListParagraph"><span> </span></p>
<p class="MsoNormal"><span><strong>Speaker Night 2:               Thursday, March 5<sup>th</sup> from 6pm-7:30pm</strong></span></p>
<p class="MsoNormal"><span><span>                Topic: <em>The Nitty Gritty of Technical Talks</em></span></span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Demo-ing with code</span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Useful tools for technical demos/presentations</span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Things everyone hates</span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Failure recovery</span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Your failsafe list</span></p>
<p class="MsoNormal"><span> </span></p>
<p class="MsoNormal"><span><strong>Speaker Night 3:               Thursday, March 12<sup>th</sup> from 6pm-7:30pm</strong></span></p>
<p class="MsoNormal"><span><span>                Topic: <em>Grooving and Improving</em></span></span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Handling Q&amp;A</span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Techniques for self-improvment</span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Critiquing your own performance</span></p>
<p class="MsoListParagraph"><span><span><span>o</span><span>   </span></span></span><span>Finding your honest feedback crowd</span></p>
<p class="MsoNormal"><span> </span></p>
<p class="MsoNormal"><span><strong>Speaker Night 4:               Thursday, March 19<sup>th</sup> from 6pm-7:30pm</strong></span></p>
<p class="MsoNormal"><span><span>                Topic: <em>TBD – we’ll either repeat a session or do a special request like slide-building?</em></span></span></p>

 
<a href="http://www.irelandgirlgeekdinners.com/?p=52" target="_blank"> More information</a>
[googlemaps http://maps.google.com/maps?f=q&amp;source=s_q&amp;hl=en&amp;geocode=&amp;q=24+south+william+street&amp;sll=53.341713,-6.263859&amp;sspn=0.003734,0.009656&amp;ie=UTF8&amp;t=h&amp;z=14&amp;iwloc=addr&amp;ll=53.348348,-6.258602&amp;output=embed&amp;s=AARTsJpj7OjDNNuzRphacrg3G3maojD-_Q&amp;w=425&amp;h=350]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>164</wp:post_id>
  <wp:post_date>2009-02-21 11:00:16</wp:post_date>
  <wp:post_date_gmt>2009-02-21 11:00:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>technical-speaker-training-event-free</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="ggd"><![CDATA[GGD]]></category>
  <category domain="category" nicename="girl-geek-dinners"><![CDATA[Girl Geek Dinners]]></category>
  <category domain="category" nicename="technical-talks"><![CDATA[technical talks]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364566853;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-02-21 11:00:16]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>31</wp:comment_id>
    <wp:comment_author><![CDATA[Scott Bellware]]></wp:comment_author>
    <wp:comment_author_email>sbellware@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://scottbellware.com</wp:comment_author_url>
    <wp:comment_author_IP>66.68.6.104</wp:comment_author_IP>
    <wp:comment_date>2009-02-21 22:13:58</wp:comment_date>
    <wp:comment_date_gmt>2009-02-21 22:13:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What kind of specializations are applied to a topic like this to make it more beneficial to women?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>32</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>87.198.31.95</wp:comment_author_IP>
    <wp:comment_date>2009-02-21 23:29:33</wp:comment_date>
    <wp:comment_date_gmt>2009-02-21 23:29:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Scott 
Thanks for your comment.
Regarding your question, a straight answer : Content wise, none really. 
However as you might have noticed there arent many woman doing technical talks. We talked about this in Girl Geek Dinner and we came to the conclusion we should do something, ie start putting talks together, at that point we all sensed we needed a trail run of the talks just to see how it would work, get feedback, etc; this evolved into the series advertised above. 
All suggestions and tips welcome]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>31</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Presenting at Developer Developer Developer Belfast </title>
  <link>http://roundcrisis.com/2009/03/02/presenting-at-developer-developer-develop-belfast/</link>
  <pubDate>Mon, 02 Mar 2009 12:42:20 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=177</guid>
  <description/>
  <content:encoded><![CDATA[Hi there

I received an email yesterday confirming I will be presenting "An Introduction to Monorail" in Developer Develop Belfast the 4th of April. I m really excited with this. 

I just would like to say Thanks to you. And by you i mean people who are reading this :) because possibly you voted for my session.

Now the hard work begins

If you have any suggestions or comments on either the topic or on presentations please do add a comment.

Thanks again

 

Andrea

PS I ll add my slides here in the next two weeks]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>177</wp:post_id>
  <wp:post_date>2009-03-02 12:42:20</wp:post_date>
  <wp:post_date_gmt>2009-03-02 12:42:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>presenting-at-developer-developer-develop-belfast</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-03-02 12:42:20]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Blackout Ireland - No to censorship</title>
  <link>http://roundcrisis.com/2009/03/05/blackout-ireland-no-to-censorship/</link>
  <pubDate>Thu, 05 Mar 2009 12:07:28 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=186</guid>
  <description/>
  <content:encoded><![CDATA[<img class="alignleft size-full wp-image-187" title="Blackout Ireland" src="http://roundcrisis.files.wordpress.com/2009/03/blackouttextire.jpg" alt="Blackout Ireland" width="200" height="200" />  This post goes againt my idea of restricting the blog to purely technical matters. In this case is well worht it because our freedom on the net is threatened.

What Happened

IRMA (a consorium of record labels) sued Eircom and then Eircom settled the case out of cout to (amongs other thing sI m not really sure) implement a <strong>three strike policy</strong> and censor sites, ie if you are with eircom and IRMA tells Eircom somesite.com must be blacklisted, then no eircom customer will be able to see that site (not sure on the specifics of this and how the process to block a site will happen) . This means censorship to me. Censorship should not come from companies I dont think.

The Three strike policy is as described in the IRMA website 

 
<code>
<span style="color:#cc0000;">28th January 2009 - P2P Infringement Case Settled</span></strong>High Court proceedings between four major record companies, EMI, Sony, Universal and Warner and Eircom which have been at trial for eight days, have been settled on an amicable basis with both sides expressing satisfaction with the outcome.    

Both parties have agreed on a joint approach under which they will work closely together to end the abuse of the Internet by P2P copyright infringers.

The settlement reached between the parties provides that the record companies will supply eircom with the IP addresses of all persons who they detect illegally uploading or downloading copyright works on a peer to peer ( P2P) basis.

Eircom has agreed that it will from now on implement a graduated process in which it will:

1)	inform its broadband subscriber that the subscribers IP address has been detected infringing copyright and

2)	warn the subscriber that unless the infringement ceases the subscriber will be disconnected and

3)	in default of compliance by the subscriber with the warning it will disconnect the subscriber.

The record companies have agreed that they will take all necessary steps to put similar agreements in place with all other IPSs in Ireland.
</code> 


Let me get this straight, I don't think is wrong that the IRMA wants to protect their copyrights, however this is not the way for many reasons.

For a start How would they know for a fact that the registered person to that ip is the one doing the ilegal download? how can they assure they ll get it right , every time ? How about some guest in your house downloading stuff. or even what if you download things by mistake? How do you appeal to this process? ... the list of questions is endless


Why this is an issue
On a practical level If you use the internet on a daily basis this is a huge issue because you could get cut off the internet even if you have done absolutely nothing wrong.
Most people I know use internet for work. or log in to work from home at least some times.
On an ethical level: I really think this kinds of policies should not be implemented at all. And if they have to be implemented they should never be implemented by companies, they have their own interests and they are not those of the general public

I m hoping to continue a series of posts on this issue. If I have stated something that is incorrect please let me know]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>186</wp:post_id>
  <wp:post_date>2009-03-05 12:07:28</wp:post_date>
  <wp:post_date_gmt>2009-03-05 12:07:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>blackout-ireland-no-to-censorship</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="blackoutireland"><![CDATA[blackoutIreland]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1321998509";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-03-05 12:07:28]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>37</wp:comment_id>
    <wp:comment_author><![CDATA[WillKnott.ie &raquo; Blog Archive &raquo; Going Dark]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://willknott.ie/2009/03/05/going-dark/</wp:comment_author_url>
    <wp:comment_author_IP>81.17.252.145</wp:comment_author_IP>
    <wp:comment_date>2009-03-05 18:23:14</wp:comment_date>
    <wp:comment_date_gmt>2009-03-05 18:23:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] with the other voices around Ireland speak out on this [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Ada Lovelace Day:Barbara Liskov</title>
  <link>http://roundcrisis.com/2009/03/24/ada-lovelace-daybarbara-liskov/</link>
  <pubDate>Tue, 24 Mar 2009 18:21:05 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=197</guid>
  <description/>
  <content:encoded><![CDATA[Hi. 

This is my post for Ada Lovelace Day. 

Barbara Liskov (born Barbara Jane Huberman in 1939) is the creator of the <strong>Liskov Substitution Principle, </strong>this is how I got to know about her work,<strong> </strong>also

She was the first woman to get a PhD in computing in the United States (1968) [so close in time to <a href="http://en.wikipedia.org/wiki/Summer_of_Love" target="_blank">the summer of love</a> ... makes you think about the history of the world...anyway]

Only recently Barbara <a href="http://web.mit.edu/newsoffice/2009/turing-liskov-0310.html/" target="_blank">won the prestigious Turing Award</a>, an award known as "the Nobel prize in computing". It was awarded for her work on the design of programing languages. Her research was very significant because it makes software easier to construct, modify and maintain, these ideas derived from from her experience building the VENUS operating system, a time sharing OS .

If you remember when  <a href="http://www.lostechies.com/blogs/chad_myers/archive/2008/03/07/pablo-s-topic-of-the-month-march-solid-principles.aspx" target="_blank">S.O.L.I.D</a> became a bit of a buzz word last year, then you know that the L is for the Liskov substitution principle, as described by Barbara Liskov: 

<code> Let q(x) be a property provable about objects x of type T. Then q(y) should be true for objects y of type S where S is a subtype of T.
</code>

then explored by <a href="http://www.objectmentor.com/resources/articles/lsp.pdf" target="_blank">Robert Martin</a>
<code>
Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.
</code>
This is a very important principle that gives you guidelines on how to avoid coupling (if you want to keep reading about it read the Martin article is quite a good read). 

 

Honestly I don't mind who is the source of knowledge, however there must be something wrong going on in the world since there aren't all that many women in IT and even less in software development, I dont really know why but I certaintly hope it changes and maybe this little post will help just one little bit to show that women in IT can do wonderful things, as Barbara Liskov they can come up with the one of the most important principles of software development.

Get coding girl!

Some other links:

<a href="http://web.mit.edu/newsoffice/2009/turing-liskov-0310.html/">http://web.mit.edu/newsoffice/2009/turing-liskov-0310.html/</a>

<span><a href="http://www.engineergirl.org/?id=7963">http://www.engineergirl.org/?id=7963</a></span>

<span><a href="http://en.wikipedia.org/wiki/Liskov_substitution_principle">http://en.wikipedia.org/wiki/Liskov_substitution_principle</a>
</span>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>197</wp:post_id>
  <wp:post_date>2009-03-24 18:21:05</wp:post_date>
  <wp:post_date_gmt>2009-03-24 18:21:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ada-lovelace-daybarbara-liskov</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="ada-lovelace-day"><![CDATA[ada lovelace Day]]></category>
  <category domain="post_tag" nicename="ald09"><![CDATA[ALD09]]></category>
  <category domain="category" nicename="principles"><![CDATA[principles]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1365782509;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4bee8ca5354d5db8a18d904a28a9d3ea</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_46a49d85f04e110a4fa519f4053ef47c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_90aa88e5db8f7f62b4b551770b60b578</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-03-24 18:21:05]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>OssBarcamp tomorrow 28/03/2009 at DIT Kevin Street</title>
  <link>http://roundcrisis.com/2009/03/27/ossbarcamp-tomorrow-28032009-at-dit-kevin-street/</link>
  <pubDate>Fri, 27 Mar 2009 15:03:48 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=202</guid>
  <description/>
  <content:encoded><![CDATA[Hi there just a friendly reminder about OssBarcamp

Its tomorrow from 9.30am to 4.30pm

there is a map to the location <a href="http://www.ossbarcamp.com/2009/03/27/housekeeping/" target="_blank">here</a> (really close to Whelans)

It should be great fun. Looking forward to see Jaime's talk on Git and other talks look really interesting too (jQuery, webdev tricks, etc).  I hope some people will show up to my little talk about Monorail. I ll be uploading the content (slides and samples) this evening (i ll add the mandatory post about it here when I do) . Your questions or comments will be appreciated
<p style="text-align:center;"><img class="aligncenter" title="OssBarcamp" src="http://www.ossbarcamp.com/wp-content/themes/ossbarcamp/logo.jpg" alt="" width="376" height="104" />Cheers</p>
<p style="text-align:center;">Andrea</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>202</wp:post_id>
  <wp:post_date>2009-03-27 15:03:48</wp:post_date>
  <wp:post_date_gmt>2009-03-27 15:03:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ossbarcamp-tomorrow-28032009-at-dit-kevin-street</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="barcamp"><![CDATA[barcamp]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364230153;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-03-27 15:03:48]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>twitter_cards_summary_img_size</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Monorail Presentation</title>
  <link>http://roundcrisis.com/2009/03/28/monorail-presentation/</link>
  <pubDate>Sat, 28 Mar 2009 00:48:02 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=204</guid>
  <description/>
  <content:encoded><![CDATA[Hi there:

I have just uploaded my presentation about castle Monorail, you can find it <a href="http://www.slideshare.net/roundcrisis/monorail-introduction-1212832" target="_blank">here</a>.

[slideshare id=1212832&amp;doc=monorailintroduction-090327185816-phpapp01]

The sample code for the presentation will be uploaded soon into some code repository, its a bit too late and I rather go to sleep now.  :)

Corrections and feedback are always welcome. :D

By the way, there was a little bit of a reschedule and <strong>my talk is at 13:30.</strong> 

Hope it all goes well tomorrow. Looking forward to it.

Andrea]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>204</wp:post_id>
  <wp:post_date>2009-03-28 00:48:02</wp:post_date>
  <wp:post_date_gmt>2009-03-28 00:48:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>monorail-presentation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="castle"><![CDATA[castle]]></category>
  <category domain="category" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="post_tag" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <category domain="post_tag" nicename="talk"><![CDATA[talk]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1321998513";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-03-28 00:48:02]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>49</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>147.252.112.10</wp:comment_author_IP>
    <wp:comment_date>2009-03-28 11:59:28</wp:comment_date>
    <wp:comment_date_gmt>2009-03-28 11:59:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Ken 
Thanks so much for your feedback.
I ll have a look at your link later on.
Cheers

Andrea]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>48</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>48</wp:comment_id>
    <wp:comment_author><![CDATA[Ken Egozi]]></wp:comment_author>
    <wp:comment_author_email>mail@kenegozi.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.kenegozi.com/blog</wp:comment_author_url>
    <wp:comment_author_IP>84.108.180.144</wp:comment_author_IP>
    <wp:comment_date>2009-03-28 11:51:39</wp:comment_date>
    <wp:comment_date_gmt>2009-03-28 11:51:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi - looks superb. 
A little thigny - on page 13 you seam to have a little typo - 'ealy' might have been 'early'

Also, if you'd like to get some more pre-made monorail related slides you can take a peek at (and freely copy from):
http://www.kenegozi.com/blog/2009/02/02/stuff-from-the-monorail-presentation.aspx

I also likes the demo app you're showing, as it's has much better real-life feeling than my lame demo.  The major complaint I had when doing my MR presentations in the past was about the not-real-enough demos, so one more kudos to you.  
good luck with tomorrow,
K.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Developer Developer Developer Belfast -This saturday 4th of April</title>
  <link>http://roundcrisis.com/2009/03/30/developer-developer-developer-belfast-this-saturday-4th-of-april/</link>
  <pubDate>Mon, 30 Mar 2009 13:46:33 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=211</guid>
  <description/>
  <content:encoded><![CDATA[Hi.

As you might know I m talking at Developer Developer Developer Belfast ( I refuse to call it DDD, in my head that is Domain Driven Design and I want to keep it that way)

There are plenty of really interesting talks ,I m looking forward to either <a href="http://www.developerdeveloperdeveloper.com/belfast/ViewSession.aspx?SessionID=162">Creating extendable applications using MEF</a> or <a href="http://www.developerdeveloperdeveloper.com/belfast/ViewSession.aspx?SessionID=195">DDD, SOA, Messaging, Architecture</a> and <a href="http://www.developerdeveloperdeveloper.com/belfast/ViewSession.aspx?SessionID=184">jQuery Deep Dive</a> or <a href="http://www.developerdeveloperdeveloper.com/belfast/ViewSession.aspx?SessionID=194">A peek at Silverlight 3</a>. You can see the complete Agenda <a href="http://www.developerdeveloperdeveloper.com/belfast/Schedule.aspx" target="_blank">here</a>

And you can register to attend the event <a href="http://www.developerdeveloperdeveloper.com/belfast/Register.aspx" target="_blank">here</a>. I think there are some places left.

Hope to see you there!

Andrea]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>211</wp:post_id>
  <wp:post_date>2009-03-30 13:46:33</wp:post_date>
  <wp:post_date_gmt>2009-03-30 13:46:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>developer-developer-developer-belfast-this-saturday-4th-of-april</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="belfast"><![CDATA[belfast]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <category domain="post_tag" nicename="talk"><![CDATA[talk]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364380872;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-03-30 13:46:33]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Monorail Presentation Slides Updated</title>
  <link>http://roundcrisis.com/2009/04/02/monorail-presentation-slides-updated-2/</link>
  <pubDate>Thu, 02 Apr 2009 08:46:11 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=226</guid>
  <description/>
  <content:encoded><![CDATA[<div>

Hi all

I have updated the slides for the monorail presentation as follows (There are 23 slides if you see less it means there is caching somewhere along the lines, get them quickly  <a href="http://www.slideshare.net/roundcrisis/monorail-introduction-1212832" target="_blank">here</a>)

[slideshare id=1212832&amp;doc=monorailintroduction-090327185816-phpapp01]

Comments, questions and typos all welcome so they can be corrected.

Cheers</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>226</wp:post_id>
  <wp:post_date>2009-04-02 08:46:11</wp:post_date>
  <wp:post_date_gmt>2009-04-02 08:46:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>monorail-presentation-slides-updated-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="activerecord"><![CDATA[ActiveRecord]]></category>
  <category domain="category" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="post_tag" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="category" nicename="nvelocity"><![CDATA[NVelocity]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <category domain="category" nicename="windsor"><![CDATA[windsor]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1321998503";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-04-02 08:46:11]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Monorail Sample code - NetTwitt</title>
  <link>http://roundcrisis.com/2009/04/06/monorail-sample-code-nettwitt/</link>
  <pubDate>Mon, 06 Apr 2009 12:01:11 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=228</guid>
  <description/>
  <content:encoded><![CDATA[Hi all:

During the previous two weeks I ve been presenting "An Introduction to Monorail" in Belfast for the  <a href="http://www.developerdeveloperdeveloper.com/belfast/Default.aspx" target="_blank">Developer Developer Developer Belfast</a> and in <a href="http://www.ossbarcamp.com/speakers/" target="_blank">OssBarcamp </a>in Dublin, I said I would make the sample code available and here it is.

The application presents a simple Twitter application, user can post a twitt, user can follow other users.

This sample uses Monorail, Active record, NVelocity and Windsor integration.

The slides are in the previous post, the code its now available from <a href="http://code.google.com/p/storm-the-castle/source/browse/#svn/trunk" target="_blank">here</a>

Please note, if you go to the trunk you ll see a folder called <strong>GettingStartMonoRailAndActiveRecord</strong>, a hello world for Monorail (using Brail) and Active Record written by <a href="http://chornsokun.wordpress.com/" target="_blank">Chorn Sokun</a>, then you can find<strong> NetTwitt</strong>, the code that I used for the presentation. I believe it was a good idea to put both together, so if you are getting started you have more to look at.

You should simply get the trunk, open one of the solutions, hit F5 and it should run (on Cassini)

If you have any questions or comments please let me know so we cna do something about it

Cheers

 

Andrea]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>228</wp:post_id>
  <wp:post_date>2009-04-06 12:01:11</wp:post_date>
  <wp:post_date_gmt>2009-04-06 12:01:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>monorail-sample-code-nettwitt</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="activerecord"><![CDATA[ActiveRecord]]></category>
  <category domain="category" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="post_tag" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="category" nicename="windsor"><![CDATA[windsor]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367688";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-04-06 12:01:11]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Webby - simple websites made simple</title>
  <link>http://roundcrisis.com/2009/04/28/webby-simple-websites-made-simple/</link>
  <pubDate>Tue, 28 Apr 2009 13:24:40 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=238</guid>
  <description/>
  <content:encoded><![CDATA[My dad asked me to help him do a website, so I started looking at the options, I definitely do not want to maintain this at all I thought.

He said: I just want an info page. 

And I though about <a href="http://ananelson.com/" target="_blank">Ana Nelson</a> and her recent talk in Ruby Ireland about how to regenerate documentation[update: jsut been to her site and she moved her blog to webby :D], so 15 min ago I was trying <a href="http://webby.rubyforge.org/" target="_blank">webby</a>, and its <strong>great</strong>, its a framework that does exactly what a framework should do: save you time but does things properly.

From my 15 min experience I can see that Its super easy to use, It generates a web structure quickly,  it's template based and does loads of smart things for example: 
<ul>
	<li>In the css you can define "variables" with, for example, colours ( always thought this was necessary but also I think variables shouldn't be implemented in the css definition)</li>
	<li>you can output to other formats ( in my case pdf output is really handy )</li>
	<li><strong>goodness</strong>. Because Webby is a wrapper around rake, you can simply deploy to a site server </li>
</ul>
I ll see what else I can use, but I really like it because it allows me to do something I m happy with very quickly and that means that I m actually waiting for my dad to send me the pictures and remaining content so i can deploy this site :p.

Also it gives me room to add some eye candy, I was reading this related <a href="http://short.ie/ahm60t" target="_blank">post </a>and really liked it too.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>238</wp:post_id>
  <wp:post_date>2009-04-28 13:24:40</wp:post_date>
  <wp:post_date_gmt>2009-04-28 13:24:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>webby-simple-websites-made-simple</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="web-development"><![CDATA[web-development]]></category>
  <category domain="post_tag" nicename="webby"><![CDATA[webby]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1366286279;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-04-28 13:24:40]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Developer Developer Developer Scotland</title>
  <link>http://roundcrisis.com/2009/05/04/developer-developer-developer-scotland/</link>
  <pubDate>Mon, 04 May 2009 19:18:01 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=242</guid>
  <description/>
  <content:encoded><![CDATA[After a very fun DDD Belfast I was debating,whether I should go to Developer Developer Developer Scotland, in the end I did and it was a good decision. I had a great day and a great night talking to other geeks.

I got there a bit late, flight+train + walk+ getting lost in the campus, however I did catch the tail of the Refactoring presentation by <a href="http://garyshortblog.org" target="_blank">Gary Short</a> I was curious as to how Refactor and other Dev Express tools look and work.  

Then I went to a talk that I was quite looking forward to: <strong>Embracing a new world - dynamic languages and .NET</strong> by Ben Hall, he started of by presenting ruby and then IronRuby, then he moved on to show how you can use ruby and .Net by creating a sample wpf from the command line with very little code, then came what I think was the best part of the talk :  that joke about Gary Short writing IronSmalltalk (hehe just kidding), the best part of the talk was when he showed how to use Iron Ruby and embedded it into a program, there is an article about it<a href="http://www.simple-talk.com/content/article.aspx?article=697" target="_blank"> here</a>, what that means is that basically you can get to use ruby syntax within you app, I find that really powerful. He also talked about rspec and Rails and how .net developers should be checking these frameworks out, I agree on this, particularly for testing, I hope to see more talks on this subject. 

Then I went to  <a href="http://serialseb.blogspot.com/" target="_self">Sebastien Lambla</a>'s <strong>Asp.Net </strong><strong>MVC</strong><strong> best practises</strong>, were he talked about how to modify Asp.Net MVC default behaviour and project, to make it better with more SoC, implementing some healthy conventions,etc (I ll update this post with the slide deck when/if it becomes available) . What sticks in my mind at the moment is the way he was using a Model for each view. He was also using <a href="http://castleproject.org/container/index.html" target="_blank">Windsor</a> heavily and I think he did a fantastic job explaining what it is and how to use a container. Another thing I liked was that he refereed to a God Object, I think we all know what that means and why it should be avoided, great way to describe it tho.Kudos to Seb for bringing up the GaGoRuCo incident  and added images of naked man in the slides :) . Extra bonus points for mentioning castle Monorail. 

Then it was lunch time and there were some Grok talks, I was just in one of them about Sharepoint, the presenter ( i m afraid I dont know your name sorry) was showing how to use Typemock to do Sharepoint development. I m sure it helps not to have to depend on having the server in your machine, fair play.

After lunch I popped into Barry Carr's <strong>What is Functional Programming? </strong>really good talk, it quickly immerses you in the world of Functional Programming, How it started, the history, the principles and then some code with <strong>Scala</strong>. Many of the concepts that are available to Scala ( and used in functional programming) are not alien, its how you use this concepts that is different, <strong>Scala</strong> is ,of course, designed for this, hence the syntax is better for it. Liked how Currying is implemented, want to look into Actors a bit more.

To finish of I went to: <strong>AOP with Castle Windsor and PostSharp</strong> by Chris Canal, Chris presented the principal concepts of AOP and then moved on to samples. First with castle and then with PostSharp. He started with the Runtime Weaving using castle (Windsor and DynamicProxy2) , then he moved on to postSharp to show compile time Weaving. All in all good intro into Aspect Oriented Programming.

Then we went on to a Geek Dinner, it was great to just talk to everyone and the food was really nice. I had a fantastic time, learned loads, met some really interesting people , so I consider the trip a complete success. Thanks to Colin, Chris and everyone organizing this event.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>242</wp:post_id>
  <wp:post_date>2009-05-04 19:18:01</wp:post_date>
  <wp:post_date_gmt>2009-05-04 19:18:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>developer-developer-developer-scotland</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="aop"><![CDATA[AOP]]></category>
  <category domain="post_tag" nicename="aspnet-mvc"><![CDATA[asp.net MVC]]></category>
  <category domain="post_tag" nicename="ironruby"><![CDATA[ironruby]]></category>
  <category domain="post_tag" nicename="scala"><![CDATA[scala]]></category>
  <category domain="post_tag" nicename="talk"><![CDATA[talk]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364470180;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-05-04 19:18:01]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Scrumy</title>
  <link>http://roundcrisis.com/2009/05/04/scrumy/</link>
  <pubDate>Mon, 04 May 2009 23:16:22 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=245</guid>
  <description/>
  <content:encoded><![CDATA[Quick post about this little board app. Say you are doing agile and you have the board with cards, why do you need the physical board? head to scrumy<a href="http://scrumy.com/">http://scrumy.com</a> It s very simple to use and no signup required (love that)

Even at a glance I can see I would miss some things, however It could prove useful to you.

I got to see this because the <a href="http://masstransit.pbworks.com/FrontPage">masstransit </a>website has a link to their <a href="http://www.scrumy.com/masstransit" target="_blank">scrumy </a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>245</wp:post_id>
  <wp:post_date>2009-05-04 23:16:22</wp:post_date>
  <wp:post_date_gmt>2009-05-04 23:16:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scrumy</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="post_tag" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="productivity"><![CDATA[productivity]]></category>
  <category domain="post_tag" nicename="scrm"><![CDATA[scrm]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1345121630;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c009b865a6eb5c9d6bc250264787da43</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-05-04 23:16:22]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>64</wp:comment_id>
    <wp:comment_author><![CDATA[Billy Stack]]></wp:comment_author>
    <wp:comment_author_email>bs.stack@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://billystack.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>193.120.138.161</wp:comment_author_IP>
    <wp:comment_date>2009-05-21 15:30:56</wp:comment_date>
    <wp:comment_date_gmt>2009-05-21 15:30:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Handy to have it on the web but where I work we perform a standup in the morning (following the stand up recommendations laid out by martin fowler). We perform the standup around a kanban board and it works a gem to be honest. 

I couldnt see the "scrummy" tool being used where I work but its still a great idea. It might be handy to use on an individual basis however.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>GWT-Ext Charts</title>
  <link>http://roundcrisis.com/2009/05/11/gwt-ext-charts/</link>
  <pubDate>Mon, 11 May 2009 10:48:17 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=249</guid>
  <description/>
  <content:encoded><![CDATA[A quick post about Gwt-Ext Charts.
<a href="http://www.gwt-ext.com/demo-charts/"></a>

<a href="http://www.gwt-ext.com/demo-charts/"><img class="alignnone" title="Charts" src="http://www.gwt-ext.com/demo-charts/images/thumbnails/column-chart.gif" alt="" width="120" height="90" /></a>Getting charts to work in GWT-Ext can be a little painful.

There is 3 things you have to make sure you have:
<h2>1 </h2>
<strong>&lt;inherits name="com.gwtext.Charts"/&gt;</strong>

in your &lt;YourApp&gt;.gwt.xml
<h2>2</h2>
the <strong>gwtexux.jar</strong> file in your classpath, and of course the jar file should be wherever you are pointing to  ;).
<h2>3</h2>
Most importantly the swf file that is on wherever you set your express install, in the demo is set to
<code>
chart.setExpressInstall("js/yui/assets/expressinstall.swf");
</code>
and even tho i had my library where it should, for some reason for me it wasn't uncompromising to the right path so I uncompressed what i needed to <em>public/js</em>.

 

<strong>Note:</strong> Sometimes the charts don't actually work on hosted mode, so you should compile/browse and its there ... in Firefox and Chrome but of course it doesn't work on ie :(, this is depending on the version of flash you have.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>249</wp:post_id>
  <wp:post_date>2009-05-11 10:48:17</wp:post_date>
  <wp:post_date_gmt>2009-05-11 10:48:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gwt-ext-charts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="post_tag" nicename="gwt-ext"><![CDATA[gwt-ext]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367688";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-05-11 10:48:17]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Monorail in IIS 7.5 (windows 7)</title>
  <link>http://roundcrisis.com/2009/05/31/monorail-in-iis-7-5-windows-7/</link>
  <pubDate>Sun, 31 May 2009 13:23:56 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=259</guid>
  <description/>
  <content:encoded><![CDATA[So I made the leap the other day and installed RC for Windows 7 and it all seems pretty ok.

Of course i had to do the <em>install all I need</em> dance.

Making monorail work in this new version of IIS...well I just thought I d blog about it as it didn't work "out of the box".

One (obvious)  thing that you have to make sure you do is that you actually have asp.net and  the ISAPI module installed (its not by default).<img class="alignleft size-medium wp-image-260" title="application.jpg" src="http://roundcrisis.files.wordpress.com/2009/05/application.jpg?w=300" alt="application.jpg" width="300" height="260" />

The Virtual Directory needs to be an Application, for this you have an option for SetAsApplication in IIS in the contextual menu for the Virtual Directory.

IIS 7 has classic and Integrated mode, a very basic difference between these two modes is that in classic mode Asp.net was integrated into IIS via the ISAPI Extension, with the integrated mode asp.net runs natively, to read more about it check <a href="http://learn.iis.net/page.aspx/244/how-to-take-advantage-of-the-iis7-integrated-pipeline/" target="_blank">here</a>. That leaves me with the question of: Does that mean my app doesn't actually need ISAPI at all (that i will answer later, tho probably not).

All that said and you have to add the following to the web.config in system.webserver -&gt; handlers

<code>&lt;add name="MonoRail" path="*.rails" verb="*" type="Castle.MonoRail.Framework.MonoRailHttpHandlerFactory,Castle.MonoRail.Framework" preCondition="integratedMode" /&gt;</code>

<code> </code>

(of course change the handler to suit your self)

I have to admit, dont find setting up servers entertaining at all.

Hope it helps you.

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>259</wp:post_id>
  <wp:post_date>2009-05-31 13:23:56</wp:post_date>
  <wp:post_date_gmt>2009-05-31 13:23:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>monorail-in-iis-7-5-windows-7</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="iis"><![CDATA[IIS]]></category>
  <category domain="post_tag" nicename="iis7"><![CDATA[iis7]]></category>
  <category domain="category" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="post_tag" nicename="monorail"><![CDATA[monorail]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="category" nicename="web-server"><![CDATA[web-server]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1321998503";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-05-31 13:23:56]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>238</wp:comment_id>
    <wp:comment_author><![CDATA[Justin Toth]]></wp:comment_author>
    <wp:comment_author_email>justin@sportsalert.com</wp:comment_author_email>
    <wp:comment_author_url>http://tothsolutions.com</wp:comment_author_url>
    <wp:comment_author_IP>71.166.69.67</wp:comment_author_IP>
    <wp:comment_date>2010-07-29 02:50:17</wp:comment_date>
    <wp:comment_date_gmt>2010-07-29 02:50:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What about if you want to use extensionless url's?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1280575070</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>348</wp:comment_id>
    <wp:comment_author><![CDATA[vietanh85]]></wp:comment_author>
    <wp:comment_author_email>vietanh.nguyen.it@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/vietanh85</wp:comment_author_url>
    <wp:comment_author_IP>115.78.0.238</wp:comment_author_IP>
    <wp:comment_date>2011-11-10 08:52:23</wp:comment_date>
    <wp:comment_date_gmt>2011-11-10 08:52:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I have tried with this, but some how it still come out with 404 error.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1320915144.1576";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1321015376</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1321015376.5026";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>GWT-Ext ComboBox loading from XML</title>
  <link>http://roundcrisis.com/2009/06/09/gwt-ext-combobox/</link>
  <pubDate>Tue, 09 Jun 2009 08:41:36 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=277</guid>
  <description/>
  <content:encoded><![CDATA[This is a simple example on how to make a ComboBox in Gwt-Ext to populate with XML.

<code>HttpProxy proxy = new HttpProxy("xml/combo_data.xml", Connection.GET);</code>

<code>final RecordDef recordDef = new RecordDef(new FieldDef[] {
new StringFieldDef("id"),
new StringFieldDef("value") });</code>

<code>XmlReader reader = new XmlReader("comboitem", recordDef);</code>

<code>final Store store = new Store(proxy, reader);

ComboBox combo = new ComboBox();
combo.setLabel("Combo Label");
combo.setStore(store);
combo.setDisplayField("value");
combo.setMode(ComboBox.REMOTE);
combo.setTypeAhead(true);
this.rootPanel.add(combo);

</code>

<code> store.load();
</code>
And the xml can be seen <a href="http://pastebin.com/f6684d7a7" target="_blank">here</a>

Hope it helps]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>277</wp:post_id>
  <wp:post_date>2009-06-09 08:41:36</wp:post_date>
  <wp:post_date_gmt>2009-06-09 08:41:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gwt-ext-combobox</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="extjs"><![CDATA[ExtJs]]></category>
  <category domain="category" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="post_tag" nicename="gwt-ext"><![CDATA[gwt-ext]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367687";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-06-09 08:41:36]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>IntelliJ IDEA keymap for Eclipse</title>
  <link>http://roundcrisis.com/2009/06/09/intellij-idea-keymap-for-eclipse/</link>
  <pubDate>Tue, 09 Jun 2009 08:50:38 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=282</guid>
  <description/>
  <content:encoded><![CDATA[I m seriously used to the Resharper key map in visual studio, so when doing Java development I felt a bit handicapped, unfortunately I cant use IntelliJ IDEA (did the 30 day trail and loved it) so after a quick google I found <a href="http://www.jroller.com/santhosh/entry/intellij_idea_key_scheme_for" target="_blank">this</a>. Its not perfect but it works.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>282</wp:post_id>
  <wp:post_date>2009-06-09 08:50:38</wp:post_date>
  <wp:post_date_gmt>2009-06-09 08:50:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>intellij-idea-keymap-for-eclipse</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="category" nicename="java"><![CDATA[java]]></category>
  <category domain="post_tag" nicename="java"><![CDATA[java]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367687";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-06-09 08:50:38]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>GWT Unit Testing</title>
  <link>http://roundcrisis.com/2009/06/23/gwt-unit-testing/</link>
  <pubDate>Tue, 23 Jun 2009 11:12:13 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=299</guid>
  <description/>
  <content:encoded><![CDATA[After some time messing with GWT-Ext

I found a few problems on this front:

- running the test takes too long ( I m writting this post as I wait for the tests to run) , for example to run a test like the one below, takes 10 seconds, and that is after you ran the whole suite, a suite with 23 tests takes aproximately 100 seconds... not great tbh.
<code>
Dog dog= new Dog();
int legs= dog.legs.length;
assertEquals(4, legs);
int eyes=dog.eyes.length;
assertEquals(2, eyes);
</code>
- A convention that i dont particularly like ( perhaps because I m not familiar with it) is that the test methods must start with <strong>test, </strong> ok , on the plus side you dont have any attributes lurking around.

<strong>- </strong>Then there is the obvious problem:  you can really only test certain code, ie things like parsing , etc is all grand, however when it comes to testing that certain controls are there , it becomes very cumbersome.

However, i rather have some unit testing than none.

If you have any experience testing GWT-Ext I would really love to hear about it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>299</wp:post_id>
  <wp:post_date>2009-06-23 11:12:13</wp:post_date>
  <wp:post_date_gmt>2009-06-23 11:12:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gwt-unit-testing</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="post_tag" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="post_tag" nicename="gwt-ext"><![CDATA[gwt-ext]]></category>
  <category domain="post_tag" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1321998502";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-06-23 11:12:13]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>June Meetup Alt Net Ireland Review</title>
  <link>http://roundcrisis.com/2009/06/24/june-meetup-alt-net-ireland-review/</link>
  <pubDate>Wed, 24 Jun 2009 10:46:40 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=302</guid>
  <description/>
  <content:encoded><![CDATA[The past 18th of June we had a meetup.

This month's meetup topic was <strong>Behaviour Driven Development</strong> presented by Claudio Perrone and Andre . It was an overview of the topic and how does it work as well as some examples with <strong><a href="http://cukes.info/" target="_blank">cucumber</a></strong> , Andre is a QA Professional and himself and Claudio demonstrated how they collaborate. Andre is involved in the Development process from early on and uses cucumber with Selenium and Watin (or Watin not sure).

Edit: Andre did a blog post about it (you can see it <a href="http://dublinalt.net/2009/06/23/cucumber/" target="_blank">here</a>)

Then we decided on July's topic: <strong>IoC</strong> facilitated by Franklin (<a href="http://castleproject.org/container/index.html" target="_blank">Windsor</a>)  and I think someone said they will bring some <a href="http://structuremap.sourceforge.net/Default.htm" target="_blank"> StructureMap </a>samples  for a discussion, sounds good.

I really enjoyed the last few meetings and I hope it keeps happening.

Claudio will not be attending a few meeting as hes going to be busy looking after his new born, Best of luck for you and your family. We promise to keep you posted and hope you come back soon.

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>302</wp:post_id>
  <wp:post_date>2009-06-24 10:46:40</wp:post_date>
  <wp:post_date_gmt>2009-06-24 10:46:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>june-meetup-alt-net-ireland-review</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="alt-net"><![CDATA[alt-net]]></category>
  <category domain="category" nicename="altnet"><![CDATA[alt.net]]></category>
  <category domain="post_tag" nicename="meetup"><![CDATA[meetup]]></category>
  <category domain="category" nicename="technical-talks"><![CDATA[technical talks]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364821520;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-06-24 10:46:40]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Gwt-Ext Hack FormPanel and Panel</title>
  <link>http://roundcrisis.com/2009/06/25/gwt-ext-hack-formpanel-and-panel/</link>
  <pubDate>Thu, 25 Jun 2009 08:00:04 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=304</guid>
  <description/>
  <content:encoded><![CDATA[There seems to be some sort of problem when you have to add a FormPanel to a Panel in GWT-Ext 2.0.6.

As a workaround you can simply use a Panel and set the layout to <strong>FormLayout</strong>.<strong> </strong>

<strong><span style="font-weight:normal;">Hope it helps </span></strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>304</wp:post_id>
  <wp:post_date>2009-06-25 08:00:04</wp:post_date>
  <wp:post_date_gmt>2009-06-25 08:00:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gwt-ext-hack-formpanel-and-panel</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="post_tag" nicename="gwt-ext"><![CDATA[gwt-ext]]></category>
  <category domain="post_tag" nicename="hack"><![CDATA[hack]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1321998508";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-06-25 08:00:04]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ext-GWT(or GXT) Environment from scratch </title>
  <link>http://roundcrisis.com/2009/06/29/ext-gwtor-gxt-environment-from-scratch/</link>
  <pubDate>Mon, 29 Jun 2009 09:26:43 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=309</guid>
  <description/>
  <content:encoded><![CDATA[So... I had to set up a GXT development environment for myself from scratch, so I thought I d share the experience.
<h2>Getting the JDK was painfull</h2>
I ll spare you the rant, however I will say that Sun requires that you are registered to download the JDK, after a email like the one below:
<code>
We're sorry but your Sun Online Account password could not be reset.</code>

<code> </code>

<code>We would be happy to look into this further for you.  Please forward this email to us at login@sun.com.  We apologize for any inconvenience.
</code>

a 404 ( see screenshot) and a failed attempt to re- register, I ended up getting the JDK from another machine, via remote desktop.

404

<img class="alignleft size-medium wp-image-310" title="Sun website login 404" src="http://roundcrisis.files.wordpress.com/2009/06/sun404.jpg?w=300" alt="Sun website login 404" width="300" height="93" />

<strong>JDK</strong>, check
<h2>Ant</h2>
Next thing on the list was to get <strong>ant</strong>, I went to the appropriate <a href="http://ant.apache.org/bindownload.cgi" target="_blank">website</a> got the binaries, un-zipped, set the ANT_HOME, and proceeded to add ant to my path, checked that the version was the correct one with

<code>
ant -version</code>
and all fine

<strong>ant</strong> : check
<h2>Installing GWT</h2>
Then i went to get GWT , downloaded, unzipped, added the GWT_HOME (not required but handy) then ran the mail sample in hosted mode as described in the <a href="http://code.google.com/webtoolkit/gettingstarted.html#Install" target="_blank">GWT documentation getting started</a> win <strong>ant deploy</strong>
<h2><strong>Creating a project with GWT 1.6.4</strong></h2>
A lot has changed since version 1.5.3 the two more obvious things so far are: speed running the hosted mode, the layout of the project files, and the application creatorand now you have to use <strong>webAppCreator.cmd</strong> (extension depends on your platform of course) , then, since I use eclipse I can jsut import the project and start working with it, tho I wanted to try <a href="http://extjs.com/products/gxt/" target="_blank">GXT</a> .
<h2><strong>Installing and using Ext-GWT (or GXT) 2.0 RC1</strong></h2>
GXT 2.0 required GWT 1.6.x ( I m using 1.6.4) , at a glance, there are a lot of things that make GXT look really good, like active development and a roadmap :D, some new widgets, support plans, etc.

There are a few steps required to make GXT work in the project I created in the previous step,
<ul>
	<li>Copy the <strong>Resources</strong> folder into the project <strong>war</strong> folder (you could call it something else but I dont see the point yet), then, as described in the setup.txt,</li>
	<li>Add the stylesheet to the host page html</li>
	<li>Add the &lt;inherits ..&gt; to the ..Gwt.xml,</li>
	<li>Include the gxt library to the project classpath</li>
	<li>and include to the Launch configuration.</li>
</ul>
To check that this is a GXT app we write a bit of code on <strong>onModuleLoad</strong> method:

Button button = new Button("Click here");

ContentPanel panel = new ContentPanel();

panel.setTitle("GXT Test");

panel.setHeight(400);

panel.add(button);

RootPanel.get().add(panel);
<div>gets me something like:</div>
<div><img class="alignleft size-medium wp-image-314" title="gxt" src="http://roundcrisis.files.wordpress.com/2009/06/gxt.jpg?w=300" alt="gxt" width="300" height="213" /></div>
<div>Task Completed. Next task, get a basic layout with a grid populated by JSON.</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:828px;width:1px;height:1px;">Button button = new Button("Click here");</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:828px;width:1px;height:1px;"><span style="white-space:pre;"> </span>ContentPanel panel = new ContentPanel();</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:828px;width:1px;height:1px;"><span style="white-space:pre;"> </span>panel.setTitle("GXT Test");</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:828px;width:1px;height:1px;"><span style="white-space:pre;"> </span>panel.setHeight(400);</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:828px;width:1px;height:1px;"><span style="white-space:pre;"> </span>panel.add(button);</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:828px;width:1px;height:1px;">

<span style="white-space:pre;"> </span>RootPanel.get().add(panel);</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>309</wp:post_id>
  <wp:post_date>2009-06-29 09:26:43</wp:post_date>
  <wp:post_date_gmt>2009-06-29 09:26:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ext-gwtor-gxt-environment-from-scratch</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="post_tag" nicename="gwt"><![CDATA[GWT]]></category>
  <category domain="post_tag" nicename="gxt"><![CDATA[GXT]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364573624;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-06-29 09:26:43]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Valid xtypes in GWT-Ext</title>
  <link>http://roundcrisis.com/2009/06/30/valid-xtypes-in-gwt-ext/</link>
  <pubDate>Tue, 30 Jun 2009 11:19:11 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=324</guid>
  <description/>
  <content:encoded><![CDATA[Say you have a panel, that contains a form and you want to get the values for the fields of that form, one way to go on about it is to use findByType():

<dd>Find a component under this container at any level by xtype.</dd> <dd> <dl></dl> </dd> <dd> <dl> <dt><strong>Parameters:</strong></dt> <dd><code>xtype</code> - the components xtype</dd> <dt><strong>Returns:</strong></dt> <dd>an array of components</dd> </dl> </dd>this is all well and good, however the available xtypes, what are those?

A bit of magic string here?,  what are the available xtypes?

You can find a list below:
<code>
* xtype            Class
* -------------    ------------------
* box              BoxComponent
* button           Button
* colorpalette     ColorPalette
* component        Component
* container        Container
* cycle            CycleButton
* dataview         DataView
* datepicker       DatePicker
* editor           Editor
* editorgrid       EditorGridPanel
* grid             GridPanel
* paging           PagingToolbar
* panel            Panel
* progress         ProgressBar
* splitbutton      SplitButton
* tabpanel         TabPanel
* treepanel        TreePanel
* viewport         ViewPort
* window           Window
*
</code>

<code> </code>

<code>* Toolbar components
* ---------------------------------------
* toolbar          Toolbar
*
* Form components
* ---------------------------------------
* checkbox         Checkbox
* combo            ComboBox
* datefield        DateField
* field            Field
* fieldset         FieldSet
* form             FormPanel
* hidden           Hidden
* htmleditor       HtmlEditor
* numberfield      NumberField
* radio            Radio
* textarea         TextArea
* textfield        TextField
* timefield        TimeField </code>

This list is available from the<strong> Component</strong> class in the package <strong>com.gwtext.client.widgets;</strong>

As a cleaner way to deal with this I created an Enum to work with this information.

Hope it saves you 10min.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>324</wp:post_id>
  <wp:post_date>2009-06-30 11:19:11</wp:post_date>
  <wp:post_date_gmt>2009-06-30 11:19:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>valid-xtypes-in-gwt-ext</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="gwt-ext"><![CDATA[gwt-ext]]></category>
  <category domain="category" nicename="gwt-ext"><![CDATA[gwt-ext]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1321998508";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-06-30 11:19:11]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>IronRuby  - Some Resources</title>
  <link>http://roundcrisis.com/2009/07/07/ironruby-some-resources/</link>
  <pubDate>Tue, 07 Jul 2009 11:45:09 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=330</guid>
  <description/>
  <content:encoded><![CDATA[I found some interesting IronRuby Resources that I thought some people might find useful:

<a href="http://blog.jimmy.schementi.com/">http://blog.jimmy.schementi.com/</a> complete Articles on Iron Ruby, I think he is somewhat related to the IronRuby project ( never really  read the profile, just the articles....)

<a href="http://flanders.co.nz/">http://flanders.co.nz/</a> Blog from Ivan Porto Carrero, the Author of <a href="http://manning.com/carrero" target="_blank">Iron Ruby in action</a> ( its on EAP from Maning).

<a href="http://blog.benhall.me.uk/">http://blog.benhall.me.uk/</a> Ben Hall's Blog. He s got some really complete articles in that blog, and a really good speaker. He wrote this article  on <a href="http://msdn.microsoft.com/en-us/magazine/dd434651.aspx" target="_blank">IronRuby and RSpec</a> on the MSDN magazine.

<a href="http://www.ironruby.net/Documentation">http://www.ironruby.net/Documentation</a> Of course :D

<a href="http://www.iunknown.com/">http://www.iunknown.com/</a> John Lam, I believe he is responsible for this project, however he doesn't blog too often.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>330</wp:post_id>
  <wp:post_date>2009-07-07 11:45:09</wp:post_date>
  <wp:post_date_gmt>2009-07-07 11:45:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ironruby-some-resources</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="dlr"><![CDATA[dlr]]></category>
  <category domain="post_tag" nicename="ironruby"><![CDATA[ironruby]]></category>
  <category domain="category" nicename="ironruby"><![CDATA[ironruby]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364727562;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ab0314b0297f8cbdd0eb8e1fb43caa55</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3b172fff3119f7648b3d7cc1ce98ae5e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_290f87d100bfbfe0032dac439d8c0bbb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a14fd399e52195524bb5b847e34d11c4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f97b20d5bc96ba67ca129049b4514a64</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-07-07 11:45:09]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>August Girl Geek Meetup</title>
  <link>http://roundcrisis.com/2009/07/27/august-girl-geek-meetup/</link>
  <pubDate>Mon, 27 Jul 2009 13:56:27 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=352</guid>
  <description/>
  <content:encoded><![CDATA[This coming Wednesday the 5th of August we are going to be meeting up in Kennedy's ( nearly opposite to Pearse Dart Station) Its been a while so I m really looking forward to catch up with the girls. More info <a href="http://www.irelandgirlgeekdinners.com/?p=82">here</a>
Hope you can make it if you are a Girl Geek =)

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>352</wp:post_id>
  <wp:post_date>2009-07-27 13:56:27</wp:post_date>
  <wp:post_date_gmt>2009-07-27 13:56:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>august-girl-geek-meetup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="ggd"><![CDATA[GGD]]></category>
  <category domain="category" nicename="girl-geek-dinners"><![CDATA[Girl Geek Dinners]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364051684;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-07-27 13:56:27]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Nvelocity help</title>
  <link>http://roundcrisis.com/2009/08/05/nvelocity-help/</link>
  <pubDate>Wed, 05 Aug 2009 13:41:02 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=355</guid>
  <description/>
  <content:encoded><![CDATA[Hi there

I ll just add this because I saw some people being directed to here when searching for NVelocity docs (no idea why tbh)

Anyway here is the <a href="http://velocity.apache.org/engine/releases/velocity-1.5/vtl-reference-guide.html" target="_blank">link to the Appache documentation for velocity</a>

Also of course the <a href="http://www.castleproject.org/others/nvelocity/index.html" target="_blank">castle docs</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>355</wp:post_id>
  <wp:post_date>2009-08-05 13:41:02</wp:post_date>
  <wp:post_date_gmt>2009-08-05 13:41:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>nvelocity-help</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="nvelocity"><![CDATA[NVelocity]]></category>
  <category domain="post_tag" nicename="nvelocity"><![CDATA[NVelocity]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367689";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-08-05 13:41:02]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Format(ing) in GWT-Ext</title>
  <link>http://roundcrisis.com/2009/08/14/formating-in-gwt-ext/</link>
  <pubDate>Fri, 14 Aug 2009 11:31:07 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=359</guid>
  <description/>
  <content:encoded><![CDATA[Just a quick post :

If are trying to use Format, in GWT, String.Format  is not supported, instead you should use <a href="http://gwt-ext.com/docs/2.0.4/com/gwtext/client/util/Format.html" target="_blank">Format </a>a lot of interesting stuff there, so if you are using GWT-Ext take 5 min of your time and have  a look, you ll end up using it.

This is what I m using for Strings and for dates]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>359</wp:post_id>
  <wp:post_date>2009-08-14 11:31:07</wp:post_date>
  <wp:post_date_gmt>2009-08-14 11:31:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>formating-in-gwt-ext</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gwt-ext"><![CDATA[gwt-ext]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1345119368;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-08-14 11:31:07]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>223</wp:comment_id>
    <wp:comment_author><![CDATA[antony.trupe]]></wp:comment_author>
    <wp:comment_author_email>antony.trupe@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>208.95.51.161</wp:comment_author_IP>
    <wp:comment_date>2010-05-24 22:23:32</wp:comment_date>
    <wp:comment_date_gmt>2010-05-24 22:23:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What does PanelListener have to do with string formatting exactly?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>224</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2010-05-25 14:38:44</wp:comment_date>
    <wp:comment_date_gmt>2010-05-25 14:38:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think I copied the wrong link at the time correct link is to th eformat class http://gwt-ext.com/docs/2.0.4/com/gwtext/client/util/Format.html
Thanks for the correction :D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>223</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Meet ups Conferences Visitors </title>
  <link>http://roundcrisis.com/2009/08/24/meet-ups-conferences-visitors/</link>
  <pubDate>Mon, 24 Aug 2009 11:21:42 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=364</guid>
  <description/>
  <content:encoded><![CDATA[Very excited by a very very busy few months ahead:

- This wednesday thursday and Friday  <a href="http://epicenter.ie/index.html" target="_blank"><strong>Epicenter</strong></a>, In dublin where <a href="http://csharpindepth.com/" target="_blank">John Skeet</a>, <a href="http://www.craigmurphy.com/blog/" target="_blank">Craig Murphy</a> (the man behind the DDD events), <a href="http://idunno.org/" target="_blank">Barry Dorans</a>, Barry Carr  and many others will be talking, including me :) . Sounds like a busy conference full of choices.

Oh yeah! and Craig Managed to get a Special Offer on Epicenter,  buy 1 day get 3. More <a href="http://www.craigmurphy.com/blog/?p=1578">here</a>

- September Dublin Alt Net meeting. 15th of September. New location <a href="http://www.seagrassdublin.com/" target="_blank">Seagrass</a> we ll be doing some lightning presentations on  Kanban, Mono and Fluent NHibernate ( a bit of a mixed bag) more details to follow in <a href="http://dublinalt.net" target="_blank">dublinalt.net</a>

- <a href="http://www.ossbarcamp.com/" target="_blank">OSSBarcamp</a>, this is one not to miss, the  19th of September all things open source. ONe takl i m particularly interested in is the one on IPython, I really hope I can make it at least to that talk.

- Finally  the 30th of september  <a href="http://serialseb.blogspot.com/" target="_blank">Sebatien Lambla</a> istalking about <a href="http://www.ohloh.net/p/openrasta" target="_blank">Open Rasta</a> , finishing arrangements as we speak, this is the first urregular Dublin Alt net meet up =). Location will probably be Seagrass too. More info to follow in Dublinalt.net

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>364</wp:post_id>
  <wp:post_date>2009-08-24 11:21:42</wp:post_date>
  <wp:post_date_gmt>2009-08-24 11:21:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>meet-ups-conferences-visitors</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="alt-net"><![CDATA[alt-net]]></category>
  <category domain="category" nicename="altnet"><![CDATA[alt.net]]></category>
  <category domain="post_tag" nicename="meetups"><![CDATA[meetups]]></category>
  <category domain="category" nicename="technical-talks"><![CDATA[technical talks]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364375169;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-08-24 11:21:42]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Art of Unit Testing - Chapter 1 </title>
  <link>http://roundcrisis.com/2009/09/09/the-art-of-unit-testing-chapter-1/</link>
  <pubDate>Wed, 09 Sep 2009 09:35:55 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=372</guid>
  <description/>
  <content:encoded><![CDATA[We are meeting for the first time for the Book club and just to get the ball rolling on this I though I'd write up a mini summary of chapter 1 on <a href="http://www.manning.com/osherove/" target="_blank">The Art of  Unit Testing</a> before the meeting as a way to explore the concepts and then another one after if necesary.

So far I like the book, a very clean and concrete explanation of the basics, in plain english.

Some concept definitions are opinionated, but  Roy does a good job of it by telling you that there are many defintions available of certain terms, he then tells you wich one he will be using, for example when he defines Legacy Code he setteles for: Code that has no unit tests ( in line with M Feathers), he gives you a few other options including one that kept sticking in my head: Code that works. (quite possibly with bugs , I cant help to add).

He makes a lot of emphasis in Good Unit Tests, as tests that are automated, repeatable, easy to implement and read, that are trustworthy and run quickly, normally written using an unit testing framework.

I think a knock on effect of this is that the tests will be just a few lines long and quite likely many.

The definition of Integration Tests made me think a lot. For reference: Integration testing means testing two or more dependent software modules as a group.  I'd really like to discuss this with the group <span style="text-decoration:line-through;">tomorrow </span>today, I'd say many of us do more Integration testing that we tend to think? particularly if we have a dependency on a service that has no other hard dependencies ( like a db, I/O operations or similar)   -- Will update on this.

Another good concept to be introducing at this early stage is the Regression, and when I was reading this I was thinking It's so great to tie this up with CI, why? Well if you have relevant test coverage and you change something (adding the required unit tests and all ) you commit your code , the build machine will immediately go and try to build and run your test suite, so that will help you to know if potentially you have a regression.

He outlines a series of questions to ask yourself  to find out if you are writting good tests the one I liked the most is this one:
<blockquote>Can I write a basic test in no more than a few minutes? -- Will update on this too later on.</blockquote>
There is a  unit test example without using a  framework, I liked it  first because of this little snippet that I didnt know about: MethodBase.GetMethod().Name , more to the point I think hes trying to highlight the advantages of the frameworks and also because it reminds you of the fact that you dont need unit testing frameworks.

Then there is a basic intro to TDD, where the last D stands for Development , and thats ok, I have not much more to add because I didnt find anything that sticks out .

So far so good, I think we could have jammed the first two chapters in this meet up.

Comments, corrections and questions as always welcome :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>372</wp:post_id>
  <wp:post_date>2009-09-09 09:35:55</wp:post_date>
  <wp:post_date_gmt>2009-09-09 09:35:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-art-of-unit-testing-chapter-1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="altnet"><![CDATA[alt.net]]></category>
  <category domain="post_tag" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <category domain="category" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364821520;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-09-09 09:35:55]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Thoughs on 1st Book Club meetup</title>
  <link>http://roundcrisis.com/2009/09/16/thoughs-on-1st-book-club-meetup/</link>
  <pubDate>Wed, 16 Sep 2009 19:33:47 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=380</guid>
  <description/>
  <content:encoded><![CDATA[The Art of Unit Testing (by Roy Osherove) First Meetup

Its amazing how much you can talk about just one chapter, ok we diverged at some point to related topics, we dreamed about our own Open Source project, again. Anyway, these are my thoughs about the first chapter, after the meeting

Integration testing and unit testing:  I end up thinking:
<ul>
	<li>You shouldnt do it inadvertedly.</li>
	<li>Its your responsability as as developer to do certain Integration tests (if you want to make sure that certain services are working as expected, that certain dependencies that you have and you are ok with that are working as expected)</li>
</ul>
We also mentioned the Demeter Law when talking about building APIs.

Again this inspired me to look at <a href="http://storyteller.tigris.org/" target="_blank">StoryTeller</a>. Some resources I found:
<ul>
	<li>Jeremy Miller's <a href="http://codebetter.com/blogs/jeremy.miller/archive/2009/08/24/how-about-a-storyteller-preview-release.aspx" target="_blank">post about it</a></li>
	<li>Elegant Code <a href="http://elegantcode.com/2009/08/26/code-cast-30-story-teller-with-jeremy-miller/" target="_blank">Podcast</a></li>
	<li>InfoQ <a href="http://www.infoq.com/news/2009/09/storyteller" target="_blank">Post</a></li>
	<li>Channerl 9 <a href="http://channel9.msdn.com/posts/Glucose/Hanselminutes-on-9-Storyteller-with-Jeremy-Miller/" target="_blank">Podcast</a></li>
</ul>
<a href="http://elegantcode.com/2009/08/26/code-cast-30-story-teller-with-jeremy-miller/" target="_blank"></a> I m now looking at the samples from it but that ll be in other post :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>380</wp:post_id>
  <wp:post_date>2009-09-16 19:33:47</wp:post_date>
  <wp:post_date_gmt>2009-09-16 19:33:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>thoughs-on-1st-book-club-meetup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="storyteller"><![CDATA[StoryTeller]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <category domain="category" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364470273;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-09-16 19:33:47]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Barcamp Derry Presentation</title>
  <link>http://roundcrisis.com/2009/10/13/barcamp-derry-presentation/</link>
  <pubDate>Tue, 13 Oct 2009 22:49:48 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=410</guid>
  <description/>
  <content:encoded><![CDATA[Had a brilliant weekend up North in @<a href="http://www.barcampderry.com/" target="_blank">barcampderry</a> Met some interesting folks and had a chance to discover a fantastic city and the surrounding area.

As promised these is the slide deck for the presentation, I don't think these are of much use but please feel free to ping me on twitter or as a comment here if you have questions or comments.


[slideshare id=2213304&amp;doc=oss-091013174416-phpapp02]

Cheers

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>410</wp:post_id>
  <wp:post_date>2009-10-13 22:49:48</wp:post_date>
  <wp:post_date_gmt>2009-10-13 22:49:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>barcamp-derry-presentation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="barcamp"><![CDATA[barcamp]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <category domain="post_tag" nicename="talk"><![CDATA[talk]]></category>
  <category domain="category" nicename="technical-talks"><![CDATA[technical talks]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364134126;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-10-13 22:49:48]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ext Js bits </title>
  <link>http://roundcrisis.com/2009/10/20/ext-js-bits/</link>
  <pubDate>Tue, 20 Oct 2009 19:00:54 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=415</guid>
  <description/>
  <content:encoded><![CDATA[Just some interesting thing I found on the extjs world.

I m only looking at stuff working on ext3.0

In ExtJs the JsonStore has <strong>paramNames</strong> this Object contains 4 properties
<pre>{
    start : 'start',  // The parameter name which specifies the start row
    limit : 'limit',  // The parameter name which specifies number of rows to return
    sort : 'sort',    // The parameter name which specifies the column to sort on
    dir : 'dir'       // The parameter name which specifies the sort direction
}</pre>
This properties are the default however they can be changed by using a configuration property or to change globally
it should be changed in the <strong>store</strong> prototype
<h2>Drag and Drop into a grid</h2>
Shea Frederick has a very nifty Excel drag and drop into the grid, got the code
and runs in ie7, ie8, ff3.5 and Chrome and you can get it <a href="http://www.vinylfox.com/datadrop-drag-grid-data-from-spreadsheet/">here</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>415</wp:post_id>
  <wp:post_date>2009-10-20 19:00:54</wp:post_date>
  <wp:post_date_gmt>2009-10-20 19:00:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ext-js-bits</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367690";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-10-20 19:00:54]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Using Ninject and Asp.Net MVC </title>
  <link>http://roundcrisis.com/2009/10/30/using-ninject-and-asp-net-mvc/</link>
  <pubDate>Fri, 30 Oct 2009 10:38:18 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=418</guid>
  <description/>
  <content:encoded><![CDATA[If you are trying to use Ninject with Asp.net MVC, there is an integration available in github
http://github.com/enkari/ninject.web.mvc if you look at the code there its just 3 clases, but
the fact that its been used by much more people than just myself makes me a bit more confortable because
I m not terriby familiar with Asp.Net MVC. Please note I m not too familiar with Ninject either
If there is anything that can be improved, I m all ears.

Anyway, this is the integration working, using Ninject 2, I tried this with MVC 1 and 2 and they both worked.

Obviously get the code from the Github repository and build the solution in release mode, add them to your
project.

Then in your Global.asax.cs you need to do your implementation of   CreateKernel, and a really important step,
to register all your controllers, to do that just override the OnApplicationStarted with RegisterAllControllersIn("SomeAssemblyName")
as in the example there in github.

If you are not familiar with ninject you ll need to look at defining your Modules as well, something like
<pre>private class MyWebAppModule : NinjectModule
{
   public override void Load()
  {
      Bind&lt;ISomething&gt;().To&lt;Something&gt;();
......
  }
}</pre>
Oh yeah, for some reason, kernel.AutoLoadModules() doesn't work for me, its not a feature I m interested in at the moment but ...

and you can use that module to create the kernel, there are other ways to use Modules but that worked for me
on my todo now is to understand why you would use one way over the other to create and work with modules
and what modules actually are.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>418</wp:post_id>
  <wp:post_date>2009-10-30 10:38:18</wp:post_date>
  <wp:post_date_gmt>2009-10-30 10:38:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>using-ninject-and-asp-net-mvc</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="aspnet-mvc"><![CDATA[asp.net MVC]]></category>
  <category domain="post_tag" nicename="ninject"><![CDATA[ninject]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367688";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-10-30 10:38:18]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>139</wp:comment_id>
    <wp:comment_author><![CDATA[ASP.NET MVC Archived Blog Posts, Page 1]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://aspdotnetmvc.com/blogs/default.aspx</wp:comment_author_url>
    <wp:comment_author_IP>64.55.113.203</wp:comment_author_IP>
    <wp:comment_date>2009-11-04 04:57:51</wp:comment_date>
    <wp:comment_date_gmt>2009-11-04 04:57:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] to VoteUsing Ninject and Asp.Net MVC (10/29/2009)Thursday, October 29, 2009 from roundcrisisIf you are trying to use Ninject with Asp.net MVC, there [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Step by Step StarterSTS Setup</title>
  <link>http://roundcrisis.com/2009/12/17/step-by-step-startersts-setup/</link>
  <pubDate>Thu, 17 Dec 2009 21:30:51 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=436</guid>
  <description/>
  <content:encoded><![CDATA[I m planing on a series of blogs on WIF ( windows Identity Foundation) however that might or might not happen :), so meanwhile I  m posting this, StarterSTS is as the name implies a starter sts something to get you started on the world of Federeation Identity , claims and all that lovely stuff.

You can find a video about all this steps in the<a href="http://startersts.codeplex.com/"> codeplex site </a>to starter STS, however there are a few differences between what you can see in the config files there and whats in 0.95 ( this is what I've used)  .

I tried this on a Windows 7 and a Server 2008 machine

1) Get the sources from codeplex and copy them over somewhere. create a web app that points to it
2) Create a new app pool ( not necesary but nice to be able to see what is happening)
3) Install WIF (used to be called geneva framework)  latest binaries available <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=eb9c345f-e830-40b8-a5fe-ae7a864c4d76&amp;displaylang=en#filelist">here </a>
4) Download and install SQL server express,or if you have a ssql server there happy days :D
5) Create a self signed cert and add it to the default web site , then go to default website and add the certificate to https with Bindings options
6)  Add read access to the Network service account in the folder where you put the sts sources
7) Run mmc -&gt; add snap in and get the cert thumb print , also set the network service read permisions by right click Manage Private Keys...<a href="http://roundcrisis.files.wordpress.com/2009/12/snapin.png"><img class="size-medium wp-image-437 aligncenter" title="mmc-&gt;Add Snap In" src="http://roundcrisis.files.wordpress.com/2009/12/snapin.png?w=237" alt="" width="237" height="300" /></a>
8) Open the file config/Certificates.config and change the thumbprints of the certificates ( initialliy they are all the same , the last one RP, should be the thumbprint with all spaces removed) (you can get the thumbprint of the certificate in mmc -&gt;certificate -&gt;properties -&gt; thumbprint)
9) Run aspnet_regsql ( to create the asp.net membership provider aspnetdb) (This program is not in the path, so you ll probably have to go to C:\Windows\Microsoft.NET\Framework\&lt;your version of the .net framework, if in doubt go to 2.0&gt;&gt;<strong>aspnet_regsql</strong> )
10) Create some users from IIS Maanger.
11) If you are going to be using from somewhere other than localhost:
<ul>
	<li><span style="font-family:Arial;font-size:small;">The self cert you provided must be added to your the trusted providers( whereever you are using this)
</span></li>
	<li><span style="font-family:Arial;font-size:small;">when you are using fedutil make sure teh references to the federationmetadata.xml points to your server and not localhost ( i seen this happening more than once)
</span></li>
</ul>
12) On the application side of things Add STS reference...
13) you might need to tweak the startersts.Config]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>436</wp:post_id>
  <wp:post_date>2009-12-17 21:30:51</wp:post_date>
  <wp:post_date_gmt>2009-12-17 21:30:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>step-by-step-startersts-setup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="geneva"><![CDATA[Geneva]]></category>
  <category domain="post_tag" nicename="starter_sts"><![CDATA[starter_sts]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="wif"><![CDATA[WIF]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1321998500";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2009-12-17 21:30:51]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Art of Unit Testing - Review</title>
  <link>http://roundcrisis.com/2010/02/15/the-art-of-unit-testing-review/</link>
  <pubDate>Mon, 15 Feb 2010 07:39:04 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=443</guid>
  <description/>
  <content:encoded><![CDATA[A few of us have been reading this book as a part of a book club. Finally I think is time to push a review for this book .

Let me start saying that my expectations for the book were <strong>very</strong> high, the book club helped because we were really reading it in depth and going over little bits of each chapter.

<strong>Bad things about the book</strong>

Examples are not great, there are errors on some of them, and (possibly the worse thing of it all) some of the tests dont follow the advice that is given in the book, particularly in naming convention.

If you download the code that accompanies the book, some of the tests (that are supposed to pass) fail.

We sent an email with corrections but never heard back ( not sure if they didnt get it or what), which, to be honest, was a bit disappointing, if this code was on github I would have forked it just to get it fixed, tho I m not sure Is correct to do that if the code is not on github (if anyone knows please let me know).

Again on the code samples, some of the examples scenarios are not really that descriptive, I have to add, that after preparing the talk I gave in DDD, I have to say its really really hard to come up with good sample code, that demonstrates a smell and a solution in a clear way in not a lot of code... so maybe its not a fair criticism, but I really had to mentione it, because you read the sample and really <strong>wtf? </strong>a bit .

The chapter on Mocking is not great either, Rhino mocks is not used in anger, and I m pretty sure Roy could have gotten someone with loads of experience in Rhino Mocks to look and review (and improve ) the example code.

<strong>Good things about the book</strong>

I know that after what I said what bad in the book, this will sound fake, but I actually think the book is <strong>really</strong> good, because I learned <strong>loads</strong> about unit testing.

It made me think about how to test, What to think about when testing, how to approach writing code with testing in mind.

It basically gave me a lot of basics like, the difference between Unit and integration tests, and that was important, because I could clearly define, I need to tests <strong>this </strong>(whatever it is you are writing) I understood the differences between different <a href="http://martinfowler.com/articles/mocksArentStubs.html" target="_blank">Fakes</a>,  as well as the difference between state and behavioural tests.

Along the way, you pick up on test smells, and many tips on what to do and most important, what not to do.

Since I read the book I understand and I have the purpose of writting code ( test code included of course) , that is readable and maintainable. And I want to <strong>trust </strong>my tests, and thanks to the book, I can now understand why these are important qualities of the code.

The funny thing is, that since then, I actually feel like I really got how to be test driven, because writing code in any different way, simply doesn't make sense any more.

<strong>Conclusion</strong>

A really good book if you are interested in unit testing and feel the need to learn how to do it better, like anything you read, take it, use what you can and completely believe in and then, discard the rest; even then you will have about 80% of the book (or more) really valuable.

Reading this book, along with <a href="http://www.amazon.com/Test-Driven-Development-Kent-Beck/dp/0321146530" target="_blank">TDD by example</a> by Kent Beck and maybe completing it with <a href="http://xunitpatterns.com/" target="_blank">xUnit Test Patterns</a> byMeszaros]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>443</wp:post_id>
  <wp:post_date>2010-02-15 07:39:04</wp:post_date>
  <wp:post_date_gmt>2010-02-15 07:39:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-art-of-unit-testing-review</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367682";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-02-15 07:39:04]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Push on Green Deployment - (Brain Dump)</title>
  <link>http://roundcrisis.com/2010/02/12/push-on-green-deployment-brain-dump/</link>
  <pubDate>Fri, 12 Feb 2010 01:02:01 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=462</guid>
  <description/>
  <content:encoded><![CDATA[The other day I was listening to Kent Beck in <a href="http://www.cincomsmalltalk.com/blog/blogView?showComments=true&amp;printTitle=Industry_Misinterpretations_164:_Going_for_the_Longball&amp;entry=3436948975">this podcast</a> where he was talking about, amongst other things, push on green deployment, basically the idea is that once your test suite goes <span style="color:#008000;">green</span>, you deploy.

When I heard  this originally I thought :

1) Think about all possible problems -&gt; not only technical( this component is not compatible with the component just rolled out, etc, etc)  but also processes ( and people using them ) this is a real concern, because the pace of change would increase I would guess)

2) What tests? Who wrote them? I would think higher level tests? actually all tests? Possibly the upside of this is that companies that produce quality software will become incredibly popular ( "My software doesn't brake, we test throughly" could actually be part of the marketing and backed by actual tests, imagine that)

3) The premise for push on green is basically to push Software Development practices up a notch, so that as a developer we can say we are delivering a feature on a particular date and we can do that confidently, How does push on green help us deliver as we promised, would it makes us slower?

Deployment is a painful process, and often neglected topic, as a developer how often do you think about it? And worse, How many times you just don't know what will happen? Most importantly. How stressed do you get close to going live? (I guess this is the time when we all start thinking about it seriously)

Great, now imagine What if that would happens every <strong>hour</strong>?

In the beginning it would be scary, but then, the practices need to be polished enough so it becomes something normal, that you are not only used to , but confident about it. After all we all become better at things with practice.

Do i like the idea? Yeah! and Its as scary as it gets :) Lets look into it more in depth
<h2>So how can this possibly work?</h2>
If I was going insane(er?) and really wanted to do this, as a C# developer, what is possible?

Maybe I would start of an continuous open beta or, edge (somehow warning my users of the fact that the code they are using is "fresh out of the oven") and once I see some stability (perhaps people could vote for it or similar)then I can fully deploy.

But then thats is just my application, lets imagine I produce code that is not public facing, but that , its an API, consumed by many other applications, how would they be aware and <strong>react</strong> to interface changes? More importantly, would this make software evolution slower  by persisting everlasting APIs? or would it induce APIs that are very noisy, hence harder to discover?

I m asking this because:   lets forget about the barrier of web or desktop for a minute and focus on dlls, where they live and how we use them and consume them.

If my Operating System vendor/framework provider makes a push do i want my app to get that immediately?

Say I m using an interface something like IEmailSender, that has the methods Send(IEmailTemplate, ISomethingElse) and that is replaced for the better designed IEmailSender.Send(Message) with the Send(Message[]) overload. In that example I agree with the change, I want to use the new code because the contract is better (lets assume we all agree is better ok); however, that would mean changing my application, re testing all those areas where I use IEmailSender and I most likely don't want that.

I have to add, I would probably want to do an integration test anyway, or should I blindly trust the new IEmailSender implementation because we are all pushing on green now?

So the option here seems to be, create the new contract but maintain the old one around for a while right?, but then your API will have all these Send methods, and that doesnt seem to be going into the better development practices direction

Next I m gonna try heroku in anger and see if I get more ideas from using it, heroku is a service that runs ruby applications that are deployed when you commit.

This is a brain dump on this and would love to hear thoughts from other people, corrections, feedback, etc always welcome :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>462</wp:post_id>
  <wp:post_date>2010-02-12 01:02:01</wp:post_date>
  <wp:post_date_gmt>2010-02-12 01:02:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>push-on-green-deployment-brain-dump</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="deployment"><![CDATA[deployment]]></category>
  <category domain="post_tag" nicename="development"><![CDATA[development]]></category>
  <category domain="post_tag" nicename="push-on-green"><![CDATA[push-on-green]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367682";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-02-12 01:02:01]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>173</wp:comment_id>
    <wp:comment_author><![CDATA[Rob]]></wp:comment_author>
    <wp:comment_author_email>robcthegeek.public@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://cantgrokwontgrok.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>188.222.108.159</wp:comment_author_IP>
    <wp:comment_date>2010-02-12 22:11:20</wp:comment_date>
    <wp:comment_date_gmt>2010-02-12 22:11:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice post - and "food for thought"..

I think it definitely depends on what you are deploying and where.. I think we all agree in most cases, Web will be the easiest. However, as you say, once we start getting into desktop/public APIs - I think the process could easily start to break down..

That said - I think the fact that this is so god damn scary is a bit of a turn-on :)
For many - TDD is/was scary because it would mean you see the ugly truth about what a mess a lot of your beloved code is right? But we bite the bullet, start adding tests, refactoring code etc. We suffer some pain because we want to *be better*.

I think this could very much be a similar situation - wouldn't it be cool if software was actually improving on a daily basis? Even if you didn't actually drop to live on every commit or whatever, but just to know that the deployment process is so smooth, you *could* deploy to live at the click of a button?

Obviously, this kind of practice would have to have some requirements. High test coverage, well organised release mechanism (e.g. DB schema update scripts etc.) and a system that tolerates frequent updates (e.g. app cache being blitzed by frequent writes to binaries) and so on..

TBH, would love to see more in this direction - but there is a lot of risk to be negated and I am not sure really many people are able to stomach it!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>172</wp:comment_id>
    <wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
    <wp:comment_author_email>andy78smith@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.120.210.79</wp:comment_author_IP>
    <wp:comment_date>2010-02-12 18:20:31</wp:comment_date>
    <wp:comment_date_gmt>2010-02-12 18:20:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I guess it really depends on what kind of app you are talking about. Your own web app, where you can freely push out to your own server(s) may be ok. And may make total sense (in fact, don't sites like StackOverflow do that sort of thing already?) Self contained client apps also probably doable. But automaticallly pushing out changes to libarary that other apps depend on? Not so sure...

From a technical perspective, I'm sure it's possible to do. But I would imagine it would require strong versioning of assemblies so the API you depend on doesn't just dissapear one day (I'd rather have different versions of the same dll, then a dll containing new and obsolete methods)

Actually just thinking about standalone client line-of-business apps. I've worked in places where a new version of anything required user retraining. So, just wouldn't be a runner. Also, it may work fine in your tests but lots of apps support user customization and it may not be possible to pre-test for every scenario. Some apps will always need an 'acceptance test' phase imo.

As you can tell, not sold on the idea for non-web stuff :) But definitely a different approach and one that would no doubt increase test coverage! Will be interesting to hear how you get on.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>174</wp:comment_id>
    <wp:comment_author><![CDATA[Andy Parkhill]]></wp:comment_author>
    <wp:comment_author_email>andyparkhill@hotmail.co.uk</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/MagicAndi</wp:comment_author_url>
    <wp:comment_author_IP>78.33.185.141</wp:comment_author_IP>
    <wp:comment_date>2010-02-13 00:30:55</wp:comment_date>
    <wp:comment_date_gmt>2010-02-13 00:30:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Just to point out that this is the logical progression of Continuous Integration, and is also known as Continuous Deployment - http://radar.oreilly.com/2009/03/continuous-deployment-5-eas.html. Personally, I think this could be a very powerful approach to the automation of software deployment.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>184</wp:comment_id>
    <wp:comment_author><![CDATA[Ryan Tomlinson]]></wp:comment_author>
    <wp:comment_author_email>tomlinsonryan@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.ryantomlinson.com</wp:comment_author_url>
    <wp:comment_author_IP>81.105.172.154</wp:comment_author_IP>
    <wp:comment_date>2010-02-25 16:25:03</wp:comment_date>
    <wp:comment_date_gmt>2010-02-25 16:25:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This is all well and good from a technical stand point. But surely the fact that "all green" doesn't mean the product is fit for production deployment. 

How are regression and UI testing factored into this approach?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>185</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.120.210.79</wp:comment_author_IP>
    <wp:comment_date>2010-02-25 19:11:14</wp:comment_date>
    <wp:comment_date_gmt>2010-02-25 19:11:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi :
well, I <em>think</em>  that the green mean regression and UI test are green too. 
So actually this is code that you would consider production ready, perhaps actually you only push when the acceptance tests ( ie the BDD style tests are passing , hence you consider done, hence you are ready to deploy)
Does this answer the question?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>184</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Lessons Learned in Unit Testing Session - DDD8</title>
  <link>http://roundcrisis.com/2010/01/31/lessons-learned-in-unit-testing-session-ddd8/</link>
  <pubDate>Sun, 31 Jan 2010 22:55:41 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=467</guid>
  <description/>
  <content:encoded><![CDATA[<div id="_mcePaste">DDD8  was a lot of fun!</div>
<div>I really didn't know what to expect and it turned out great, and got to a few talks ( not as many as I wanted tho) and met personally a lot of really interesting people.</div>
<div>Moving on swiftly to the meaty bit of the post:</div>
<div></div>
<div>I've  uploaded the code and slides to <a href="http://github.com/Andrea/LessonsLearnedInUnitTesting" target="_blank">github</a>, I m hoping I can improve this samples with time, if there is anything wrong apologies in advance, first time using git as a committing to a project so I m bound to get it wrong. Looking forward to James Gregory E-Van on git so I can learn more on the topic :).</div>
<div>I'm sure I ll look at the code sometime later and think OMG! how did I dare to present this in public, but I guess is the nature of the beast :).</div>
<div></div>
<div id="_mcePaste">If you saw the talk please let me know what you think, as I would appreciate any feedback, particularly the parts that I can make better. So far I the feedback I have is:</div>
<div>
<ul>
	<li>I do speak too quick,</li>
	<li>I should talk about legacy code and how to deal with that</li>
</ul>
</div>
<div></div>
<div id="_mcePaste">I posted the code in the same way I presented it, this means there is a OrderService_version1, 2 and 3, hopefully you can follow the code pretty much as we did it in the talk.</div>
<div id="_mcePaste"></div>
<div>There was some  questions, and I said I ll post some links here:</div>
<div id="_mcePaste"><strong>Books</strong>:</div>
<div id="_mcePaste">- <a href="http://www.artofunittesting.com/" target="_blank">The Art of Unit Testing</a> (Roy Osherove),  the talk is heavily inspired by this book</div>
<div id="_mcePaste">- <a href="http://xunitpatterns.com/" target="_blank">xUnit Test Patterns, Refactoring Test Code</a> ( Meszaros), Great book if you are looking for more detail. Perfect as a reference book</div>
<div id="_mcePaste">-<a href="http://www.amazon.com/Test-Driven-Development-Kent-Beck/dp/0321146530" target="_blank"> TDD by Example</a> by Kent Beck, a very hands on approach highly recomended.</div>
<div id="_mcePaste">- <a href="http://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052" target="_blank">Working Effectively with Legacy Code</a>, Michael Feathers - A must read if you are interested in testing (whether you are working with legacy code or not).</div>
<div></div>
<div id="_mcePaste"><strong>Tools</strong>:</div>
<div id="_mcePaste">During the talk I was using</div>
<div></div>
<div id="_mcePaste">Unit testing frameworks:</div>
<div id="_mcePaste">-<a href="http://www.codeplex.com/xunit" target="_blank">xUnit</a></div>
<div id="_mcePaste">-<a href="http://www.nunit.org/">nUnit</a></div>
<div id="_mcePaste">Mocking Frameworks:</div>
<div id="_mcePaste">-<a href="http://code.google.com/p/moq/" target="_blank">moq</a></div>
<div id="_mcePaste"></div>
<div>Other tools  mentioned:</div>
<div id="_mcePaste"></div>
<div>-<a href="http://github.com/ayende/rhino-mocks">Rhino  Mocks</a>: Possibly the most used Mocking Framework</div>
<div id="_mcePaste">-<a href="http://github.com/riteshrao/ncommon/">NCommon</a>: General purpose library, definitely worth a check</div>
<div id="_mcePaste">-<a href="http://github.com/enkari/ninject/">Ninject</a>: IoC container ( there is also .. Ninject.MVC that helps you wire up the dependencies of your controllers on they fly, very useful )</div>
<div id="_mcePaste">-<a href="http://www.castleproject.org/castle/download.html" target="_blank">Windsor</a>: IoC container</div>
<div></div>
<div></div>
<div id="_mcePaste">If there are any questions or comments, please do let me know</div>
<div></div>
<div>Thanks to the organizers and everyone there, it was a wonderful experience that I m hoping to repeat.</div>
<div id="_mcePaste">Cheers</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>467</wp:post_id>
  <wp:post_date>2010-01-31 22:55:41</wp:post_date>
  <wp:post_date_gmt>2010-01-31 22:55:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lessons-learned-in-unit-testing-session-ddd8</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1321998500";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-01-31 22:55:41]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>167</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.120.210.79</wp:comment_author_IP>
    <wp:comment_date>2010-02-08 11:10:26</wp:comment_date>
    <wp:comment_date_gmt>2010-02-08 11:10:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Mateo, tanto tiempo, donde andas vos?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>166</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>168</wp:comment_id>
    <wp:comment_author><![CDATA[DDD8 &#8211; post-event commentary #DDD8]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.craigmurphy.com/blog/?p=1633</wp:comment_author_url>
    <wp:comment_author_IP>87.117.200.148</wp:comment_author_IP>
    <wp:comment_date>2010-02-09 20:36:03</wp:comment_date>
    <wp:comment_date_gmt>2010-02-09 20:36:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Andrea Magnorsky wrote this piece &#8211; thanks [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>166</wp:comment_id>
    <wp:comment_author><![CDATA[Mateo]]></wp:comment_author>
    <wp:comment_author_email>mateosoft@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>168.226.200.98</wp:comment_author_IP>
    <wp:comment_date>2010-02-04 15:27:02</wp:comment_date>
    <wp:comment_date_gmt>2010-02-04 15:27:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Andrea Magnorsky? Tanto tiempo.. Como te trata la vida en Irlanda?
De casualidad llegué a éste blog, y me imagino que sos vos la que lo escribe.
No se si te acordarás de mí, pero fuimos compañeros en la UTN. Igual te dejo saludos.
Mateo.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>165</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.120.210.79</wp:comment_author_IP>
    <wp:comment_date>2010-02-03 10:43:20</wp:comment_date>
    <wp:comment_date_gmt>2010-02-03 10:43:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Craig:

You are too kind, and thanks for your blog post too,  but I m glad you found it helpful. 
I was using the resharper test runner with <a href="http://xunitcontrib.codeplex.com/" rel="nofollow">xUnit contrib </a>
Cheers]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>164</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>164</wp:comment_id>
    <wp:comment_author><![CDATA[Craig]]></wp:comment_author>
    <wp:comment_author_email>craig@cargowire.net</wp:comment_author_email>
    <wp:comment_author_url>http://cargowire.net</wp:comment_author_url>
    <wp:comment_author_IP>90.213.205.3</wp:comment_author_IP>
    <wp:comment_date>2010-02-02 23:11:19</wp:comment_date>
    <wp:comment_date_gmt>2010-02-02 23:11:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Andrea,

Thanks for the excellent talk - a good structure, using the OrderService example as a focus for the principles you wanted to get across.

Can I ask what test runner you were using during your demos?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>163</wp:comment_id>
    <wp:comment_author><![CDATA[The Morning Brew - Chris Alcock &raquo; The Morning Brew #530]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://blog.cwa.me.uk/2010/02/02/the-morning-brew-530/</wp:comment_author_url>
    <wp:comment_author_IP>212.227.118.27</wp:comment_author_IP>
    <wp:comment_date>2010-02-02 09:34:43</wp:comment_date>
    <wp:comment_date_gmt>2010-02-02 09:34:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Lessons Learned in Unit Testing Session - DDD8 - Andrea Magnorsky [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Test Class Organization</title>
  <link>http://roundcrisis.com/2010/02/09/test-class-organization/</link>
  <pubDate>Tue, 09 Feb 2010 21:29:05 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=470</guid>
  <description/>
  <content:encoded><![CDATA[Hi there

Just though I d share this

this is the way I ve been organizing my test code as of late

<pre>
<pre>	public class MyClassTests
	{
		public class Given_a_context
		{
			[Fact]
			public void When_somthing_happens_Then_result()
			{
				throw new NotImplementedException();
			}

			//...............
		}

		public class Given_a_different_context
		{
			[Fact]
			public void When_somthing_happens_Then_result()
			{
				throw new NotImplementedException();
			}

			//...............
		}
	}
</pre>

I like this because you can still easily find the class name with resharper 
you can also separate the contexts you are testing in a more clean way
this works out good for me most of the times, even when you are inheriting 
from a base test class.
It also reads well in the Test runner.
Any comments?
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>470</wp:post_id>
  <wp:post_date>2010-02-09 21:29:05</wp:post_date>
  <wp:post_date_gmt>2010-02-09 21:29:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>test-class-organization</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1313726402";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-02-09 21:29:05]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>176</wp:comment_id>
    <wp:comment_author><![CDATA[Ruben Bartelink]]></wp:comment_author>
    <wp:comment_author_email>rubenOMGIAAC@bartelink.com</wp:comment_author_email>
    <wp:comment_author_url>http://bartelink.com</wp:comment_author_url>
    <wp:comment_author_IP>86.47.235.241</wp:comment_author_IP>
    <wp:comment_date>2010-02-19 10:07:25</wp:comment_date>
    <wp:comment_date_gmt>2010-02-19 10:07:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[More stuff I found: (by googling aaa context/specification)

http://www.pluralsight.com/community/blogs/starr/archive/2009/02/27/some-alternative-ways-of-reading-context-specification.aspx + comments
http://elegantcode.com/2009/02/27/some-alternative-ways-of-reading-contextspecification/ + comments

http://groups.google.com/group/behaviordrivendevelopment/browse_thread/thread/5bffac19e28e5f12/2ef57e408fb38d0f?show_docid=2ef57e408fb38d0f

Nice example: http://www.lostechies.com/blogs/jimmy_bogard/archive/2008/07/24/arrange-act-assert-and-bdd-specifications.aspx

Or, as you use: http://www.clariusconsulting.net/blogs/kzu/archive/2009/10/01/171565.aspx
(Esp see the TD.NET spec renderer)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>175</wp:comment_id>
    <wp:comment_author><![CDATA[Ruben Bartelink]]></wp:comment_author>
    <wp:comment_author_email>rubenOMGIAAC@bartelink.com</wp:comment_author_email>
    <wp:comment_author_url>http://bartelink.com</wp:comment_author_url>
    <wp:comment_author_IP>86.47.235.241</wp:comment_author_IP>
    <wp:comment_date>2010-02-15 10:08:26</wp:comment_date>
    <wp:comment_date_gmt>2010-02-15 10:08:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Onya for sharing...

Based on http://haacked.com/archive/2008/08/24/introducing-subspec.aspx and http://www.code-magazine.com/Article.aspx?quickid=0805061
and http://www.codethinked.com/post/2009/03/08/Beginning-Mocking-With-Moq-3-Part-1.aspx

I'm using use a Context/Spec stylee. I find it breaks stuff up in the code and in your head much better than a slab of code with 3x comments or line breaks into AAA.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>177</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.120.210.79</wp:comment_author_IP>
    <wp:comment_date>2010-02-22 16:37:52</wp:comment_date>
    <wp:comment_date_gmt>2010-02-22 16:37:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[hehe, the two first ones are actually the same article :) 

The problem I find with the aproach explained there is that to find the tests I want the test files to be called something like MyUnitTests (where MyUnit is the class under tests) as opposed to: When_an_item_is_added as a class name, it just hard to find a test quickly, but the rest, yeah I agree with that]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>176</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>178</wp:comment_id>
    <wp:comment_author><![CDATA[Ruben Bartelink]]></wp:comment_author>
    <wp:comment_author_email>rubenOMGIAAC@bartelink.com</wp:comment_author_email>
    <wp:comment_author_url>http://bartelink.com</wp:comment_author_url>
    <wp:comment_author_IP>86.47.235.241</wp:comment_author_IP>
    <wp:comment_date>2010-02-24 17:24:40</wp:comment_date>
    <wp:comment_date_gmt>2010-02-24 17:24:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Sorry didnt see this till now

I was aware the second article was linked from the first but wanted to be sure that it didnt get skimmed over.
I use CR but suspect R# can also handle the other arrangement if you do a class or method search rather than a file one. But I take the general point of the findability of something being an important consideration in the naming.
I consider XYZClassTests orgainisation (assumption of 1:1:1 class:test class:test file) to be an antipattern).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>179</wp:comment_id>
    <wp:comment_author><![CDATA[Ruben Bartelink]]></wp:comment_author>
    <wp:comment_author_email>rubenOMGIAAC@bartelink.com</wp:comment_author_email>
    <wp:comment_author_url>http://bartelink.com</wp:comment_author_url>
    <wp:comment_author_IP>86.47.235.241</wp:comment_author_IP>
    <wp:comment_date>2010-02-24 17:25:09</wp:comment_date>
    <wp:comment_date_gmt>2010-02-24 17:25:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Resubmitting so I get followups!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>180</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.120.210.79</wp:comment_author_IP>
    <wp:comment_date>2010-02-24 18:05:37</wp:comment_date>
    <wp:comment_date_gmt>2010-02-24 18:05:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[If you say something like "I consider XYZClassTests organisation an Antipattern", I m sure you expected the Why? or actually in what particular situations

Regarding discover-ability of the class/ method of course you can do that with R# ( and I think even plain VS does that in the 2010 version) however finding OrderServiceTests is pretty intuitive compared to Given_an_initialised_OrderService  your eyes just know what to look for in the first case.
Anyway, this is a matter of taste, as long as the codebase is consistent, I d say it s ok.

]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>182</wp:comment_id>
    <wp:comment_author><![CDATA[Ruben Bartelink]]></wp:comment_author>
    <wp:comment_author_email>rubenOMGIAAC@bartelink.com</wp:comment_author_email>
    <wp:comment_author_url>http://bartelink.com</wp:comment_author_url>
    <wp:comment_author_IP>86.47.235.241</wp:comment_author_IP>
    <wp:comment_date>2010-02-25 09:15:40</wp:comment_date>
    <wp:comment_date_gmt>2010-02-25 09:15:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Looking again - I scanned a little too quickly when making the last comment (I assumed there wasnt nesting of classes). With the nesting of classes you're bringing in most of what I'm talking about. In other words, you're not implying a 1:1:1 ratio, you have a 1:1:n (class:testgroup:testclass) instead. I'd argue that while a lot of your testing is going to be (and should be) specific to a class (a class being the most common Unit), having a less rigid way of grouping (specification/concern hierarchy[1]/observations) fits the way I like to look at things better (To be pejorative, I'm not testing a class to tick a box, I'm writing specifications for a variety of concerns managed by related clumps of classes - even if in many cases they are just one class)

[1] You dont preclude this in your arrangement, but making it MyClassTests ties it a) to a class b) to thinking "I wrote my class, now I'm testing my class" instead of doing something higher level

Immediately after reading AOUT (but before I read the BDD stuff, xUTP and PragUnitTesting) I would probably not have split hairs about this.

In Context/Spec, you can use namespaces and nested classes to accomplish the grouping you do via the MyClassTests grouping class too (And I do - I have a Specifications folder per project and there's a hierarchy of cs files with grouped specs in those, including use of folders as appropriate - and the arrangment does not necessarily mirror the foldering [based on namespacing] that the actual SUT has)

Another thing I like about Context/Specification is that the EstablishContext/Because/Observation structuring is very natural and a nice extension to AAA (and doesnt require comments or putting 2 blank lines between the A regions) (Or #regions around each of the As :P) - it really helps you to think.

I think it's fair to say we're not a million miles apart on this - it's just a slightly different philosophy. It's definitely a long way from:

VS "Generate tests for this class" menu option (because our boss told us we need to tick this box to get the cookie)

class A
{
  A
  B
}

class ATests
{
    TestA()
        Arrange
        Act
        Assert
    TestB()
        Arrange
        Act
        Assert
}

Or (AOUT IIRC - which doesnt break out the context as explicitly as 'yours' or 'mine'):

class A
{
}

class ATests
{
    MethodName_StateUnderTest_Behavior()
        Arrange
        Act
        Assert
    MethodName_StateUnderTest_Behavior()
        Arrange
        Act
        Assert
    MethodName_StateUnderTest_Behavior()
        Arrange
        Act
        Assert
}

My "final" (it never is!) arrangement is:

(top level - the code)

class X
class XFactory
class Y
class Z
class ZHelper
namespace Z.Linq
    class ZExtensions

(Under Specifications folder/namespace)

class/namespace XYSpecifications

        class XYZSpecificationBase
            EstablishContext
            v light smattering of helpers

        class When_XStuff
            EstablishContext?
               Arrange
            Because
               Act
            Observation*
                Assert
        class When_YStuff
            EstablishContext?
               Arrange
            Because
               Act
            Observation*
                Assert
        class When_ZStuff
            EstablishContext?
               Arrange
            Because
               Act
            Observation*
                Assert

    class/namespace XY_Z_Specification

        class When_ZStuff
            EstablishContext?
               Arrange
            Because
               Act
            Observation*
                Assert]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>183</wp:comment_id>
    <wp:comment_author><![CDATA[Ruben Bartelink]]></wp:comment_author>
    <wp:comment_author_email>rubenOMGIAAC@bartelink.com</wp:comment_author_email>
    <wp:comment_author_url>http://bartelink.com</wp:comment_author_url>
    <wp:comment_author_IP>86.47.235.241</wp:comment_author_IP>
    <wp:comment_date>2010-02-25 09:17:14</wp:comment_date>
    <wp:comment_date_gmt>2010-02-25 09:17:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Oh no, it stripped my indentation! Looks pretty crap but hopefully you'll be able to pull out my points...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>187</wp:comment_id>
    <wp:comment_author><![CDATA[Ruben Bartelink]]></wp:comment_author>
    <wp:comment_author_email>rubenRC@bartelink.com</wp:comment_author_email>
    <wp:comment_author_url>http://bartelink.com</wp:comment_author_url>
    <wp:comment_author_IP>86.47.235.241</wp:comment_author_IP>
    <wp:comment_date>2010-03-02 13:16:27</wp:comment_date>
    <wp:comment_date_gmt>2010-03-02 13:16:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[A related post...
http://elegantcode.com/2010/03/01/an-evolution-of-test-specification-styles-my-journey-to-mspec/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>DDD South West</title>
  <link>http://roundcrisis.com/2010/03/06/ddd-south-west/</link>
  <pubDate>Sat, 06 Mar 2010 09:00:23 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=503</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://www.dddsouthwest.com/"><img class="alignleft" title="DDD South West" src="http://dddsouthwest.com/images/DDDSouthWest2.png" alt="" width="236" height="118" /></a>

So there is another DDD event the 5th of June, and this time is in Bristol, call for speakers is on ( if you want to submit, you can get instructions on how to do so <a href="http://dddsouthwest.com/ProposedSessions/tabid/69/Default.aspx" target="_blank">here</a>)

Sessions look interesting so far.

I really enjoyed the last DDD in Reading, Uk.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>503</wp:post_id>
  <wp:post_date>2010-03-06 09:00:23</wp:post_date>
  <wp:post_date_gmt>2010-03-06 09:00:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ddd-south-west</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367685";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-03-06 09:00:23]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>New/Swiped Development Machine - software musts</title>
  <link>http://roundcrisis.com/2010/03/13/newswiped-development-machine-software-musts/</link>
  <pubDate>Sat, 13 Mar 2010 14:20:25 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=508</guid>
  <description/>
  <content:encoded><![CDATA[<p>I understand the title makes little sense, but this is probably what I would search in a web search engine ( hopefully at the time I ll find my own post)  A short, unordered list of things I install when I get a new machine/wipped machine</p>
<ul>
<li> An FTP client Filezilla will do</li>
<li>Firefox + Add on: firebug, noscript, colurful tabs,</li>
<li>Chrome ( for js intensive stuff it jsut renders faster)</li>
<li>ieTester ( run multiple ie versions parallely)</li>
<li>ieDebuger</li>
<li>Wireshark, comes handy</li>
<li>Reflector</li>
<li>Resharper</li>
<li>Syntax friendly  Notepad ( I use Notepad ++  but not mad about it)</li>
<li>Tortoisesvn or Anksvn </li>
<li>Tortoise git</li>
<li>SVN Monitor</li>
<li>Git ( you ll need it at least to download libraries code)</li>
<li>foobar2000 music player ( after all you need to block the noise from the outside)</li>
<li>Sql Server Management Studio , you ll eventually need it  and if you have profiler you ll probably need it too</li>
<li>#Develop is kinda handy too</li>
<li>I use Evernote, so I would install that, tho not run it often just because I don't  like the desktop client much tbh</li>
<li>Sumatra PDF (if anyone knows a better one I d appreciate it)</li>
<li>Visual Studio</li>
<li>Setup IIS</li>
</ul>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>508</wp:post_id>
  <wp:post_date>2010-03-13 14:20:25</wp:post_date>
  <wp:post_date_gmt>2010-03-13 14:20:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>newswiped-development-machine-software-musts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1323367681";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-03-13 14:20:25]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>195</wp:comment_id>
    <wp:comment_author><![CDATA[Jacob Reimers]]></wp:comment_author>
    <wp:comment_author_email>jacob@reimers.dk</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>89.101.207.158</wp:comment_author_IP>
    <wp:comment_date>2010-03-14 17:22:32</wp:comment_date>
    <wp:comment_date_gmt>2010-03-14 17:22:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I would add Paint.Net if you ever need screen grabbing and/or image handling.
For FF addons I would also install FireCookie, MeasureIt, Colorzilla  and YSlow.
My preferred PDF viewer is Foxit, but I think any will do.
IE8 comes with nice debugging tools, no need for extras.
What about IM client (Skype and/or GTalk). Finally I like Expresso to help with regular expressions.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>194</wp:comment_id>
    <wp:comment_author><![CDATA[Andy Parkhill]]></wp:comment_author>
    <wp:comment_author_email>andyparkhill@hotmail.co.uk</wp:comment_author_email>
    <wp:comment_author_url>http://stackoverflow.com/users/35483/magicandi</wp:comment_author_url>
    <wp:comment_author_IP>109.224.140.107</wp:comment_author_IP>
    <wp:comment_date>2010-03-14 13:42:21</wp:comment_date>
    <wp:comment_date_gmt>2010-03-14 13:42:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I would have to add:

Snippet Compiler - http://www.sliver.com/dotnet/SnippetCompiler/
PowerShell - really useful for exploring the methods and properties of an object, and for build scripts

I've never heard of the IE Debugger before, is it the same as the DebugBar?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>197</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.120.210.79</wp:comment_author_IP>
    <wp:comment_date>2010-03-15 14:08:00</wp:comment_date>
    <wp:comment_date_gmt>2010-03-15 14:08:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hey Jacob: 
Thanks for the comment, Windows 7 comes with a Snipping Tool that does all I want from a screen grabbing perspective. As for PDF reader, have a look at sumatra, its even lighter weight than Foxit ( Foxit lately is kinda full of weird stuff)

Hey Andy:
Thanks for the comment.
The snippet compiler, handy :) , I ll have a look, as for the IeDebuger you are rigth it is the DebugBar, wires got crossed sorry.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>195</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>198</wp:comment_id>
    <wp:comment_author><![CDATA[Ruben Bartelink]]></wp:comment_author>
    <wp:comment_author_email>rubenRC@bartelink.com</wp:comment_author_email>
    <wp:comment_author_url>http://bartelink.com</wp:comment_author_url>
    <wp:comment_author_IP>86.47.235.241</wp:comment_author_IP>
    <wp:comment_date>2010-03-16 08:44:23</wp:comment_date>
    <wp:comment_date_gmt>2010-03-16 08:44:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[LINQPad has replaced SnippetCompiler for me - it's absolutely fantastic - dont forget the tutorials on dimecasts for advanced features]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Irish Open Spaces Coding Day II</title>
  <link>http://roundcrisis.com/2010/03/19/irish-open-spaces-coding-day-ii/</link>
  <pubDate>Fri, 19 Mar 2010 13:00:03 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=519</guid>
  <description/>
  <content:encoded><![CDATA[Hi all:

Just thought I d post here that a group of us in Dublin. Alt.Net are organizing a coding day the 24th of April in UCD, it should be a fun day of hacking some code. One of the really cool things is that James Gregory will be there talking about Fluent Nhibernate.

If this sounds like something you d'like to do you, can  register and find out more about it in <a href="http://codingday.org" target="_blank">codingday.org</a>

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>519</wp:post_id>
  <wp:post_date>2010-03-19 13:00:03</wp:post_date>
  <wp:post_date_gmt>2010-03-19 13:00:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>irish-open-spaces-coding-day-ii</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197483";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-03-19 13:00:03]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ada Lovelace Day 2010: Amanda Laucher</title>
  <link>http://roundcrisis.com/2010/03/28/ada-lovelace-day-2010-amanda-laucher/</link>
  <pubDate>Sun, 28 Mar 2010 08:57:39 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=529</guid>
  <description/>
  <content:encoded><![CDATA[I m late with the Ada Lovelace Day article, I had the choice of making it on time but incomplete, or put some time and be late, and I chose the later this time. I really though the person and the topic deserved in depth investigation.

I didnt really know how to aproach the Ada Lovelace Day last year and this year I still dont know now, I think the best homage I can do is learn more about F# in this case.

This post is about Amanda Laucher and about F#. Amanda is the author of <a href="http://www.manning.com/laucher/" target="_blank">F# in Action</a>. A speaker and most importantly a software developer, when you see her talking you can see she really likes what she does, and that fact is pretty inspirational.

I found quite a few of her presentations online
<ul>
	<li>QCon London 2010 - <a href="http://www.infoq.com/presentations/Pragmatic-F-Sharp-in-Action" target="_blank">Pragmatic F# in Action</a></li>
	<li>QCon London 2009 - <a href="http://www.infoq.com/presentations/Concurrent-Programming-with-Microsoft-F-Amanda-Laucher" target="_blank">Concurrent Programing with F#</a></li>
	<li>Channel 9  - 2008 Ted <a href="http://www.dotnetrocks.com/default.aspx?ShowNum=377" target="_blank">Newward and Amanda Laucher on F#</a></li>
	<li>I m sure there is more but that ll get you going =)</li>
</ul>
Then I also found some other F# resources

Wikipedia had a pleasant surprise in store for me with a really comprehensive <a href="http://en.wikipedia.org/wiki/F_Sharp_(programming_language)" target="_blank">introduction to the language</a>, and also pointed me to a <a href="http://en.wikibooks.org/wiki/F_Sharp_Programming" target="_blank">wikibook</a> however when I started typing the code and tryng to run it I ran into problems because the parser looks at line breaks.

<strong>Disclaimer: I never done any f# before so anything below could be completely wrong (if so please let me know so I learn :) )</strong>

In a short time I learnt that

F# is
<ul>
	<li>Not purely a functional language, some OO aspects and has type inference.</li>
	<li>a strongly typed language</li>
	<li>.Net language</li>
	<li>has Garbage Collection</li>
	<li>does Lazy evaluation ( this is really cool )</li>
	<li>Some sort of Asynchronous workflow ( need to digg deeper on this)</li>
</ul>
More detail
<ul>
	<li>Everything is inmutable by default, but there are mutable objects ( apparently the objects that you can get by interoping with, say,a  c# dll are mutable but i m not sure)</li>
	<li>lazy evaluation</li>
	<li>Asynchronous Workflows</li>
	<li>You can pass functions as result of function executions, or be the result of functions, and have functions inside functions</li>
	<li>Send parts of parameters into a function</li>
	<li>have a collection of functions that can be started asynchronously (holy smokes!)</li>
</ul>
After looking around I also found some good videos from Erik Meyer on the topic, hes got a series of them you can have a look <a href="http://channel9.msdn.com/shows/Going+Deep/Lecture-Series-Erik-Meijer-Functional-Programming-Fundamentals-Chapter-1/" target="_blank">here</a>, the series goes through the history of functional programming and principles, very interesting.

I can see a lot of potential on this, I find functional programming a big mind switch and I m sure it will take me a good while to do it properly, however, the goodness of looking at this code comes from the ideas you can take from different aproaches.

One thing that did strike me so far is that i ve seen bad variable names and no unit testing on it at all, on the other hand, the power that you seem to sudenly have is just incredible, tho since the paradigm shift is so big, I found myself stumbling and not being able to do things that i find really simple in c# (like print an array to the console, the difficulty was on realising that the line breaks are significant)

The real life example from the QCon talk from 2009 was a really good way to see the value of the language as real life usage, the QCon  talk from 2010 was really good because it dived deep into the language, language usage, etc.

I feel like I ve started learning something that will cahnge the way I code and I m really happy about that.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>529</wp:post_id>
  <wp:post_date>2010-03-28 08:57:39</wp:post_date>
  <wp:post_date_gmt>2010-03-28 08:57:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ada-lovelace-day-2010-amanda-laucher</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="ald"><![CDATA[ALD]]></category>
  <category domain="post_tag" nicename="f"><![CDATA[f#]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197482";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-03-28 08:57:39]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>201</wp:comment_id>
    <wp:comment_author><![CDATA[nola]]></wp:comment_author>
    <wp:comment_author_email>nola@rubygeek.com</wp:comment_author_email>
    <wp:comment_author_url>http://rubygeek.com</wp:comment_author_url>
    <wp:comment_author_IP>67.186.77.167</wp:comment_author_IP>
    <wp:comment_date>2010-03-28 13:23:49</wp:comment_date>
    <wp:comment_date_gmt>2010-03-28 13:23:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I've met Amanda and she is a great person! And just meeting her made me want to try functional programming. :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>202</wp:comment_id>
    <wp:comment_author><![CDATA[Maggie Longshore]]></wp:comment_author>
    <wp:comment_author_email>MaggieLongshore@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>71.79.61.224</wp:comment_author_IP>
    <wp:comment_date>2010-03-28 15:45:30</wp:comment_date>
    <wp:comment_date_gmt>2010-03-28 15:45:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great topic.  Amanda spoke at the Central Ohio day of .net in 2008 on F#.  This was my first introduction to functional languages.  On a related note, at this talk, Amanda spoke about the developer community and twitter and inspired me to check it out - this has led me to branch out and meet many many developers and travel to several conferences.  This has had a big impact on my career.  

Her blog is http://pandamonial.grahamis.com/blog/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>203</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.120.210.79</wp:comment_author_IP>
    <wp:comment_date>2010-03-29 10:58:19</wp:comment_date>
    <wp:comment_date_gmt>2010-03-29 10:58:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for your comments :)
Glad to hear this. I don't know where you guys are, but we have a growing community here in Ireland and if you are ever around, let me know we can organise something
Cheers]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>FluentMigrator Composite Index</title>
  <link>http://roundcrisis.com/2010/04/02/fluentmigrator-composite-index/</link>
  <pubDate>Fri, 02 Apr 2010 10:19:22 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=538</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://github.com/schambers/fluentmigrator/" target="_blank">Fluentmigrator </a>is a really nice migration tool that allows you to tear your database up and down keeping version, please visit the project page for more info.

Anyway, the other day I had to create a composite index, and I didnt know how,  the way to do that is:

<address>Create.Index("Name_of_the_index_String").OnTable("Name_of_the_Table_String")
.OnColumn("Column_Name_string").Ascending()
.OnColumn("Other_Column_Name_string").Ascending();

</address>Looks kinda obvious no? but what threw me off at the time is that I was looking at the possible operations after OnColumn and there was nothign obvious there,

<a href="http://roundcrisis.files.wordpress.com/2010/04/fm_index1.png"><img class="alignleft size-full wp-image-543" title="FluentMigrator Create Index" src="http://roundcrisis.files.wordpress.com/2010/04/fm_index1.png" alt="FluentMigrator Create Index Column Intellisense" width="500" height="74" /></a>

then  I looked at the Sql documentation for CREATE INDEX

<address>
<pre>CREATE [ UNIQUE ] [ CLUSTERED | NONCLUSTERED ] INDEX index_name
    ON &lt;object&gt; ( column [ ASC | DESC ] [ ,...n ] )
    [ INCLUDE ( column_name [ ,...n ] ) ]
    [ WHERE &lt;filter_predicate&gt; ]
    [ WITH ( &lt;relational_index_option&gt; [ ,...n ] ) ]</pre>
</address>The solution was (kind of) there, you could do more columns after you specify the sorting direction. Perhaps it's  obvious but it took me a while to figure out. It was logical however not obvious.

Also on composite, before I created an index I thought about using composite keys, J.Miller has a post <a href="http://codebetter.com/blogs/jeremy.miller/archive/2007/02/01/Composite-keys-are-evil.aspx" target="_blank">here </a>on why that is not really a good idea ( have a look at the comments in particular). For me, it boils down to:
<ul>
	<li>Maybe something that has meaning now, wont necessarily have the same meaning in the future</li>
	<li>It's harder to manage composite keys that it is to manage surrogate keys</li>
</ul>
There are more reasons for and against surrogate keys, but this was what was suitable to me at the time

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>538</wp:post_id>
  <wp:post_date>2010-04-02 10:19:22</wp:post_date>
  <wp:post_date_gmt>2010-04-02 10:19:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fluentmigrator-composite-index</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="fluentmigrator"><![CDATA[fluentmigrator]]></category>
  <category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>
  <category domain="post_tag" nicename="nhibernate"><![CDATA[NHibernate]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197484";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-04-02 10:19:22]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Irish Open Spaces Coding Day II Retrospective</title>
  <link>http://roundcrisis.com/2010/04/28/irish-open-spaces-coding-day-ii-retrospective/</link>
  <pubDate>Wed, 28 Apr 2010 09:00:44 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=551</guid>
  <description/>
  <content:encoded><![CDATA[<div>I think the best way to describe this is saying, When is the next one? (We think around late August, early September)</div>
<div>Thanks again to our sponsors: Jetbrains, Manning and Microsoft, and particularly to our hosts: the open source Lab in UCD, that place is just designed for this type of events.</div>
<div>Sessions:</div>
<div>- Rx :</div>
<div>- ook!</div>
<div>- Cucumber with Iron Ruby</div>
<div>- pLinq and Mono</div>
<div>- Mongo Db (a bit of a comparison between .net implementation and a ruby implementation)</div>
<div>All the code for the sessions is available in our repo.</div>
<div></div>
<div>Some photos from the event here <a href="http://www.flickr.com/photos/roundcrisis/sets/72157623824914233/">http://www.flickr.com/photos/roundcrisis/sets/72157623824914233/</a></div>
<div></div>
<div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>551</wp:post_id>
  <wp:post_date>2010-04-28 09:00:44</wp:post_date>
  <wp:post_date_gmt>2010-04-28 09:00:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>irish-open-spaces-coding-day-ii-retrospective</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="alt-net"><![CDATA[alt-net]]></category>
  <category domain="post_tag" nicename="ioscd"><![CDATA[IOSCD]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197483";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_857de631cb7bdcc67099898948de9a7b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-04-28 09:00:44]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>212</wp:comment_id>
    <wp:comment_author><![CDATA[Claudio Perrone]]></wp:comment_author>
    <wp:comment_author_email>claudio@agilesensei.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.agilesensei.com</wp:comment_author_url>
    <wp:comment_author_IP>78.16.254.220</wp:comment_author_IP>
    <wp:comment_date>2010-04-30 09:04:53</wp:comment_date>
    <wp:comment_date_gmt>2010-04-30 09:04:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Andrea,
Sorry I've been out of the "scene" for a while, but I'm really glad to hear that the day worked out well. Talk to you soon.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>213</wp:comment_id>
    <wp:comment_author><![CDATA[Andy Parkhill]]></wp:comment_author>
    <wp:comment_author_email>andyparkhill@hotmail.co.uk</wp:comment_author_email>
    <wp:comment_author_url>http://www.andyparkhill.co.uk</wp:comment_author_url>
    <wp:comment_author_IP>109.224.140.107</wp:comment_author_IP>
    <wp:comment_date>2010-05-02 19:31:39</wp:comment_date>
    <wp:comment_date_gmt>2010-05-02 19:31:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Andrea,

Sorry again for missing Open Spaces II.  Great to hear that everyone enjoyed the day (ook! - WTF?), and that you're planning another one later in the year.  

I'll make the next one, I promise!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>215</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2010-05-06 10:05:09</wp:comment_date>
    <wp:comment_date_gmt>2010-05-06 10:05:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks 
ook is a programming language http://www.dangermouse.net/esoteric/ook.html
Looking forward  to the next coding day  too 
:)
We are thinking of making some virtual meetings, I would apreciate your feedback,please read here http://dublinalt.net/2010/05/03/may-meetup-19th-of-may-bdd/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>213</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>More than a text editor </title>
  <link>http://roundcrisis.com/2010/05/06/more-than-a-text-editor/</link>
  <pubDate>Thu, 06 May 2010 08:00:34 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=566</guid>
  <description/>
  <content:encoded><![CDATA[Recently I started using Visual Studio 2010, if you follow me on twitter you probably know that this hasnt been a nice transition for me (apologies for the cursing btw)  I ve had many crashes, and I m pretty sure I m not alone, not only a quick search in twitter will reflect this (see image below, the only marked twitt is about a fix for something) , but a some of my co-workers had one or another problem.

It would be naive to think all the issues have the same source, and I know that many are related to the plugins ( I use Resharper with xUnit extensions and AnkSvn). What I m trying to say is that this post is not  to bash Visual Studio,  to be fair the IDE is pretty <a href="http://roundcrisis.files.wordpress.com/2010/05/capture.png"><img class="alignleft size-full wp-image-571" title="Twitter search" src="http://roundcrisis.files.wordpress.com/2010/05/capture.png" alt="" width="499" height="555" /></a>flashy, shiny, even amazing.... but you know what I want <strong>options</strong>,  something I can rely on and that I can bend to my will. Lets elaborate on that.

Using resharper means I m used to using shortcuts, templates and whatnot,  I know I should be able to bend an IDE to do what <strong>I want</strong> so I can code faster, be focused on what I m doing<strong>. </strong>On the other hand<strong> </strong>I can also see that having a comon IDE within a group means we can share tricks and learn about each other practises.

So today I saw this <a href="http://blog.wekeroad.com/2010/05/04/do-androids-dream-of-vim" target="_blank">post</a> by Rob Connery and I cant help but wonder, Is Vim the right way to go?, no idea but I know I m ready to give it another try.  However Id iek to set my expectations. I think what I would like is a more modular VS  (where I can turn things off).

Although it s a pain, the <strong>Add Reference Dialog </strong>speed is not my main issue,  it takes so long to add a reference that at least it makes me think "<strong>Do you really want to add that dependecy?</strong>" I would prefer if it wouldnt happen tho.

So, what do I want ouf of my IDE:
<ul>
	<li> To write code, quickly</li>
	<li>to rely on it, if it crashes, updates, looses references that It handles it elegantly</li>
	<li>To get feedback about the code I write  quickly</li>
	<li>yes to  intellisense , I m a terrible typist (maybe I should change that?) and it helps when you have long explicit variable names (sometimes I go overboard with this until I find better names)</li>
	<li>to be able to change the way the code looks</li>
	<li>to format the code to my will, even if it s stupid, I want to be able to try new things</li>
	<li>to be able to do simple <strong>and </strong>complex refactorings easily and that their result is obvious before we event start the operation</li>
	<li>good ctrl+z support</li>
	<li>to leverage what I know, and induce me to do smarter things, after all the IDE has intimate knowledge about the framework I m using</li>
	<li>that I can carry around my settings (shortcuts, templates, etc really easily)</li>
</ul>
am I dreaming? Possibly, but lets see whats possible]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>566</wp:post_id>
  <wp:post_date>2010-05-06 08:00:34</wp:post_date>
  <wp:post_date_gmt>2010-05-06 08:00:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>more-than-a-text-editor</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197492";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-05-06 08:00:34]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>221</wp:comment_id>
    <wp:comment_author><![CDATA[Ruben Bartelink]]></wp:comment_author>
    <wp:comment_author_email>ruben@bartelink.com</wp:comment_author_email>
    <wp:comment_author_url>http://bartelink.com</wp:comment_author_url>
    <wp:comment_author_IP>86.47.235.241</wp:comment_author_IP>
    <wp:comment_date>2010-05-14 09:13:03</wp:comment_date>
    <wp:comment_date_gmt>2010-05-14 09:13:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Only joking! I'm well aware that CR is not the real answer to your requirements as above and know this is a red herring.

Also I know most people that have grown used to R# cant fathom CR, and I know it took me a while (it was worse 5 years when I started using it) too but IMO its worth it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>219</wp:comment_id>
    <wp:comment_author><![CDATA[Ruben Bartelink]]></wp:comment_author>
    <wp:comment_author_email>ruben@bartelink.com</wp:comment_author_email>
    <wp:comment_author_url>http://bartelink.com</wp:comment_author_url>
    <wp:comment_author_IP>86.47.235.241</wp:comment_author_IP>
    <wp:comment_date>2010-05-13 12:23:44</wp:comment_date>
    <wp:comment_date_gmt>2010-05-13 12:23:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Need to ditch R# and switch to CR :P]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>220</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2010-05-14 08:41:33</wp:comment_date>
    <wp:comment_date_gmt>2010-05-14 08:41:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[That is your personal opinion, Up there is mine. <strong>R# FTW </strong> I actually tried CR, too noisy, to much animation, I prefer tools that are a bit more out of the way]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>219</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>On Pair Programming </title>
  <link>http://roundcrisis.com/2010/06/30/on-pair-programming/</link>
  <pubDate>Wed, 30 Jun 2010 22:00:26 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=597</guid>
  <description/>
  <content:encoded><![CDATA[<h3>What is pair programming?</h3>
Its when 2 developers sit down together to write a piece of code. There is one person in the keyboard known as the <strong>driver</strong> and another person looking at the code and commenting about it, known as the <strong> navigator</strong>, these roles can change in time. The idea is that while you are typing you are likely to catch certain things and when you are watching you are to catch other things.
<h3>Why?</h3>
I dont know if this happens to you, but many times, when I m not sure how to solve a problem or when I have a solution to a problem that I m not terribly happy with, I will talk to someone else about it. Then, one of two things happen: whoever I talk to gives me an idea, or as I explain the problem I realised that I missed an important piece of the puzzle and find the solution, the hidden third option is that I don't have a solution but I have more to explore.  Anyway the whole point is that verbalizing the problem,  gives you a different take on it; maybe makes it more real?, as you talk you realise that certain things make no sense, you  ask yourself questions.  <strong>You have more visibility and clarity</strong>

Another more obvious advantages is that <strong>two brains are more than one</strong>, collaboration can get you to really far. More eyes looking at the code will at least avoid silly mistakes, in the better cases it will drive you to better design, never mind the fact that two people will know this code really well, we all know that this is really handy in a team ( we all take holidays, have days when our brains just refuse to work, etc).

When pairing , each of the persons in the pair need to be really involved, there is no distractions,  ( so perhaps take breaks every hour and a half or so) this intensity means to me that its more likely that as a pair there are more angles of the problem that will be covered.
<h3>Whats wrong with it?</h3>
When people are pairing there are a few things I ve noticed that tend to go wrong

1) <strong>One way street</strong>. One of the pair is hogging the control and the navigator is quiet. This is probably the worse thing. the only possible advantage of this is knowledge transfer but I think this kind of pairing does more bad than good. One way to counter act this is using Test driven Ping Pong (see below). But education is key.

If pairing, then try to pair, not to control.

If  pairing try to collaborate you are not just watching a movie.

If things are going to fast ask for slowing down, its not going to get better if you dont understand.

2)<strong> We'll fix it later</strong>. This is when the pair decide to do something below standard. I dont think its a terrible practise but it does leave a "bad taste" because even when the pair decide the task is accomplished , there is stuff left t do. also there is the broken window problem.
<h3>Test Driven Ping Pong</h3>
Given a driver and a navigator, the role changes per test, say we have Alice and Bob, Alice is the driver first, she writes a test, fails, they fix  the code so the test passes, goes green , they come up with some refactorings , then Bob is the driver for the next test and so on. This sounds like a good approach when the developers dont know each other well or they have an ego problem, or they dont know where to start
<h3>Informal Pair Programing</h3>
The navigator and driver roles change whenever is necessary, like when discussing stuff on a whiteboard . This is probably the best way but at the same time it requires the pair to be very involved and request changes often. I think this is more Organic(for lack of a better word) and pleasurable.

Any comments on this? i would really appreciate it particularly from people practicing pair programing often]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>597</wp:post_id>
  <wp:post_date>2010-06-30 22:00:26</wp:post_date>
  <wp:post_date_gmt>2010-06-30 22:00:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>on-pair-programming</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="pair-programming"><![CDATA[pair-programming]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="xp"><![CDATA[xp]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197484";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-06-30 22:00:26]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>229</wp:comment_id>
    <wp:comment_author><![CDATA[Geoff]]></wp:comment_author>
    <wp:comment_author_email>geoff@geoff.me</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>77.246.171.42</wp:comment_author_IP>
    <wp:comment_date>2010-07-01 11:25:42</wp:comment_date>
    <wp:comment_date_gmt>2010-07-01 11:25:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think you're right that the informal approach would help keep both developers involved and alert. I suspect it would be all too easy to zone out a bit while someone else is typing.

Some tool support would be amazing for this kind of thing. I guess you'd want something like each member of the pair having their own visual studio (for example) but have the changes they each make update in real-time. Kind of like a real-time version control system. This way you wouldn't have to pass the keyboard around / shuffle your chairs about all the time.

Do you do pair programming much. I've not seen it done anywhere or really had the opportunity to try it out.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1277996196</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>230</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2010-07-01 15:07:14</wp:comment_date>
    <wp:comment_date_gmt>2010-07-01 15:07:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You d be surprised but sitting together is a great start ( ie momentarily sharing the desk and swapping keyboard ownership every so often)
Tho the nicest way is when you have a pairing station , one machine, 2 keyboards, 2 mouses, and 2 screens, so both people have control . There is some info about them <a href="http://www.google.ie/imgres?imgurl=http://www.lostechies.com/cfs-file.ashx/__key/CommunityServer.Blogs.Components.WeblogFiles/scottcreynolds/IMG_5F00_0561.JPG&amp;imgrefurl=http://www.lostechies.com/blogs/scottcreynolds/archive/2009/11/17/how-we-do-things-the-team-room.aspx&amp;usg=__PhCw-m5FwpicLZdg6uU44tC1Nj8=&amp;h=1200&amp;w=1600&amp;sz=580&amp;hl=en&amp;start=8&amp;sig2=2YP-xMuYmBvv_WgOks1sRQ&amp;um=1&amp;itbs=1&amp;tbnid=-NZTXqcGA4YOCM:&amp;tbnh=113&amp;tbnw=150&amp;prev=/images%3Fq%3Dpairing%2Bstations%2Bpair%2Bprogramming%26um%3D1%26hl%3Den%26sa%3DN%26tbs%3Disch:1&amp;ei=BK0sTJ6yAcujceeXoJUJ" rel="nofollow">here</a> 
and <a href="http://point2blog.files.wordpress.com/2009/12/pairing-station.jpg" rel="nofollow">this</a>]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>229</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1277996836</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>231</wp:comment_id>
    <wp:comment_author><![CDATA[Geoff]]></wp:comment_author>
    <wp:comment_author_email>geoff@geoff.me</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>77.246.171.42</wp:comment_author_IP>
    <wp:comment_date>2010-07-02 07:57:42</wp:comment_date>
    <wp:comment_date_gmt>2010-07-02 07:57:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Cool, well maybe when my team grows beyond 1 person I'll give it a go :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1278057465</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Creating an installer for your XNA games</title>
  <link>http://roundcrisis.com/?p=928</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=928</guid>
  <description/>
  <content:encoded><![CDATA[You are close to finishing your game and start thinking about releasing, you know there are balancing problems and want to hear what your friends and what not have to say about it. but How?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>928</wp:post_id>
  <wp:post_date>2012-01-12 15:22:26</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>If HTML + CSS is an option I can't see why anyone would use XAML</title>
  <link>http://roundcrisis.com/?p=931</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=931</guid>
  <description/>
  <content:encoded><![CDATA[Hi there

For the last while I ve been using WPF and XAML, I am not impressed, take into account that:
<ol>
	<li>These are my first impressions</li>
	<li>I have done a fair bit web dev</li>
	<li>I preferred Delphi UI to WinForms</li>
</ol>
I have been using WPF in the context of existing code that needs to fit into a given structure, so I didn't really have a lot of freedom. However
<ul>
	<li>There is intellisense, kinda helpful, even more from R#</li>
	<li>The fact that you need to rebuild to see changes to just the XAML makes it really painful to use when your code is heavily meta driven</li>
</ul>
Summary

It was]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>931</wp:post_id>
  <wp:post_date>2012-02-01 13:15:33</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Calling methods in C# and their time cost</title>
  <link>http://roundcrisis.com/?p=936</link>
  <pubDate>Thu, 09 Feb 2012 14:45:45 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=936</guid>
  <description/>
  <content:encoded><![CDATA[So... sometimes you wonder how much does it actually cost to call different types of methods in different scenarios. I though 'd write some tests to check that.

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>936</wp:post_id>
  <wp:post_date>2012-02-09 14:45:45</wp:post_date>
  <wp:post_date_gmt>2012-02-09 14:45:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
</item>
<item>
  <title>Why no loops in unit tests</title>
  <link>http://roundcrisis.com/?p=939</link>
  <pubDate>Mon, 13 Feb 2012 10:59:11 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=939</guid>
  <description/>
  <content:encoded><![CDATA[Small post today.

Why you wouldn’t like loops in unit tests? they are nice, in your head they are probably represented as a nice circular shape of some sort, however we are here to talk about tests.

Say you are testing a collection, for simplicity an array, and you have a test like this]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>939</wp:post_id>
  <wp:post_date>2012-02-13 10:59:11</wp:post_date>
  <wp:post_date_gmt>2012-02-13 10:59:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>CQRS/ES Event centric Simplicity at the top. What lies in the bottom?</title>
  <link>http://roundcrisis.com/?p=942</link>
  <pubDate>Tue, 14 Feb 2012 15:01:30 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=942</guid>
  <description/>
  <content:encoded><![CDATA[<p>I’ve been meaning to post something like this for a long while. I ve find it hard to find the correct balance. </p>  <p>I’ve been working with/in a system where we use CQRS/ES. The project evolved from lets try CQS, to it makes sense to use CQRS to CQRS/ES that transition was very interesting. You are forced to focus on intentions and events. At the system design and functionality level the pattern synergy is amazingly elegant and simple. At least from my experience, if you have one or many complex Domains this is one of the options you should really consider. </p>  <p>Lets assume you have started digging through DDD/CQRS mailing list emails and whatever posts you can put your hands on. The reality will probably be that you will have about 1 Million questions, so what you will probably do is attempt a crude implementation understand a bit and maybe even get enough traction to do some project using it. What happens then?</p>  <p>Then you realise of all the things that you don’t know and it’s really scary. </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>942</wp:post_id>
  <wp:post_date>2012-02-14 15:01:30</wp:post_date>
  <wp:post_date_gmt>2012-02-14 15:01:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="cqrs"><![CDATA[cqrs]]></category>
  <category domain="category" nicename="ddd"><![CDATA[ddd]]></category>
</item>
<item>
  <title>Why learning games programming makes you a better programmer</title>
  <link>http://roundcrisis.com/?p=1024</link>
  <pubDate>Tue, 28 Aug 2012 08:43:56 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1024</guid>
  <description/>
  <content:encoded><![CDATA[<ol>   <li>It makes you think in&#160; a completely different way about programming, instead of thinking reactively you need to make sure everything is ok all the time</li>    <li>Makes you grok the game loop</li>    <li>Makes you understand the UI Thread and paralellism to higher order</li>    <li>gets you closer to bare metal</li>    <li>You get have to understand performance all low level constructs</li>    <li>You learn about physics and how to implement some of it</li>    <li>You learn about maths, trigonometry and calculus</li> </ol>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1024</wp:post_id>
  <wp:post_date>2012-08-28 08:43:56</wp:post_date>
  <wp:post_date_gmt>2012-08-28 08:43:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Single Responsibility Principle in Games Engines, is it even possible?</title>
  <link>http://roundcrisis.com/?p=1075</link>
  <pubDate>Fri, 24 May 2013 10:24:55 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1075</guid>
  <description/>
  <content:encoded><![CDATA[<p>In the Single Responsibility Principle (SRP), a reason to change is defined as a responsibility. SRP states, “An object should have only one reason to change”. If an object has more than one reason to change then it has more than one responsibility and is in violation of SRP.</p>  <p>So, lets look at this class</p>  <p>//some class from engine code</p>  <p>// attempt to refactor so that it follows SRP and it’s testable</p>  <p>&#160;</p>  <p><strong>Reference</strong></p>  <p><a href="http://www.objectmentor.com/resources/articles/srp.pdf">http://www.objectmentor.com/resources/articles/srp.pdf</a></p>  <p><a href="http://lostechies.com/seanchambers/2008/03/15/ptom-single-responsibility-principle/">http://lostechies.com/seanchambers/2008/03/15/ptom-single-responsibility-principle/</a></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1075</wp:post_id>
  <wp:post_date>2013-05-24 10:24:55</wp:post_date>
  <wp:post_date_gmt>2013-05-24 10:24:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="engine"><![CDATA[engine]]></category>
  <category domain="post_tag" nicename="game-engines"><![CDATA[game engines]]></category>
  <category domain="category" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="srp"><![CDATA[SRP]]></category>
</item>
<item>
  <title>Duality </title>
  <link>http://roundcrisis.com/?p=1137</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=1137</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1137</wp:post_id>
  <wp:post_date>2013-09-05 10:48:12</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>When  "Could not load file or assembly" happens</title>
  <link>http://roundcrisis.com/2010/07/13/when-could-not-load-file-or-assembly/</link>
  <pubDate>Tue, 13 Jul 2010 22:33:22 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=613</guid>
  <description/>
  <content:encoded><![CDATA[<div id="_mcePaste">So I was getting an " Could not Load File or Assembly" error, even thou I was pretty certain I was referencing the right dlls in the correct folders. What could this error possibly mean?</div>
<div>The actual error I had was:</div>
<blockquote>
<div>System.IO.FileLoadException: Could not load file or assembly 'Moq, Version=2.6.1014.1, Culture=neutral, PublicKeyToken=69f491c39445e920' or one of its dependencies.</div></blockquote>
<div>Some things I checked:</div>
<div>
<ul>
	<li>Maybe  I dont have the moq.dll assembly, but it was there.</li>
	<li>Then I checked  the assembly version, my moq.dll was 4.x (the error stated 2.6.x was required), so there is a difference in the expected versions, why?</li>
	<li>Checked all projects in the solution, all the ones using Moq.dll where explicitly pointing at 4.x</li>
	<li><a href="http://www.red-gate.com/products/reflector/" target="_blank">Reflector</a> show time. I was using moq.contrib.dll on the project that was failing, and since it makes sense that such library would depend on moq, it was worth checking it out, this is what I saw</li>
</ul>
</div>

[caption id="attachment_616" align="aligncenter" width="242" caption="Reflector Screenshot"]<a href="http://roundcrisis.files.wordpress.com/2010/07/capture.png"><img class="size-medium wp-image-616 " title="Reflector Screenshot" src="http://roundcrisis.files.wordpress.com/2010/07/capture.png?w=242" alt="" width="242" height="300" /></a>[/caption]

<div>This means that moq.contrib.dll did indeed depend on moq, so I just needed to find a version of it that pointed to the right assembly, I was lucky because I had a set of dlls that work, if you are not so lucky, get latest from the <a href="http://code.google.com/p/moq-contrib/" target="_blank">moq.contrib google code</a> and simply run the Build.cmd and you are all set to go (you can replace the moq.dll dependecy if they have moved on).</div>
<div>On the way I found some other interesting things</div>
<div>
<ul>
	<li> Like <a href="http://social.msdn.microsoft.com/Forums/en/clr/thread/63fe67b6-c3f9-4ae1-b787-b57418326f80" target="_blank">this</a> thread, basically it said that this was possibly a compiler bug. I thought damn a dead end, but it wasn't :).</li>
	<li>A tool to find out how the dll binding happen callled <strong>FusLogw.exe</strong></li>
</ul>
</div>
<div><strong>FusLogw.exe</strong></div>
<div id="_mcePaste">Also known as the Assembly Binder Log Viewer, awesome right? :D</div>
<div id="_mcePaste">Where is it?  I searched online and the tool seems to move a lot in differnt versions of Windows, In xp</div>
<div id="_mcePaste">it could be here: <strong>C:\Program Files\Microsoft SDKs\Windows\v6.0A\bin\fuslogvw.exe</strong></div>
<div id="_mcePaste">In my windows 7 install I found it here: <strong> C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\bin&gt;FUSLOGVW.exe</strong></div>
<div id="_mcePaste">Oh yeah and you need to run it from the command line as an Administrator</div>
<div id="_mcePaste">It might seem obvious, but you need to refresh after you run something that fails , it is, after all a log viewer</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>613</wp:post_id>
  <wp:post_date>2010-07-13 22:33:22</wp:post_date>
  <wp:post_date_gmt>2010-07-13 22:33:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>when-could-not-load-file-or-assembly</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="fuslogw"><![CDATA[fuslogw]]></category>
  <category domain="post_tag" nicename="moq"><![CDATA[moq]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197483";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-07-13 22:33:22]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>twitter_cards_summary_img_size</wp:meta_key>
    <wp:meta_value><![CDATA[a:6:{i:0;i:470;i:1;i:582;i:2;i:3;i:3;s:24:"width="470" height="582"";s:4:"bits";i:8;s:4:"mime";s:9:"image/png";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Another way of generating generic types</title>
  <link>http://roundcrisis.com/2010/07/26/another-way-of-generating-generic-types/</link>
  <pubDate>Mon, 26 Jul 2010 19:39:15 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=633</guid>
  <description/>
  <content:encoded><![CDATA[Kick post on Types, nothing outrageous, but this was just a construct that I never used too much.

The other day a collegue and we got stuck on a method similar to this
<blockquote>void DoStuff(Type <strong>type</strong>)
{
var iInterface = typeof(ISomethingAmazing);
Type genericType = //how to get ISomethingAmazing&lt;<strong>type</strong>&gt;

//do more things
}</blockquote>
and well I didn't know but you can do this
<blockquote>void DoStuff(Type <strong>type</strong>)
{
var iInterface = typeof(ISomethingAmazing);
Type genericType = iInterface.MakeGenericType(new Type[] { <strong>type </strong>});

//do more things
}</blockquote>
Why would you want this?
well say for example, you are working with a container and need to get all the ISomethingAmazing of whatever your type is
Particularly handy if you are using a handlers or factories a lot.

What happened?

Basically we just had information about the types we wanted but at compile type we didnt know the types, this is a away to return a runtime type even when you dont know what that type is.

I hope this is helpful for someone

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>633</wp:post_id>
  <wp:post_date>2010-07-26 19:39:15</wp:post_date>
  <wp:post_date_gmt>2010-07-26 19:39:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>another-way-of-generating-generic-types</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
  <category domain="post_tag" nicename="generics"><![CDATA[generics]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197483";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-07-26 19:39:15]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>2010 Events Coming Up</title>
  <link>http://roundcrisis.com/2010/08/23/2010-events-coming-up/</link>
  <pubDate>Mon, 23 Aug 2010 21:49:09 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=652</guid>
  <description/>
  <content:encoded><![CDATA[There is a bunch of things happening in Dublin in the next few months, I figured it would be handy to push a post on it.

30th of august - <a href="http://www.mtug.ie/Home/tabid/38/ctl/Details/Mid/369/ItemID/69/Default.aspx?ContainerSrc=[G]Containers/_default/No+Container" target="_blank">Windows Phone 7</a> . A joint event between MTUG and Dublin Alt.Net - <a href="http://www.mtug.ie/Home/tabid/38/ctl/Details/Mid/369/ItemID/69/Default.aspx?ContainerSrc=[G]Containers/_default/No+Container" target="_blank">Registration and Details</a>

9th of September - Promiscuous Developer Meetup (location not confirmed) developers of different languages meetup and try to find the answer to life, the universe and everything, maybe it wont be 42 :) sounds kinda interesting. More info <a href="http://developermeetup.wordpress.com/2010/07/30/promiscuous-developer-meetup/" target="_blank">here</a>.

11th of September - <a href="http://codingday.org/" target="_blank">Open Spaces Coding Day III</a> - A full day of coding on whatever topic is decided on the day , the last event was a really cool thing to do, learned loads. Hopefully this one will work out just as well.

25th of September - <a href="http://ossbarcamp.com/" target="_blank">OSSBarcamp </a>- The classic OSS event, to be held in UCD. Registration and details <a href="http://ossbarcamp.com/" target="_blank">OSSBarcamp</a>.

9th Of October - <strong>DDD Dublin</strong>. An event where there are a lot of developer presentations, presented by developers. The talks are selected by vote (ie not the organizers) , for more info on the series of events, please check <a href="http://www.developerdeveloperdeveloper.com/home/" target="_blank">here</a>; the events  in Scotland and Reading in previous years were really interesting , so its worth taking note of the date. I ll update this post when there is more info.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>652</wp:post_id>
  <wp:post_date>2010-08-23 21:49:09</wp:post_date>
  <wp:post_date_gmt>2010-08-23 21:49:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2010-events-coming-up</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1384532307;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-08-23 21:49:09]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Irish Open Spaces Coding Day III Retrospective</title>
  <link>http://roundcrisis.com/2010/09/12/irish-open-spaces-coding-day-iii-retrospective/</link>
  <pubDate>Sun, 12 Sep 2010 15:40:31 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/2010/09/12/irish-open-spaces-coding-day-iii-retrospective/</guid>
  <description/>
  <content:encoded><![CDATA[<p>Yesterday we had the 3rd IOSCD. It was great fun, the code is all available <a title="IOSCD" href="http://www.assembla.com/code/ioscd/subversion/nodes" target="_blank">here</a>.</p>  <p>The sessions</p>  <p><a href="http://roundcrisis.files.wordpress.com/2010/09/imag0142.jpg"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="IMAG0142" border="0" alt="IMAG0142" src="http://roundcrisis.files.wordpress.com/2010/09/imag0142_thumb.jpg" width="148" height="244" /></a>&#160; </p>  <p>&#160;</p>  <p>and</p>  <p><a href="http://roundcrisis.files.wordpress.com/2010/09/imag0144.jpg"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="IMAG0144" border="0" alt="IMAG0144" src="http://roundcrisis.files.wordpress.com/2010/09/imag0144_thumb.jpg" width="148" height="244" /></a></p>  <p>It was great to have some hardware to play with, people really seem to get a good kick out of that, there was a Netduino and two Lego NXT.</p>  <p>I m hoping that other people will tell us about their experience yesterday (hint hint ;) ). </p>  <p>Some of the sessions included: Ruby on rails app for the book club assistance (called and_on_that_basis , no idea why), netdruino hacking with some sort of Rx , and then using Rx over the wire, finally i was working on something called Code Shapes.</p>  <p>Just starting a tool(?) that will analyse each class and draw a diagram:</p>  <ul>   <li>Hollow Ellipse - public method </li>    <li>Shaded Ellipse - protected, private, or package private method </li>    <li>Rectangle - field </li>    <li>Line - a use-dependency from a method to a method or a field.</li> </ul>  <p> as per <a href="http://michaelfeathers.typepad.com/michael_feathers_blog/2010/08/testng-and-what-wed-like-code-to-be.html" target="_blank">Michael Feather post</a> on this. </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>670</wp:post_id>
  <wp:post_date>2010-09-12 15:40:31</wp:post_date>
  <wp:post_date_gmt>2010-09-12 15:40:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>irish-open-spaces-coding-day-iii-retrospective</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="category" nicename="code_shapes"><![CDATA[code_shapes]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197480";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-09-12 15:40:31]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Reflection – Create an instance of a class through a protected method</title>
  <link>http://roundcrisis.com/2010/09/16/reflection-create-an-instance-of-a-class-through-a-protected-method/</link>
  <pubDate>Thu, 16 Sep 2010 20:01:04 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=674</guid>
  <description/>
  <content:encoded><![CDATA[I had a bit of trouble getting to this, so for self reference more than anything, I thought I d post about it.

Given the following class
<pre>	
    public class MyClass	
   {		
           private string _name;

           public string Name { get { return this._name;}}

           protected MyClass(string name)
          {
               _name = name;		
          }
  }
</pre>
I thought that the following would be the way to create an instance of it:
<pre>
Activator.CreateInstance(typeof(MyClass), BindingFlags.NonPublic, null, new object[] { "MyName" }, CultureInfo.CurrentCulture);
</pre>
However it throws a MissingMethodException: Constructor on type 'ReflectionCreateInstance.MyClass' not found. However if we add the Binding Flag for instance then it works.
<pre>	
[Fact]
public void When_creating_with_activator_Must_use_apropriate_binding_flags()
{
	string myname = "MyName";

	var myClass = (MyClass)Activator.CreateInstance(
					typeof(MyClass), 
					BindingFlags.Instance| BindingFlags.NonPublic, 
					null, 
					new object[] { myname }, 
					CultureInfo.CurrentCulture);

	Assert.Equal(myname, myClass.Name);
}	
</pre>
<pre><span style="font-family:'Trebuchet MS';">If you try this with <em>type.GetConstructor</em> or <em>type.GetConstructors </em>the result is the same. </span></pre>
<pre><span style="font-family:'Trebuchet MS';">Checking the <a href="http://msdn.microsoft.com/en-us/library/system.reflection.bindingflags.aspx" target="_blank">documentation for BindingFlag</a>.Instance I find </span></pre>
<pre><a href="http://roundcrisis.files.wordpress.com/2010/09/capture.png"><img style="display:inline;border-width:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2010/09/capture_thumb.png" border="0" alt="Capture" width="674" height="370" /></a></pre>
<pre>So it was a case of RTFM I guess :D</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>674</wp:post_id>
  <wp:post_date>2010-09-16 20:01:04</wp:post_date>
  <wp:post_date_gmt>2010-09-16 20:01:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>reflection-create-an-instance-of-a-class-through-a-protected-method</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="reflection"><![CDATA[reflection]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197480";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-09-16 20:01:04]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>twitter_cards_summary_img_size</wp:meta_key>
    <wp:meta_value><![CDATA[a:6:{i:0;i:674;i:1;i:370;i:2;i:3;i:3;s:24:"width="674" height="370"";s:4:"bits";i:8;s:4:"mime";s:9:"image/png";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Projects Organization – How to organize assemblies in your local machine to avoid nightmares</title>
  <link>http://roundcrisis.com/2010/09/22/projects-organization-how-to-organize-assemblies-in-your-local-machine-to-avoid-nightmares/</link>
  <pubDate>Wed, 22 Sep 2010 19:11:20 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=690</guid>
  <description/>
  <content:encoded><![CDATA[This is just how I organize folders and projects on my machine, there are endless possibilities , but I saw someone searching for it online and it did took me a long while before I settled on this, so I thought I would blog about it.

This can be a good or bad way of organizing, I think it depends on the kind and number of projects you are working on

Imagine you have a folder that contains the following folders
<ul>
	<li><strong>code</strong> (Real code, shipable, or company proof of concepts with its own repo)</li>
	<li><strong>spike </strong>(test to see if something works, Proof of concepts very basic)</li>
	<li><strong>third-party</strong> (OSS libraries and frameworks, etc)</li>
</ul>
Inside my <strong>code</strong> folder, each solution has it’s own <strong>Lib</strong> or <strong>Libs</strong> or <strong>Libraries</strong> folder (eg One Lib folder per solution ). The story is very different in <strong>spike </strong>since I put projects there for stuff I never ever want to ship then I have a shared <strong>Lib</strong> or <strong>Libs</strong> or <strong>Libraries</strong> folder where I put everything I ever needed. In third party I leave as I got from source control .

Inside the Libraries folder I mostly try to keep a folder per project and inside a folder per version, something similar to this

<a href="http://roundcrisis.files.wordpress.com/2010/09/capture2.png"><img style="display:inline;border:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2010/09/capture_thumb1.png" border="0" alt="Capture" width="236" height="149" /></a>

if in doubt copy the assembly, disk space is cheap.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>690</wp:post_id>
  <wp:post_date>2010-09-22 19:11:20</wp:post_date>
  <wp:post_date_gmt>2010-09-22 19:11:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>projects-organization-how-to-organize-assemblies-in-your-local-machine-to-avoid-nightmares</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="best-practices"><![CDATA[Best Practices]]></category>
  <category domain="post_tag" nicename="dll-assemblies-layout"><![CDATA[dll assemblies layout]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197482";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-09-22 19:11:20]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Manos de Mono – Quick overview</title>
  <link>http://roundcrisis.com/2010/10/13/manos-de-mono-quick-overview/</link>
  <pubDate>Wed, 13 Oct 2010 20:00:45 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=704</guid>
  <description/>
  <content:encoded><![CDATA[I heard about this new web framework the other day, the code its available on <a href="http://github.com/jacksonh/manos" target="_blank">github/jacksonh/manos</a> the main interesting thing I heard about it were:
<ul>
	<li>runs on Mono</li>
	<li>Has its own server</li>
	<li>Has no dependecies on Asp.net</li>
	<li>the main goal of mono is to simplify web application development</li>
	<li>routing appears to be simpler ( to use and test)</li>
	<li>command line for managing your apps (deployment included)</li>
</ul>
At this point, I wanted to see some code, I went to the example on github and I was pleasantly surprised
<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:a41bfa07-bce1-4127-97d1-9eb57436e61c" class="wlWriterEditableSmartContent" style="display:inline;float:none;margin:0;padding:0;">[sourcecode language="csharp" padlinenumbers="true" collapse="false"]
//
	// A mango application is made of MangoModules and MangoApps
	// There really isn't any difference between a Module and an App
	// except that the server will load the MangoApp first. A mango
	// application can only have one MangoApp, but as many MangoModules
	// as you want.
	//
	public class MangoProject : MangoApp {

		public MangoProject ()
		{
			//
			// Routing can be done by using the Get/Head/Post/Put/Delete/Trace
			// methods. They take a regular expression and either a method
			// or another module to hand off processing to.
			//
			// The regular expressions come after the method/module, because
			// Mango uses params to allow you to easily register multiple
			// regexs to the same handler
			//
			Get (Home, &quot;Home&quot;);

			//
			// The Route method will hand off all HTTP methods to the supplied
			// method or module
			//
			Route (new DocsModule (), &quot;Docs/&quot;);
		}

		//
		// Handlers can be registered with attributes too
		//

		[Get (&quot;About&quot;)]
		public static void About (MangoContext ctx)
		{
			//
			// Templates use property lookup, so you can pass in
			// a strongly typed object, or you can use an anonymous
			// type.
			//
			RenderTemplate (ctx, &quot;about.html&quot;, new {
				Title = &quot;About&quot;,
				Message = &quot;Hey, I am the about page.&quot;,
			});
		}

		public static void Home (MangoContext ctx)
		{
			RenderTemplate (ctx, &quot;home.html&quot;, new {
				Title = &quot;Home&quot;,
				Message = &quot;Welcome to the Mango-Project.&quot;
			});
		}
	}
[/sourcecode]

</div>
<ul>
	<li>Like the module and App ideas</li>
	<li>like the simplicity of the code above</li>
	<li>seems to work at a slightly lower level of abstraction than MVC but I can live with that</li>
	<li>Interesting that it uses it's own template engine, the syntax is nice, but I wonder why not spark, razor, nhaml, nvelocity. After all, It would be cool to use what I know already. Will have to find out.</li>
</ul>
Will have to do some more research on it]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>704</wp:post_id>
  <wp:post_date>2010-10-13 20:00:45</wp:post_date>
  <wp:post_date_gmt>2010-10-13 20:00:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>manos-de-mono-quick-overview</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="manos_de_monos-web-web-development"><![CDATA[manos_de_monos web web-development]]></category>
  <category domain="category" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <category domain="category" nicename="web-development"><![CDATA[web-development]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364478871;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-10-13 20:00:45]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Open Source and you - Resources</title>
  <link>http://roundcrisis.com/2010/10/16/open-source-and-you-resources/</link>
  <pubDate>Sat, 16 Oct 2010 11:52:48 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/2010/10/16/open-source-and-you-resources/</guid>
  <description/>
  <content:encoded><![CDATA[<p>I was invited to give a talk on Open Source in DIT to a group of students. Link to slides <a href="http://www.slideshare.net/roundcrisis/open-source-and-you-5456161">http://www.slideshare.net/roundcrisis/open-source-and-you-5456161</a>.</p>  <p>However here some interesting links:</p>  <ul>   <li>35 years of Open Source <a href="http://vospe.com/2010/09/22/a-brief-history-35-years-of-open-source-software-a/">http://vospe.com/2010/09/22/a-brief-history-35-years-of-open-source-software-a/</a></li>    <li>The Open Source Initiative <a href="http://www.opensource.org/">http://www.opensource.org/</a></li>    <li>List of Open Source Licenses <a href="http://www.opensource.org/licenses/category">http://www.opensource.org/licenses/category</a> and more here <a href="http://en.wikipedia.org/wiki/Comparison_of_free_software_licenses">http://en.wikipedia.org/wiki/Comparison_of_free_software_licenses</a></li>    <li>Reddit’s Open Source <a href="http://www.reddit.com/r/opensource/">http://www.reddit.com/r/opensource/</a></li> </ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>709</wp:post_id>
  <wp:post_date>2010-10-16 11:52:48</wp:post_date>
  <wp:post_date_gmt>2010-10-16 11:52:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>open-source-and-you-resources</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="oss"><![CDATA[OSS]]></category>
  <category domain="post_tag" nicename="oss"><![CDATA[OSS]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1366186991;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c7a4b7d2506e6e586d2ca282be115287</wp:meta_key>
    <wp:meta_value><![CDATA[<div class="embed-slideshare"><iframe src="http://www.slideshare.net/slideshow/embed_code/5456161" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="http://www.slideshare.net/roundcrisis/open-source-and-you-5456161" title="Open source and you" target="_blank">Open source and you</a> </strong> from <strong><a href="http://www.slideshare.net/roundcrisis" target="_blank">Andrea Magnorsky</a></strong> </div></div>]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_69d1d40f1102aa084de70f10a042e8ea</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_81b1f0e9280204e5214ad5ffd4c4e7fb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a0cfce44bc2d8d37e0d0f003d1e5b2ba</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_568dd87d1779e089ff44797ca743176e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3b80940a31b4e655b54b39638be88295</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c4e771ba5eb7203a47e6c33dce678bcf</wp:meta_key>
    <wp:meta_value><![CDATA[<div class="embed-slideshare"><iframe src="http://www.slideshare.net/slideshow/embed_code/5456161" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="http://www.slideshare.net/roundcrisis/open-source-and-you-5456161" title="Open source and you" target="_blank">Open source and you</a> </strong> from <strong><a href="http://www.slideshare.net/roundcrisis" target="_blank">Andrea Magnorsky</a></strong> </div></div>]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_930ae82083c5251d9a2a0421d4ee0531</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_12c90b232b64992e964d91bb1376d569</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0ccf42f89d64da2e12482706bb220ed4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b02ed2962918233eb2797778e9f07a73</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f3119a0a11b39182598b5d3e4f6064d1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-10-16 11:52:48]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>260</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2010-10-18 10:50:43</wp:comment_date>
    <wp:comment_date_gmt>2010-10-18 10:50:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[BTW <a href="http://bit.ly/917PSZ" rel="nofollow">Jeremie </a>pointed out that , no FOSS licence explicitly prevents you from making a commercial soft , I ll update the slides later. As far as I understand, that means is that you can release commercial software with , for example GPL, however you need to publish the source and the modifications you have made to it. 
Cheers]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1287399043</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>7L7W - Scala Day 1</title>
  <link>http://roundcrisis.com/2010/10/31/7l7w-chapter-4-review-scala-day-1/</link>
  <pubDate>Sun, 31 Oct 2010 15:49:58 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/2010/10/31/7l7w-chapter-4-review-scala-day-1/</guid>
  <description/>
  <content:encoded><![CDATA[In the Book Club, we are reading <a href="http://www.pragprog.com/titles/btlang/seven-languages-in-seven-weeks" target="_blank">7 Languages in 7 Weeks</a> (for more info on the book club go to <a href="http://groups.google.com/group/dublinaltnet" target="_blank">Dublin Alt.Net mailing list</a>) so far a really awesome book, Its helping me have a quick view of not only different languages, but also different programing paradigms. Which is really refreshing, but hard. The thing that I like the most about the book so far , is that you do much more than a hello world, but of course, you can learn in depth, however, the author makes a really good job of explaining what’s at the core of each language, sometimes, just trying to really grasp that is a tiny bit hard , when  it’s a paradigm you are unfamiliar with it, but the effort is well worth it.

Anyway, since I haven’t been able to the last two meet ups, I thought I’d do a second read of the Scala chapter and put together some notes. Please note I m writing the notes as I read.

- Scala is a hybrid language (a mix of OO and functional)
- Hints that its a different kind of language
- Runs on the JVM, though given the state of Java, not sure that is any kind of insurance. Scala can use Java libraries natively, just like Iron* languages , can use .net libraries directly
- Statically typed
- type inference (like c#? –&gt; review)
- functional concepts, like c#? it would be awesome if it added some native support for immutable types
- Support immutable types, but its got some modifier ( need to check this out more in depth)
- actors

Scala is a general purpose language, interesting that it seems to fit well many scenarios because of this OO, Functional mix
Type inference seems to be not so strong
Principles of functional programming that apply to Scala:
- programs are made of functions
- functions return a value
- given the same input, a function will return the same output
- side effect free

<span style="color:#0000ff;">val</span> is immutable <span style="color:#0000ff;">var</span> not .... Likes

There is a full page on the book dedicated to somewhat clarifying strong vs weak and static vs dynamic  languages. I mostly agree with his points there.

My first impression when seeing the language was that it reminded me more to python than to java, maybe it was <span style="color:#0000ff;font-family:Courier New;"><strong>def</strong></span> .
<ul>
	<li>Visibility of <span style="text-decoration:line-through;">methods,</span> functions. Public is default</li>
	<li>Support for tuples and ranges . In purely functional languages, tuples are used as objects. You can do multi value assignment with tuples</li>
	<li>Constructors. I like Scala’s  syntax and default</li>
	<li>Object instances are interesting, at first I was thinking they were like static classes in C#, but apparently not quite. As far as I understand, an object declaration in Scala is basically a singleton instance of a class definition.  However, in C# a static class is a class that can be accessed and used, without creating an instance. That makes me think that there is a cost associated with the instantiation, but I cant see any other difference. (comments on this would be appreciated)</li>
	<li><span style="color:#0000ff;">traits</span>. Like an interface and an implementation all in one, generally focusing on a single concern, well that’s what the book say, however I can’t see here how you do to declare a trait separetly</li>
</ul>
As Part of the exercise of Day 1 you need to find a comparison between Java and Scala(I found <a href="http://blog.lostlake.org/index.php?/archives/26-5-Things-a-Java-developer-needs-to-know-about-Scala.html" target="_blank">this</a>), one of the interesting things I learned while checking that out is that XML is supported natively, I also liked the point on moving to a more functional style of programming slowly, but with a nicer syntax.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>711</wp:post_id>
  <wp:post_date>2010-10-31 15:49:58</wp:post_date>
  <wp:post_date_gmt>2010-10-31 15:49:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>7l7w-chapter-4-review-scala-day-1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364553811;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-10-31 15:49:58]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>What is Command Query Responsibility Segregation (CQRS ) and other related terms - part 1</title>
  <link>http://roundcrisis.com/2010/11/17/what-is-command-query-responsibility-segregation-cqrs-and-other-related-terms-part-1/</link>
  <pubDate>Wed, 17 Nov 2010 22:19:37 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=723</guid>
  <description/>
  <content:encoded><![CDATA[I m preparing for a talk on CQRS and I though I’d support it with a series of posts on the subject. I’d love to get some feedback on this and all the following blog posts. (where I ll be possibly correcting stuff i say here, I can’t promise)

So, I decided to start at the beginning: definitions. When I started to learn about CQRS I just looked at a good few videos, read a bunch of blog posts and then dived into every code example I could find, and then I m working on a system that uses these principles. However, I wanted to roll back and see if I can somewhat formalise what I’ve learned so far. Starting with definitions
<h2>What is CQRS?</h2>
Based on <a href="http://codebetter.com/blogs/gregyoung/archive/2010/02/16/cqrs-task-based-uis-event-sourcing-agh.aspx" target="_blank">this blog post</a> and <a href="http://codebetter.com/blogs/gregyoung/archive/2009/08/13/command-query-separation.aspx" target="_blank">others</a> , the consensus is something like: CQRS is a pattern that describes the separation of command messages , they change state, from query messages that read state.

Please note this is a pattern (i.e. not an architecture) . if you look around online you ll find that some people seem to see CQRS as a software architecture, it makes sense that this is confusing, I wonder if the “term” evolved so much that it lost its meaning, what most people refer to as CQRS is actually a combination of a good bunch of patterns that work well together.

CQRS is normally used with other patterns such as event sourcing, messaging patterns, task based uis, etc. I’d like to make an emphasis on the guideline bit, for me this is a powerful word, it tells me, something like, paint it some shade of yellow, but I have the choice to use the yellow that makes the room the way I need it to be.

<a href="http://domaindrivendesign.org/books3#DDD" target="_blank"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;float:left;padding-top:0;border-width:0;" src="http://farm4.static.flickr.com/3068/3072942016_48ed5f0cac.jpg" border="0" alt="" width="173" height="130" align="left" /></a>Before I started looking at CQRS I was unclear about the relationship between an Aggregate root and the services that serviced it or worked on it. Once I started looking at samples of applications based on CQRS with ES, which was about the time we finished reading the DDD Blue DDD Bible, then it all became clear.  I think the main thing was that the boundaries of the aggregates and the boundaries of each domain were more tangible and made more sense.

Also if using CQRS, you ll find that your aggregate roots change shape, i.e. there are no public properties, at the very least you ll have no public setters, and all the methods in the aggregate sound more like actions, if you have methods such as AsDto(), that definitely means you are doing something wrong. Also you are loosing all properties that you needed for the read side of things, for example if you had an Order aggregate root, do you really need that OrderItems collection? you have access to that collection through the OrderQueryService.

The term CQRS, evolved from CQS(Command Query Separation) there is a CQS definition from  Meyer, that is very similar but it’s separating methods that change state, since the emphasis is on messages for CQRS, this was an important distinction.[<a href="http://codebetter.com/blogs/gregyoung/archive/2009/08/13/command-query-separation.aspx" target="_blank">ref</a>]

To prepare for the talk I m also preparing an example (more later), the interesting thing is that, I find that using CQRS and Event Sourcing, I find myself asking questions about the system and the domain, and that is great, because it makes you focus on what the system should do, not the how.

That brings me to another important definition.
<h2>What is Event Sourcing?</h2>
Event sourcing means that you capture changes to an application state as a sequence of events (<a href="http://martinfowler.com/eaaDev/EventSourcing.html" target="_blank">definition by Fowler</a>) . Imagine most systems your worked with up to now, If you had a customer, and they moved, you would probably go to the user interface (web or whatever), go to some sort of customer edit screen, change the details, and thats it, most likely this would trigger an update operation in a normalized database, and unless there was a specific requirement, you’ve not only lost the previous value of the address, also, you dont know if the customer actually moved or if the address was incorrect, so you are loosing history and intent, two very valuable assets.

An important detail about this way of storing data is that its an <strong>append only model </strong>, because you are only adding, the write operation its simpler, this means it takes less time. Another consequence of an append only model is that to change something, we would apply compensating actions.  Interestingly, once the events are stored they are immutable.

If this is such a great way to store data then how come we are not using it everywhere? you might ask. Well there is the problem of having to replay all events to build an aggregate root each time you need to work on it, and hey, what if it’s a very busy one, and there are millions of events to replay. For that, we would use snapshots, i.e. every so often we would record the current state of the aggregate root as is and then when we need to get the aggregate root, we would have  to find the latest snapshot, and then replay any outstanding events to get to up to date. The real culprit is the fact that selecting the top 3 orders where the customer name is Bob, is kind of hard. However, since we are using Event sourcing on the write side and we   might just get away with it .

Event Sourcing is a big theme, the Event store is one of the most complex parts of using CQRS/ES. There are a few open source implementations out there. <a href="http://jonathan-oliver.blogspot.com/2010/07/cqrs-event-store.html" target="_blank">Olivers</a> comes to mind
<h3>References and Sources</h3>
<a href="http://codebetter.com/blogs/gregyoung/archive/2010/02/13/cqrs-and-event-sourcing.aspx" target="_blank">CQRS and Event Sourcing – Gregg Young</a>

<a href="http://www.udidahan.com/2009/12/09/clarified-cqrs/" target="_blank">Clarified CQRS – Udi Dahan</a>

<a href="http://domaindrivendesign.org/" target="_blank">Domain Driven Design Website</a>

<a href="http://codebetter.com/blogs/gregyoung/archive/2009/08/13/command-query-separation.aspx" target="_blank">Command Query Separation – Gregg Young</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>723</wp:post_id>
  <wp:post_date>2010-11-17 22:19:37</wp:post_date>
  <wp:post_date_gmt>2010-11-17 22:19:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-is-command-query-responsibility-segregation-cqrs-and-other-related-terms-part-1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="cqrs"><![CDATA[cqrs]]></category>
  <category domain="post_tag" nicename="cqrs"><![CDATA[cqrs]]></category>
  <category domain="category" nicename="ddd"><![CDATA[ddd]]></category>
  <category domain="post_tag" nicename="ddd"><![CDATA[ddd]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364602935;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-11-17 22:19:37]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>StoryQ Review</title>
  <link>http://roundcrisis.com/2010/11/12/storyq-review/</link>
  <pubDate>Fri, 12 Nov 2010 15:02:09 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=724</guid>
  <description/>
  <content:encoded><![CDATA[We are evaluating BDD frameworks at the moment and I m going through <a href="http://storyq.codeplex.com/" target="_blank">StoryQ</a>.

Note:
<ul>
	<li>Internal DSL for BDD, for me this means I can discover a lot by just following the API (ie its got a nice fluent API)</li>
	<li>The Code for adding a story is very simple (example below)</li>
	<li>Readable and nicely formatted report output</li>
	<li>Supports Nunit, xUnit and MSTests</li>
	<li>if using xUNit there is no support for incomplete tests ( ie if you are using CI it will break the build) UPDATE: there is a way since xUnit 1.7</li>
	<li>Also you need to override the settings with your own exception builder.</li>
	<li>I had one of those Doh! moments because I setup the story and the scenario with the Given().When().Then() and then I called the Execute method, that was not going to work… :(</li>
	<li>Can report in various format, the report shows up on resharper or in an more html way.</li>
	<li>There is a wpf app that converts gherkin and it generates the StoryQ test.( couldn’t try because the app failed, I think it s because of a dodgy build I have but will find out and report later)</li>
	<li>Seems to support well the idea of many scenarios per story within the same file, which is cool.</li>
	<li>Good to keep in mind not to use underscores in method names <a href="http://storyq.codeplex.com/Thread/View.aspx?ThreadId=218277" target="_blank">Link</a></li>
</ul>
So far so good, if there is anything else noteworthy I ll update.

<a href="http://roundcrisis.files.wordpress.com/2010/11/sq.png"><img style="display:inline;border:0;" title="sq" src="http://roundcrisis.files.wordpress.com/2010/11/sq_thumb.png" alt="sq" width="238" height="91" border="0" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>724</wp:post_id>
  <wp:post_date>2010-11-12 15:02:09</wp:post_date>
  <wp:post_date_gmt>2010-11-12 15:02:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>storyq-review</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bdd"><![CDATA[bdd]]></category>
  <category domain="post_tag" nicename="storyq"><![CDATA[StoryQ]]></category>
  <category domain="category" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1365166086;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-11-12 15:02:09]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>twitter_cards_summary_img_size</wp:meta_key>
    <wp:meta_value><![CDATA[a:6:{i:0;i:238;i:1;i:91;i:2;i:3;i:3;s:23:"width="238" height="91"";s:4:"bits";i:8;s:4:"mime";s:9:"image/png";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>What is CQRS and other related terms – Part 2</title>
  <link>http://roundcrisis.com/2010/11/30/what-is-cqrs-and-other-related-terms-part-2-2/</link>
  <pubDate>Tue, 30 Nov 2010 19:00:47 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=741</guid>
  <description/>
  <content:encoded><![CDATA[<h2>CQRS with Event Sourcing</h2>
[caption id="" align="alignleft" width="269" caption="Photo By edinburghcityofprint(flickr)"]<img class="  " src="http://farm3.static.flickr.com/2763/4268190563_6b9a7f840d_z.jpg" alt="Ledger" width="269" height="154" />[/caption]

Looking at CQRS and Event Sourcing as Architectural patterns, when we use them together the impact of that is widespread. For a start, your aggregates should only be exposing behaviour, and that behaviour is related to the commands that use that aggregate root, actually, the entry point to doing anything in the domain is through a command. (this have implications on how we test, but we’ll talk about that later on).

The aggregate root should now expose only behaviour, encapsulating all state, setters are seeing as a code smell. This change is not a direct consequence of CQRS, however, it was very hard to achieve this without it if doing DDD.

One of the questions I got during the talk was about how to replay perhaps millions of events, without a huge delay, and the answer to that is <strong>Snapshots</strong>, basically you preserve the current state of the aggregate root, serialized . There are a few ways to do snapshots, but the principle is that you get your snapshot, which will be up to a particular version, and then replay any events from that version on ( if there are any).

At the system level, it is important to note that, we now have an explicit state transition, what I m trying to say is that when your customer (ie the person that comes up with the requirements for the system) sais something like, when a customer is created, then that can be mapped directly to CustomerCreatedEvent ie, there is a close relationship between what happens and what caused the state transition and that can be relevant to the business. This, I think, is the biggest advantage of using CQRS

Since the read storage and the Write storage are logically separated  and they can be physically separated too, that means, that they can have different scaling policies.

Another interesting benefit of using event sourcing is that you have an integration point available, without any extra cost. The integration point could serve a Reporting tool, or an external service, or maybe you just want to push some sort of notifications, these are all easily doable, you have a bus publishing messages…

Actually, the way we are using event sourcing in the above stated scenario implies an eventually consistent model. If interested in this topic, have a look at this blog for the cost of eventual consistency. We ll go through some code and then come back to this topic.

I don’t think I mentioned this yet, but, there is one really awesome thing about this whole thing, and that is that we are framework free, there are a few principles and ideas to learn, but once you got them, there is not really much that you need a framework for, maybe if you want you can have an out of the box event store, they are simple in principle but a bit harder to code that it appears first. There are some frameworks to do CQRS with ES however, the code you need to have a system like this running is not so complex, and understanding how it works is crucial.
<h3>The trail of the Command</h3>
Lets forget about the UI for a second and think of a system from the point of: I have a command, and I need to execute it.

Every time you send a command, the system handles the command, more than likely, an aggregate root will be involved and an operation on it will occur, this will result in one or many events being published; once the event(s ) have been published, the subscribers will get this message. One of the subscribers is the Event store, that will append this new event. There are variations of this description but this will do for now. Lets say the
<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:ec1e2b0a-ba51-4ae7-95cd-caec4e3dbaeb" class="wlWriterEditableSmartContent" style="display:inline;float:none;margin:0;padding:0;">[sourcecode language="csharp" padlinenumbers="true"]
public void Handle(CustomerMovedCommand command)
        {
				var customer = _repository.Get&amp;lt;Customer&amp;gt;(command.CustomerId);
				customer.Moved(command.AddressLine1, command.AddressLine2, command.Postcode );
				_repository.Save(customer);
        }
[/sourcecode]

</div>
the aggregate root (Customer) code for that method could look something like this
<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:47cde789-6bb9-4026-a7fb-8c8c1724331d" class="wlWriterEditableSmartContent" style="display:inline;float:none;margin:0;padding:0;">[sourcecode language="csharp"]
public void Moved(string line1, string line2, string postcode)
{
    ApplyEvent(new CustomerMovedEvent()
                        {
                            AddressLine1 = line1,
                            AddressLine2 = line2,
                            PostCode = postcode
                        });
}
[/sourcecode]

</div>
In there we can see that we are applying the event, once we apply the event, we will not only set up the internal properties of the aggregate root(that we need for write operations), also through the repository or other commit like mechanism(we’ll look at this in a sec), we will publish this message, making the event store aware of this new event and making the query side aware of this event too, the query side is then responsible of de-normalizing the data to a suitable shape.

An important thing to note is that the event is declared as something that happened, it is in the past, for example: CustomerMovedEvent, that means that as far as our system is concerned, the customer has moved.

<strong>Next part will include Modelling and testing</strong>

I bundled a few interesting links in this bit.ly bundle<strong> <a href="http://bit.ly/9LC877">http://bit.ly/9LC877</a> </strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>741</wp:post_id>
  <wp:post_date>2010-11-30 19:00:47</wp:post_date>
  <wp:post_date_gmt>2010-11-30 19:00:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-is-cqrs-and-other-related-terms-part-2-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="cqrs"><![CDATA[cqrs]]></category>
  <category domain="post_tag" nicename="cqrs"><![CDATA[cqrs]]></category>
  <category domain="category" nicename="ddd"><![CDATA[ddd]]></category>
  <category domain="post_tag" nicename="event-store"><![CDATA[event store]]></category>
  <category domain="post_tag" nicename="events"><![CDATA[events]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364648560;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_44de97bbaadc8501db14a3eab6a0bc12</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2010-11-30 19:00:47]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>269</wp:comment_id>
    <wp:comment_author><![CDATA[Carlos Peix]]></wp:comment_author>
    <wp:comment_author_email>carlos.peix@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://carlospeix.com</wp:comment_author_url>
    <wp:comment_author_IP>190.210.84.40</wp:comment_author_IP>
    <wp:comment_date>2010-12-01 20:56:12</wp:comment_date>
    <wp:comment_date_gmt>2010-12-01 20:56:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Looking forward the next part. Nice content bundle as well, congrats!

Un abrazo]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1291287567</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1291236973.2715";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>272</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2010-12-06 11:06:38</wp:comment_date>
    <wp:comment_date_gmt>2010-12-06 11:06:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I ll go in depth in this in my next post. The approach basically is since your aggregate has only methods, and the result of executing them are events, then those are the places where you are verifying your code. This means that for example you have a ChangeName method in your aggregate, the result is that there is going to be a NameChangedEvent sent to your bus.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>271</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1291633600</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1291633600.6247";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>271</wp:comment_id>
    <wp:comment_author><![CDATA[bstacktrace]]></wp:comment_author>
    <wp:comment_author_email>bs.stack@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://bstacktrace.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>88.151.27.232</wp:comment_author_IP>
    <wp:comment_date>2010-12-05 11:27:16</wp:comment_date>
    <wp:comment_date_gmt>2010-12-05 11:27:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Andrea,

Great first two blog posts, Im looking forward to the rest of the series.

In a classic DDD codebase, the aggregate root has "commands" but also "getter" methods. The getter methods made the aggregate easy to access state for testing purposes.

My question then is: Without getter methods, can an aggregate be "easily" tested say e.g. when a command on the aggregate is executed?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>12610930</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1291548437.3381";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"bstacktrace";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1291632840</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>What is CQRS and other related terms – Modelling and testing – Part 3</title>
  <link>http://roundcrisis.com/2011/01/03/what-is-cqrs-and-other-related-terms-modelling-and-testing-part-3/</link>
  <pubDate>Mon, 03 Jan 2011 13:20:19 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=761</guid>
  <description/>
  <content:encoded><![CDATA[This post belongs to a series of posts on CQRS/ES

<a href="http://roundcrisis.com/2010/11/17/what-is-command-query-responsibility-segregation-cqrs-and-other-related-terms-part-1/" target="_blank">Part 1 – introductory terms and overview</a>

<a href="http://roundcrisis.com/2010/11/30/what-is-cqrs-and-other-related-terms-part-2-2/" target="_blank">Part 2 – Event sourcing and information about commands</a>

So, we are moving on.

I thought I’d put these two topics close, it seems to me  that they are related, I ve been using BDD to test this

<a href="http://roundcrisis.files.wordpress.com/2011/01/ddddevision_big.jpg"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border:0;" title="DDDDevision_big" src="http://roundcrisis.files.wordpress.com/2011/01/ddddevision_big_thumb.jpg" border="0" alt="DDDDevision_big" width="244" height="199" /></a>

After all, what I m testing is much more than a unit, and I m interested in the whole loop. What I find interesting here is that since we are talking about actions when we talk about commands and we are also talking about past events, the <strong>Given</strong>, <strong>When</strong>, <strong>Then </strong>become very rather obvious.

So, you can say something like:
<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:c9c62770-f4d6-4d39-8a89-4d180f73ddb8" class="wlWriterEditableSmartContent" style="display:inline;float:none;margin:0;padding:0;">[sourcecode language="text" padlinenumbers="true"]
Given a NewCustomerCommand with &quot;Name&quot;
and a NewCustomerCommandHandler
When I Execute the Command
Then a CustomerCreatedEvent is published
and Customer with &quot;Name&quot; exists
[/sourcecode]

</div>
and, if you, like me, are using StoryQ, this story can look like
<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:048aae66-2849-4d42-921d-9c902ce4f66c" class="wlWriterEditableSmartContent" style="display:inline;float:none;margin:0;padding:0;">[sourcecode language="csharp"]

                .WithScenario(&quot;Create new customer&quot;)
                    .Given(ANewCustomerCommandWith_, &quot;Name&quot;)
                        .And(ANewCustomerCommandHandler)
                    .When(IExecuteTheCommand)
                    .Then(ACustomerCreatedEventIsPublished)
                        .And(CustomerWithName_Exists, &quot;Name&quot;)
[/sourcecode]

</div>
With this in mind, its not hard to imagine the code to make this happen, and because of that, the focus remains on the modelling, when I see this code, I can’t help but think, Do I really need to create a new customer to be able to process orders? Is the name all that relevant?, maybe the email is more representative… all of these are domain questions, this is exactly the kind of questions that should arise, this focus is on the domain is one of the most interesting advantages of CQRS. And we need to change our code. Your testing points are at the command level, at the query level and/or at the event level.

An interesting advantage of testing in a BDD style is that you have very concise, <strong>runnable</strong> documentation, and can kick the conversation off, with your domain expert. Here you could say, wait a minute, my domain expert doesn’t know about commands, or queries. Well then perhaps you need to move the layer of testing up a bit higher to the UI.  Testing points go a layer above, another option is test at both levels.
<h2>Summary</h2>
<ul>
	<li>Behaviour Driven tests help you model the domain</li>
	<li>Your testing points are your commands, command Handler, query services and events. No need to mess around with aggregate roots directly, and hence why no need for getters on the aggregate roots</li>
	<li>Your tests are executable documentation</li>
</ul>
UPDATE: Next up Validation]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>761</wp:post_id>
  <wp:post_date>2011-01-03 13:20:19</wp:post_date>
  <wp:post_date_gmt>2011-01-03 13:20:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-is-cqrs-and-other-related-terms-modelling-and-testing-part-3</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="category" nicename="bdd"><![CDATA[bdd]]></category>
  <category domain="category" nicename="cqrs"><![CDATA[cqrs]]></category>
  <category domain="post_tag" nicename="cqrses"><![CDATA[cqrs/es]]></category>
  <category domain="category" nicename="ddd"><![CDATA[ddd]]></category>
  <category domain="post_tag" nicename="ddd"><![CDATA[ddd]]></category>
  <category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364293110;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-01-03 13:20:19]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Why Setters and Getters are considered a code smell in your Aggregate Roots</title>
  <link>http://roundcrisis.com/2011/01/23/why-setters-and-getters-are-considered-a-code-smell-in-your-aggregate-roots/</link>
  <pubDate>Sun, 23 Jan 2011 19:38:11 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=768</guid>
  <description/>
  <content:encoded><![CDATA[<p>Say we are not concerned with the query side of things (because we have an autonomous query service that need not know about your aggregate roots). With that in mind, in which cases do we <strong>need</strong> to know about the aggregate root private data?</p>  <p>I can think of one case - when checking for duplication. Then we would have to </p>  <ul>   <ul>     <li>Be happy with eventual consistency (ie some check before actually trying to save) or </li>      <li>rely on the persistence layer for uniqueness and on failure, get a meaningful&#160; error. </li>   </ul> </ul>  <p>In any other situation, we are likely to be doing something that is meaningful to your domain. For example, lets pretend a product stock amount had to change, the code would look like this</p>  <div style="display:inline;float:none;margin:0;padding:0;" id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:2def2a49-40d9-40ed-a0be-738441f6df67" class="wlWriterEditableSmartContent"><pre>
[sourcecode language="csharp" padlinenumbers="true"]
Product product = _repository.Get(id);
product.Stock = 2;
_repository.Save(product);

class Product
{
     public int Stock {get; set;}
}
[/sourcecode]
</pre>
</div>

<p>That code would have probably lived in a service, or even worse, in a controller What are the problems with this?</p>

<ul>
  <li>Lack of intent. When you look at the code for Product, you’ ll see a Stock (or quantity) property, and in this case its a pretty simple field. However you have no idea from looking at the code, how this property is used. </li>

  <li>Possible implicit behaviour. There is always a chance that the setter contains some logic . </li>

  <li>Context, perhaps adding Stock has certain rules, maybe when &gt;100 are received&#160; then someone has to be notified, or they need to be moved to another warehouse. </li>
</ul>

<p>Instead, you can write an AddStock method, which in reality would do something a bit more explicit ( I m sure you could call it StockDelivered or similar, but I guess it depends on your domain …)</p>



<div style="display:inline;float:none;margin:0;padding:0;" id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:4c6fbb4b-e9d9-4dec-9049-7082ddfa97a2" class="wlWriterEditableSmartContent"><pre>
[sourcecode language="csharp" autolinks="false"]
Product product = _repository.Get(id);
product.AddStock(45);
_repository.Save(product);


// and in the product AR
class Product
{
       public void AddStock(int receivedStock)
		{
			Contract.Requires&lt;ArgumentException&gt;(receivedStock&gt;= 0);
		   	_stock += receivedStock;
		}
}
[/sourcecode]
</pre>
</div>



<p>This is a more explicit&#160; design. However, the question of testability comes to mind, and the way you write your tests depends on the flavour of DDD you are using. If you are using DDD with CQRS/ES, then you would be publishing an event with the changes. If you are not, then you could rely on checking the product stock before and after the operation, through a query service. </p>

<p>&#160;</p>

<p><strong>Related Articles</strong></p>

<p><a href="http://michaelfeathers.typepad.com/michael_feathers_blog/2008/06/the-flawed-theo.html" target="_blank">The Flawed theory behind unit testing</a> (Feathers)</p>

<p><a href="http://typicalprogrammer.com/?p=23" target="_blank">Doing it wrong: getters and setters</a></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>768</wp:post_id>
  <wp:post_date>2011-01-23 19:38:11</wp:post_date>
  <wp:post_date_gmt>2011-01-23 19:38:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>why-setters-and-getters-are-considered-a-code-smell-in-your-aggregate-roots</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="aggregate"><![CDATA[aggregate]]></category>
  <category domain="category" nicename="cqrs"><![CDATA[cqrs]]></category>
  <category domain="category" nicename="ddd"><![CDATA[ddd]]></category>
  <category domain="post_tag" nicename="ddd"><![CDATA[ddd]]></category>
  <category domain="post_tag" nicename="setters"><![CDATA[setters]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364512669;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-01-23 19:38:11]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>CQRS/ES Presentation in Belfast yesterday</title>
  <link>http://roundcrisis.com/2011/01/21/cqrses-presentation-in-belfast-yesterday/</link>
  <pubDate>Fri, 21 Jan 2011 15:31:24 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=775</guid>
  <description/>
  <content:encoded><![CDATA[I was in Belfast yesterday were I was presenting what I called "CQRS/ES and friends" in <a href="http://nimtug.org/" target="_blank">NIMTUG </a>. I had a great time thanks to all who came and thanks to the organizers.

I would normally post here my presentation, but not sure its of any value, as it doesnt have much info, I use it for helping me remember what to say, if anyone want it, i can definetly post it, just add a comment here.

The code I was showing is a fork of  <a href="https://github.com/gregoryyoung/m-r">Super Simple CQRS code example</a> by Gregg Young

I have a link (bit.ly bundle) with a bunch of links about CQRS and ES, including a few other sample code bases  <a href="http://bit.ly/9LC877" target="_blank">http://bit.ly/9LC877</a>

If you have any questions, or feedback good or bad (something missing?) please let me know by posting a comment here (if you don't want me to publish it just say so )

Thanks for coming :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>775</wp:post_id>
  <wp:post_date>2011-01-21 15:31:24</wp:post_date>
  <wp:post_date_gmt>2011-01-21 15:31:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cqrses-presentation-in-belfast-yesterday</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1365087858;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_44de97bbaadc8501db14a3eab6a0bc12</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-01-21 15:31:24]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>290</wp:comment_id>
    <wp:comment_author><![CDATA[Andrew McCaughan]]></wp:comment_author>
    <wp:comment_author_email>andrew.mccaughan@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>217.37.58.169</wp:comment_author_IP>
    <wp:comment_date>2011-01-21 16:09:14</wp:comment_date>
    <wp:comment_date_gmt>2011-01-21 16:09:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Andrea! It was a superb talk.  Looking forward to delving into this a lot more.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1295626155.3305";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1295633053</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1295633053.8077";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>291</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2011-01-21 18:05:11</wp:comment_date>
    <wp:comment_date_gmt>2011-01-21 18:05:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Cheers, let me know if you have any questions or for a bigger and more likely chance of a correct answer try here https://groups.google.com/forum/#!forum/dddcqrs]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>290</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1295633112</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1295633113.3759";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>292</wp:comment_id>
    <wp:comment_author><![CDATA[Follow up post and code for CQRS talk - NIMTUG Events]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://nimtug.org/blogs/events/archive/2011/01/22/follow-up-post-and-code-for-cqrs-talk.aspx</wp:comment_author_url>
    <wp:comment_author_IP>82.195.149.85</wp:comment_author_IP>
    <wp:comment_date>2011-01-22 16:55:42</wp:comment_date>
    <wp:comment_date_gmt>2011-01-22 16:55:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] blog with follow up information and example code related to her NIMTUG CQRS talk on Thursday.&nbsp;http://roundcrisis.com/2011/01/21/cqrses-presentation-in-belfast-yesterday/&nbsp; &nbsp;&nbsp;   Published Jan 22 2011, 04:52  by Damien McGivern Filed under: [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1295819060</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1295819060.1746";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Learning CQRS. Why not using a framework is a good idea</title>
  <link>http://roundcrisis.com/2011/04/12/learning-cqrs-why-not-using-a-framework-is-a-good-idea/</link>
  <pubDate>Tue, 12 Apr 2011 11:55:32 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=794</guid>
  <description/>
  <content:encoded><![CDATA[I ve been talking to some people over the past few months about CQRS, particularly CQRS/ES and at some point of the conversation I get the <strong>framework </strong>question.

I think the implementation of the patterns CQRS and ES is not trivial (it's also not necessary to do both , but lets keep going) however, the escence of the advantages you get out of both comes from implementing the rules of the domain, in the domain. By making the state transitions explicit.

The number one reason why you should learn about CQRS without a framework is because, it could cloud your understanding of the domain with artificial constraints. Another important reason is that when you learn by doing, you understand the workings and shortcomings of a particular methodology.

That is not to say that frameworks are bad and you should never use them, but make sure that when you make a decision like that, it is a conscious one.

I remember one day when I was at a talk by Gregg Young, and he said: How many of you use (ms)SQL? How many of you made that conscious choice? (ie to use an relational database for storage) .  I realised then that, I didn't make that choice or considered an option in certain cases, but what scared me the most is that I was making a bunch of assumptions as soon as anyone said "system" , it made me realise that most of those assumptions could blind me into not really considering all the options.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>794</wp:post_id>
  <wp:post_date>2011-04-12 11:55:32</wp:post_date>
  <wp:post_date_gmt>2011-04-12 11:55:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>learning-cqrs-why-not-using-a-framework-is-a-good-idea</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1363596745;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-04-12 11:55:32]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Clarifying CQRS[Udi Dahan] Spanish Translation</title>
  <link>http://roundcrisis.com/2011/04/14/clarifying-cqrsudi-dahan-spanish-translation/</link>
  <pubDate>Thu, 14 Apr 2011 18:10:58 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=799</guid>
  <description/>
  <content:encoded><![CDATA[Hi :

Recently a group of us (tho mostly <a href="http://xamlsorpresa.wordpress.com/">Pablo Nuñez</a> ) translated the article from Udi Dahan Clarifying CQRS.<a href="https://docs.google.com/document/d/1-5rmzY48aXZp3A-uaULnwU0gV7r1E1ZkEV1i5YBn-LI/edit?hl=en#"> Here is the link</a> to it, if you feel that it can be improved please just leave a comment here and I can add you to the document with edit rights. Some terms where hard to translate.

Thanks to Pablo, <a href="http://carlospeix.com/">Carlos Peix</a> , <a href="http://www.jorgegamba.com/blog/">Jorge Gamba</a> and everyone that retweeted and helped.

----------

Hola:

Me pareció que el articulo de Udi Dahan, Clarifying CQRS, podría ser muy útil para la comunidad de desarrolladores hispano hablantes.

Así que algunos de nosotros decidimos traducirlo, aquí esta <a href="https://docs.google.com/document/d/1-5rmzY48aXZp3A-uaULnwU0gV7r1E1ZkEV1i5YBn-LI/edit?hl=en&amp;pli=1#"> el link</a> , la mayoríadel credito debe ir a <a href="http://xamlsorpresa.wordpress.com/">Pablo Nuñez</a> . Pero también gracias a las demás personas que ayudaron: <a href="http://carlospeix.com/">Carlos Peix</a> , <a href="http://www.jorgegamba.com/blog/">Jorge Gamba</a> , etc (la verdad no me acuerdo quien mas perdón:) )

Si tienes algún comentario o corrección simplemente deja un mensaje aquí y te puedo agregar al documento con derecho de escritura.

Gracias]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>799</wp:post_id>
  <wp:post_date>2011-04-14 18:10:58</wp:post_date>
  <wp:post_date_gmt>2011-04-14 18:10:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>clarifying-cqrsudi-dahan-spanish-translation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="cqrs"><![CDATA[cqrs]]></category>
  <category domain="post_tag" nicename="cqrs"><![CDATA[cqrs]]></category>
  <category domain="category" nicename="ddd"><![CDATA[ddd]]></category>
  <category domain="post_tag" nicename="transalation"><![CDATA[transalation]]></category>
  <category domain="post_tag" nicename="udi_dahan"><![CDATA[udi_dahan]]></category>
  <category domain="category" nicename="ui"><![CDATA[UI]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1363596739;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-04-14 18:10:58]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>466</wp:comment_id>
    <wp:comment_author><![CDATA[04&#215;02 [Screencast] CQRS con Andrea Magnorsky (aka roundcrisis) | 32minutos.net]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.wp.32minutos.net/wordpress/?p=29</wp:comment_author_url>
    <wp:comment_author_IP>69.163.144.109</wp:comment_author_IP>
    <wp:comment_date>2012-08-12 20:04:53</wp:comment_date>
    <wp:comment_date_gmt>2012-08-12 20:04:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] esto ha sido perpetrado con la complicidad de Andrea. Intentamos grabar dos veces un poldcast sobre CQRS y las dos veces fracasamos en el intento. Así que abrazamos el fracaso y decidimos que [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344801894.2293798923492431640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1347302263</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1347302264.061007022857666015625;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>DDDScotland… next weekend 7th Of May.</title>
  <link>http://roundcrisis.com/2011/05/01/dddscotland-next-weekend-7th-of-may/</link>
  <pubDate>Sun, 01 May 2011 16:26:50 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=815</guid>
  <description/>
  <content:encoded><![CDATA[DDD Scotland is happening next weekend, I'm really looking forward to it. I'm also very happy my talk got selected, thanks everyone that voted for it.  The <a href="http://scottishdevelopers.com/2011/03/14/ddd-scotland-2011-agenda/" target="_blank">agenda</a> is very interesting here are my picks:

Starting at 9:30AM and If you are not interested in CQRS/ES,  there is two talks that sound interesting: Streams of Streams – Your Rx Prescription, by <a href="http://nondestructiveme.com/" target="_blank">Ray Booysen</a> and <a href="http://geekswithblogs.net/chriscanal" target="_blank">Chris Canal</a> ‘s Monodroid Introduction, I could really use seeing a talk on this as I ve been playing around with it lately. Conferences are really those times when you wish time could effectively go backwards, damn causality… (look <a href="http://www.smbc-comics.com/index.php?db=comics&amp;id=2223#comic" target="_blank">here</a> if you want vaguely related lolz)

Later on Decision time again, there are two talks that I would be interested to see: Asymptotics and Algorithms - What You've Forgotten Since University by <a href="http://community.devexpress.com/blogs/garyshort/" target="_blank">Gary Short</a>. I m not going to lie, I had to look up what Asymptotics meant <img class="wlEmoticon wlEmoticon-confusedsmile" style="border-style:none;" src="http://roundcrisis.files.wordpress.com/2011/05/wlemoticon-confusedsmile.png" alt="Confused smile" /> . The talk is about calculating the efficiency of an algorithm, something we tend to leave to the framework these days.. but we probably should know about. The other talk I m interested in is <a href="http://twitter.com/#!/barrycarr" target="_blank">Barry Carr</a>’s  Caliburn Micro talk, it seems like that framework has packed some very interesting ideas, I only heard some of them  after listening to <a href="http://herdingcode.com/?p=303" target="_blank">that Herding Code podcast</a> with Rob Eisenberg.

The talk about scalable web  with Asp.Net sounds interesting too .

At 12:00 there is a talk that I need to go see, that’s <a href="http://twitter.com/#!/sebrose" target="_blank">Seb Rose</a>’s talk on unit testing, reasons being: first, because its about unit testing, but the Skeleton reference I like too, the fact that he contributed some of the 97 things every programmer should know(or architect, cant remember which  one) .  Another talk that interests me but I wont get to is BDD with F# By <strong>Phillip Trelford</strong>

After lunch there are three really interesting sessions that I’d like to see:
<ul>
	<li>Seb Lambla’s “Building composite applications with Open frameworks” from a very quick glance at the video available in Channel 9, it looks like a talk about using <a href="http://www.openwrap.org/" target="_blank">OpenWrap</a>, and how to integrate it to your workflow, and that’s something worth watching.</li>
	<li>“SpecFlow – functional testing made easy” by Paul Stack, would like to see how it compares to StoryQ…</li>
	<li>“The dark parts of Mono” by Toby Henderson, interesting cause I ve been meaning to see this for a while.</li>
	<li>If I was into Silverlight at all, the talk to not miss would be Daniel May talk on Silverlight Unit Testing “Real World SLUT (Silverlight Unit Testing)”</li>
</ul>
The last sessions of the day are also pretty interesting, I think the one I ll end up in would be: “How to build a framework, and why you almost never should.” by Richard Dalton , a last minute change could see me going to : “Rewriting software is the single worst mistake you can make – apparently.” tho what puts me off this is a probably wrong, and its the fact that is a story of migrating to VB.Net, a language that I honestly can’t understand why still exists or why does Microsoft funds, but leaving that aside sounds like a story worth listening to.

See you there]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>815</wp:post_id>
  <wp:post_date>2011-05-01 16:26:50</wp:post_date>
  <wp:post_date_gmt>2011-05-01 16:26:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dddscotland-next-weekend-7th-of-may</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="dddscot"><![CDATA[dddScot]]></category>
  <category domain="post_tag" nicename="developerdeveloperdeveloper"><![CDATA[developerdeveloperdeveloper]]></category>
  <category domain="post_tag" nicename="scotland"><![CDATA[Scotland]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1363596733;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-05-01 16:26:50]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>DDD Scotland. Review and Slides </title>
  <link>http://roundcrisis.com/2011/05/11/ddd-scotland-review-and-slides/</link>
  <pubDate>Wed, 11 May 2011 10:25:04 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=819</guid>
  <description/>
  <content:encoded><![CDATA[During the past weekend I was at DDD Scotland, it was great to meet all the people there.

I  apologize for the amount of lolcalts that I added to my presentation (available below) and any feedback, etc more than welcome.

[slideshare id=7891964&amp;doc=cqrsesandfriends-110509044316-phpapp01]

In many ways it was good to get the presentation out of the way early  because it meant I could focus on being out there listening to other folks smarter than me talk and meet some people.

After my talk I was at Gary Short's presentation on hoe to measure performance, interesting and really well delivered. Some interesting questions too.

Then I was at Seb Rose talk on TDD and unit testing. It was interesting to see that you can test drive a C++ app. His advice was sound. He talked about the importance of setting a structure before starting to test. He talked about the importance of deployment. And how it was important that the tests were also clean and well designed. <a href="http://www.slideshare.net/sebrose/unit-testing-tdd-and-the-walking-skeleton" target="_blank">Link to his slides</a>

After that there was lunch, unfortunately (or not)  I couldnt catch any of the grok talks as I was talking to people, one of the ideas we had was to open source a project (not mine :S) that would make using selenium+qunit on CI easier... will see how that goes.

After that I joined a talk by Toby Henderson,  The dark parts of Mono. I reallly enoyed this talk. Info about small standalone tools or libraries that you can use, with examples. Such as IKVM, Cecil, SIMD, Compiler and Gendarme.

Finally, I joined the "Ask the Speakers" panel, very relaxed and quite fun. We talked about the news (Mono and its future, other stuff I cant remember - please comment),  innovation and community. There is a <a href="http://www.leggetter.co.uk/2011/05/09/ddd-scotland-2011.html" target="_blank">post </a>of note that goes into some of the stuff we talked about .

All in all a great event, thanks to everyone for making it possible.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>819</wp:post_id>
  <wp:post_date>2011-05-11 10:25:04</wp:post_date>
  <wp:post_date_gmt>2011-05-11 10:25:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ddd-scotland-review-and-slides</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1363596726;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-05-11 10:25:04]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>TDD tools for .net developers</title>
  <link>http://roundcrisis.com/2011/07/09/tdd-tools-for-net-developers/</link>
  <pubDate>Sat, 09 Jul 2011 11:49:46 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=828</guid>
  <description/>
  <content:encoded><![CDATA[In the last few years the tooling available to .net developers for unit testing in general has matured, these are some of the tools  that I either used or heard of :

Continuous Integration:
<ul>
	<li>Team City: I use it and really like it, simple to set up and use, if you want to try it they have a free professional edition .</li>
	<li>Cruise Control.net: Open source, used it but didnt find it too friendly, I m aware a lot of people use it</li>
	<li>Hudson. Originally a Java only project but there are some success stories on the .net fence, has some features unavailable in the other two mentioned above.</li>
	<li>there must be something else. ?</li>
</ul>
<div>BDD Frameworks</div>
<div>
<ul>
	<li>StoryQ:  This is what I use. Like it because you write C# code with some constraints and it generates reports on the behaviour. Samples: <a href="http://storyq.codeplex.com/SourceControl/changeset/view/2d36d2927f4d#src%2fStoryQ.Demo%2fDemoTest.cs" target="_blank">code</a> <a href="http://yfrog.com/h2y3mtp" target="_blank">report</a></li>
	<li>Cukes/Cucumber: I remember the first time I saw cucumber in action I was really impressed, however it's hard to get buy in for a tool that requires another language installed, probably fine for some projects, it depends a lot on the project, the company and the culture.</li>
	<li>SpecFlow:  you write features in Gherkin(the cucumber spec language) that are then compiled into c# code. Nice reports, but I find the generated code hard to read... ie a bit too verbose (<a href="https://github.com/techtalk/SpecFlow-Examples/blob/master/BowlingKata/BowlingKata-MbUnit/Bowling.Specflow/ScoreCalculationAlternativesFeature.feature" target="_blank">example feature</a> <a href="https://github.com/techtalk/SpecFlow-Examples/blob/master/BowlingKata/BowlingKata-MbUnit/Bowling.Specflow/BowlingSteps.cs" target="_blank">example generated code</a>) however I wouldnt discard it totally.</li>
	<li>NSpec:  You write c# code (very lambda-y)  and it generates reports.. like it even less for reasons similar to the above,  have a look at it yourself <a href="http://nspec.org/" target="_blank">here</a></li>
	<li>Fit/fitnesse:  I haven't tried it, it supposed to be very good, I ll leave that one to you (would love some feedback on this if anyone reading did try it)</li>
</ul>
<div>Unit Testing Frameworks.</div>
<div>
<ul>
	<li>xUnit: a nice, compact unit test framework, I like it because it has less noise,  no setup method (ie it uses the ctor for</li>
	<li>nUnit:  The most popular one.</li>
	<li>mbUnit: good support for RowTests.</li>
	<li>_</li>
	<li>msTests: the option by Microsoft. I tried this framework when it came out, so perhaps not valid anymore. My experience with it was that the same set of test ran 20% slower. Also it had poor support for theory tests. Maybe this all changed. I will guess that anyone using this framework does it because they can't use anything else</li>
</ul>
<div><a href="http://roundcrisis.files.wordpress.com/2011/05/unit-testing-fm.png"><img title="unit testing fm" src="http://roundcrisis.files.wordpress.com/2011/05/unit-testing-fm.png?w=202" alt="" width="202" height="300" /></a></div>
</div>
<div>Builds</div>
<div>
<ul>
	<li>Psake:  powershel based DSL for building</li>
	<li>Rake:  Ruby based Dsl for builds, nice to use ruby, but sometimes needing the ruby dependency is a deal breaker</li>
	<li>Nant: not something I would choose, but hey if you like xml this is the way to go (if you like Xml you might want to talk to your doctor too ;) )</li>
	<li>MSBuild:  I find it non intuitive, I thought I was being unfair so I asked in twitter what ppl thought of it. One supporter and 4 not really happy with it (see below)</li>
	<li>Final Builder : a commercial option, and not a bad one to be honest. Very easy to use (drag drop style) tho not as flexible as we needed.</li>
</ul>
</div>
<div><a href="http://roundcrisis.files.wordpress.com/2011/07/capture.png"><img class="size-full wp-image-838 aligncenter" title="MsBuild" src="http://roundcrisis.files.wordpress.com/2011/07/capture.png" alt="" width="650" height="130" /></a></div>
</div>
<div>Code Coverage</div>
<div>
<ul>
	<li> NCover: does the job but I think the generated graph could be better. Running the tool was cumbersome too as far as I remember</li>
	<li> dotCover : really nice and integrated with resharper, it a bit rough around the edges with lambdas and other minor things, but a tool I use day to day</li>
</ul>
</div>
<div>Feedback and anything that wasn't mentioned yet , please feel free to comment</div>
<div>Cheers</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>828</wp:post_id>
  <wp:post_date>2011-07-09 11:49:46</wp:post_date>
  <wp:post_date_gmt>2011-07-09 11:49:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tdd-tools-for-net-developers</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1371823226;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-07-09 11:49:46]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>331</wp:comment_id>
    <wp:comment_author><![CDATA[Lior Friedman]]></wp:comment_author>
    <wp:comment_author_email>imistaken@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/imistaken</wp:comment_author_url>
    <wp:comment_author_IP>15.195.201.87</wp:comment_author_IP>
    <wp:comment_date>2011-07-12 08:37:00</wp:comment_date>
    <wp:comment_date_gmt>2011-07-12 08:37:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[As for CI i would add FinalBuilder
For Coverage - For people using MSTest, it comes with a bundled coverage tool inside the VS env (I've added some msbuild tasks to enable exporting those reports into xml's for integration with CI systems - http://mstest.codeplex.com/).
And for BDD you might as well add nBehave - very simple to use, you can write your specification both in plain text and using a C# fluent API]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a2.twimg.com/profile_images/1425959528/twitter_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>329005844</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1310469911</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310469911.1921";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>330</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2011-07-11 17:10:39</wp:comment_date>
    <wp:comment_date_gmt>2011-07-11 17:10:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Ken:

boo, thats a great idea, never thought about it 
Thanks for the comment

Andrea]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>326</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1310404240</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310404240.1806";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>329</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2011-07-11 17:09:57</wp:comment_date>
    <wp:comment_date_gmt>2011-07-11 17:09:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Matt:
Cheers for the comment, and kudos for maintaining an open source tool .
I ll have a look again :) , maybe write another (more balanced) post with also the good bits about NSpec

Cheers


Andrea]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>328</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1310404197</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310404197.7823";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>334</wp:comment_id>
    <wp:comment_author><![CDATA[TDD tools for .net developers | Jesus Was Rasta]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://jesuswasrasta.com/development/tdd-tools-for-net-developers.html</wp:comment_author_url>
    <wp:comment_author_IP>74.220.207.163</wp:comment_author_IP>
    <wp:comment_date>2011-07-28 13:37:53</wp:comment_date>
    <wp:comment_date_gmt>2011-07-28 13:37:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] TDD tools for .net developers « roundcrisis.Find().   Share and [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1311873160</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1311873160.4728";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1311860273.7027";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>326</wp:comment_id>
    <wp:comment_author><![CDATA[kenegozi]]></wp:comment_author>
    <wp:comment_author_email>mail@kenegozi.com</wp:comment_author_email>
    <wp:comment_author_url>http://kenegozi.com/blog</wp:comment_author_url>
    <wp:comment_author_IP>84.109.23.71</wp:comment_author_IP>
    <wp:comment_date>2011-07-09 21:10:08</wp:comment_date>
    <wp:comment_date_gmt>2011-07-09 21:10:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[As for build scripts - a great tool for .NET-ers is phantom, a boo-based dsl

Why I like it?

1. Very low noise. Comparable to rake
2. No real dependency. Rake needs a whole Ruby, psake require PS (which is not always there, especially if you wan Mono builds on Linux/Mac ...)  - you only need a few dlls, no GAC or nothing. 
3. Access to familiar .NET BCL if you're from there, and you can even access your own code (dlls) if you need as part of the build.

eg. build script (which I knocked off without much thinking a few months back): https://github.com/kenegozi/mongo-csharp-driver/blob/master/Build.boo
see the minimal, xcopy (or git clone) dependency in /build folder



As for the rest:
TeamCity is awesome. But it is taking a *lot* of memory, and I had to disable my TC server running on my poor 2GB VPS. I'm still looking for something that will leak less memory (damn you Tomcat6) and be generally snappier. Maybe will create one based on Manos one day tailored for my needs (basically execute build script - so no smarts on the server, then get build status report. artifacts, post hooks etc will be handled by the scripts.  and with low memory footprint. and zero-conf. and minimal dependencies. and OSS) ...

xUnit/NUnit - I like both. NUnit for it's wider tool adoption, and xUnit for cuteness. 

I rarely do Code Coverage (I know what are the important parts). I also am not buying into BDD so I have no say on these frameworks.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1310321091</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310321091.5767";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310245808.2317";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>327</wp:comment_id>
    <wp:comment_author><![CDATA[Alex Earl]]></wp:comment_author>
    <wp:comment_author_email>slide_o_mix@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/slide_o_mix</wp:comment_author_url>
    <wp:comment_author_IP>98.177.232.239</wp:comment_author_IP>
    <wp:comment_date>2011-07-11 12:42:55</wp:comment_date>
    <wp:comment_date_gmt>2011-07-11 12:42:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'd recommend Jenkins (http://jenkins-ci.org) over Hudson. Jenkins is a fork of Hudson that most of the original developers and community are moved to. It has quite a large following compared to the original Hudson base.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1124051992/slide_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>172185016</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1310389717</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310389717.1491";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>328</wp:comment_id>
    <wp:comment_author><![CDATA[Matt Florence]]></wp:comment_author>
    <wp:comment_author_email>mattflo@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/mattflo</wp:comment_author_url>
    <wp:comment_author_IP>65.68.201.59</wp:comment_author_IP>
    <wp:comment_date>2011-07-11 16:25:39</wp:comment_date>
    <wp:comment_date_gmt>2011-07-11 16:25:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Andrea,

I'm glad to see you took a look at NSpec. I certainly wish you had nicer things to say ;). I just want to point out that BDD really has grown into two different sets of tools focused on different audiences. NSpec code is not intended to be easy to read by non-developers. However, it's output should be. Another criticism we've heard is that NSpec specs are hard to read even by developers. This is true especially for those unfamiliar with the context/spec (in contrast to gherkin) style. However, everyone who is familiar with and likes RSpec from ruby doesn't have this problem. Let me know if you have any other questions. Of course, I'd love for you to take a closer look at context/spec and NSpec.

Thanks,
Matt]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a3.twimg.com/profile_images/789631959/DSC_0026-b_w_-_Copy_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>5852762</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1310403989</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310403989.2968";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Code Retreat Dublin–17th September</title>
  <link>http://roundcrisis.com/2011/09/25/code-retreat-dublin17th-september/</link>
  <pubDate>Sun, 25 Sep 2011 12:06:09 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=869</guid>
  <description/>
  <content:encoded><![CDATA[What an awesome experience to organize and participate in this event.

It was a long day but I think people enjoyed it, learned a lot and got to try a few new things.

<a href="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-22.jpg"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-color:black;border-style:solid;border-width:1px;" title="Code Retreat. A bad picture of breakfast" src="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-22_thumb.jpg" alt="Code Retreat. A bad picture of breakfast" width="184" height="244" border="0" /></a><a href="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-12.jpg"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="Code Retreat. Early birds" src="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-12_thumb.jpg" alt="Code Retreat. Early birds" width="244" height="184" border="0" /></a><a href="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-33.jpg"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="2011-09-17 08.53.33" src="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-08-53-33_thumb.jpg" alt="2011-09-17 08.53.33" width="244" height="184" border="0" /></a>

At 9, Jose  explained how a Code Retreat works and Kevin(below) explained Conway’s Game of Life, the problem to solve during the day.

<a href="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-12-36.jpg"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="2011-09-17 09.12.36" src="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-12-36_thumb.jpg" alt="2011-09-17 09.12.36" width="244" height="184" border="0" /></a>
<h1>Sessions</h1>
A code retreat has many sessions of 45 minutes each. Below is how most of the sessions looked

<a href="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-24-11.jpg"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;margin:0;" title="2011-09-17 09.24.11" src="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-09-24-11_thumb.jpg" alt="2011-09-17 09.24.11" width="244" height="184" border="0" /></a><a href="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-20.jpg"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;margin:0;" title="2011-09-17 13.59.20" src="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-20_thumb.jpg" alt="2011-09-17 13.59.20" width="244" height="184" border="0" /></a>

<a href="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-37.jpg"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="2011-09-17 13.59.37" src="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-37_thumb.jpg" alt="2011-09-17 13.59.37" width="244" height="184" border="0" /></a><a href="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-28.jpg"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;margin:0;" title="2011-09-17 13.59.28" src="http://roundcrisis.files.wordpress.com/2011/09/2011-09-17-13-59-28_thumb.jpg" alt="2011-09-17 13.59.28" width="244" height="184" border="0" /></a>
<h3>Session 1</h3>
At 9.10 am we started our first session.

Constraint: To code Conway's Game of life in pairs.

At the beginning of the session all the pairs were talking to each other, but after 5 min or so we saw a change towards writing code.

Retrospective:
<ul>
	<li>A few solutions to the problem emerged.</li>
	<li>A healthy discussion about the problem constraints.</li>
</ul>
Pair count by language:
<ul>
	<li>Python: 3</li>
	<li>Ruby: 4</li>
	<li>C#: 2</li>
	<li>Php: 1</li>
	<li>Javascript: 1</li>
</ul>
<div>
<h3>Session 2</h3>
Constraint:  To discuss the solution for 10 min, and to test drive or unit test the solution.

Retrospective:

A pair came up with a solution that used 2 lists.
More people using javascript, as it's a language that most can understand. <a href="http://pivotal.github.com/jasmine/" target="_blank">Jasmine</a> (BDD for Javascript) was a handy tool since you can run it in the browser.

Pair count by language:
<ul>
	<li>Python: 3</li>
	<li>Ruby: 2</li>
	<li>C#: 2</li>
	<li>Php: 0</li>
	<li>Javascript: 3</li>
	<li>Java: 1</li>
</ul>
<h3>Session 3</h3>
Constraint:  Avoid the use of primitives.

Retrospective:

In this session we got more feedback:
<ul>
	<li>As a result of the restriction we got self documenting tests</li>
	<li>Not enough time</li>
	<li>Arriving at a better design</li>
	<li>One of the pairs spent most of the time just analyzing</li>
	<li>Some questions about testing in general. What do you do when tests are just too big? The general answer was around the lines of break it down into smaller tests and skip or remove from code and add to To do list. Another question was about mocking</li>
</ul>
Pair count by language:
<ul>
	<li>Python: 2</li>
	<li>Ruby: 1</li>
	<li>C#: 1</li>
	<li>Php: 1</li>
	<li>Javascript: 3</li>
	<li>Java: 3</li>
</ul>
<div>--- Lunch Break.  Retrospective: Yay! ---</div>
</div>
<h3>Session 4</h3>
<div>Constraint:  <a href="http://gojko.net/2009/08/02/tdd-as-if-you-meant-it-revisited/" target="_blank">TDD as if you mean it</a> tho since not everyone was comfortable with testing, it was optional.</div>
<div>Retrospective:  Four pairs tried TDD as if you mean it, however the concept wasn't very clear. (this was probably my fault, as I explained it badly, sorry)</div>
<div>Pair count by language:
<ul>
	<li>Python: 1</li>
	<li>Ruby: 2</li>
	<li>C#: 2</li>
	<li>Php: 0</li>
	<li>Javascript: 3</li>
	<li>Java: 1</li>
</ul>
<h3>Session 5</h3>
</div>
<div>Constraint: No conditionals</div>
<div>Retrospective:</div>
<div>The general feedback was that the pairs felt  that they were arriving at more elegant solutions with more classes, which resulted in more readable tests.</div>
<div>Pair count by language:</div>
<div>
<ul>
	<li>Python: 2</li>
	<li>Ruby: 1</li>
	<li>C#: 2</li>
	<li>Php: 0</li>
	<li>Javascript: 2</li>
	<li>Java: 2</li>
</ul>
</div>
<h3>Session 6</h3>
<div>This was the last session after a long day. The feedback on the ground was that people felt a bit frustrated that they didn't have enough time to finish the problem; so session 6 was: Finish the problem.</div>
<div>There was no retrospective as people started to leave. However it felt like people left happy. Splitters!!</div>
<div></div>
<div></div>
<div>NOTE: There is another Code Retreat in Dublin this coming  3rd of December as part of Global Day of Code Retreat check <a href="CodingDay.org" target="_blank">CodingDay.org</a> for more details</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>869</wp:post_id>
  <wp:post_date>2011-09-25 12:06:09</wp:post_date>
  <wp:post_date_gmt>2011-09-25 12:06:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>code-retreat-dublin17th-september</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code_retreat"><![CDATA[code_retreat]]></category>
  <category domain="post_tag" nicename="code_retreat"><![CDATA[code_retreat]]></category>
  <category domain="post_tag" nicename="dublin"><![CDATA[dublin]]></category>
  <category domain="post_tag" nicename="events"><![CDATA[events]]></category>
  <wp:postmeta>
    <wp:meta_key>draftfeedback_requests</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:13:"4e7faf8c15b8b";a:3:{s:3:"key";s:13:"4e7faf8c15b8b";s:4:"time";s:10:"1316990860";s:7:"user_id";s:7:"5507891";}s:24:"bravesirandrew@gmail.com";a:3:{s:3:"key";s:13:"4e7faf953b93b";s:4:"time";s:10:"1316990869";s:7:"user_id";s:7:"5507891";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1366351567;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-09-25 12:06:09]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Starting out with XNA? some handy links</title>
  <link>http://roundcrisis.com/2011/11/07/starting-out-with-xna-some-handy-links/</link>
  <pubDate>Mon, 07 Nov 2011 21:19:03 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=887</guid>
  <description/>
  <content:encoded><![CDATA[XNA is the SDK from Microsoft for game development.
<ul>
	<li><a href="http://rbwhitaker.wikidot.com/getting-started-tutorials" target="_blank">XNA getting started tutorial</a>. Well organized, paced  series of  XNA tutorials by a guy that teaches this. If you know nothing this is pretty good.</li>
	<li><a href="http://www.gamedev.net/forum/145-xna-40-2011-workshop/" target="_blank">Xna workshop</a>. Some posts and links to learn XNA Is kinda handy to see other people's questions</li>
	<li><a href="http://www.riemers.net/eng/Tutorials/XNA/Csharp/series1.php" target="_blank">Riemers XNA Tutorials</a>. I think this is a link you want to keep, every time I search for something XNA related I get a post from this guy</li>
	<li><a href="http://www.david-gouveia.com/2d-camera-with-parallax-scrolling-in-xna/" target="_blank">2D Camera with parallax scrolling</a>. Does what it said on the tin, very comprehensive article that also links to other interesting articles.</li>
	<li><strong><a href="https://github.com/mono/MonoGame" target="_blank">Mono game</a></strong>. The good news is that there is a port :D ... "MonoGame is an open source implementation of the XNA APIs that allows developers to build 2D games that run on Android, iPhone, iPad, Mac, Linux and Windows using the same code base, or reusing existing XNA code that runs on Xbox 360 or Windows Phone 7"</li>
</ul>
<div>I ve been reading <a href="http://www.amazon.com/Learning-XNA-4-0-Development-Windows/dp/1449394620" target="_blank">Learning XNA 4.0</a> its pretty good so far, well written and easy to follow tho with enough detail.</div>
<div>If you know of other good details, please comment :D</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>887</wp:post_id>
  <wp:post_date>2011-11-07 21:19:03</wp:post_date>
  <wp:post_date_gmt>2011-11-07 21:19:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>starting-out-with-xna-some-handy-links</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197485";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-11-07 21:19:03]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Programming Science</title>
  <link>http://roundcrisis.com/2011/11/22/programming-science/</link>
  <pubDate>Tue, 22 Nov 2011 09:40:04 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=900</guid>
  <description/>
  <content:encoded><![CDATA[So a few Scientists and a few developers met last Wednesday. It was hard to know where we were going to end and thanks so much to everyone that participated. The following is a summary of the tips we (scientist + developers) thought was a good idea

Tips for scientists writing code (1st Round):
<ul>
	<li>Talk to other scientists that work on similar projects and share a list of your most used functions (I cant remember the name of the person suggestion</li>
	<li>Every now and then meet up with other scientist writing similar code to you to talk specifically about the code you write, after all if you know the tools you are working with better, you are bound to be more productive</li>
	<li>Use source control. There are pretty good open source alternatives and many places that offer free storage. Some source control options: Git, Mercurial, subversion. Some places to host your code: github, bitbucket, google code, codeplex</li>
	<li>Use variable names that indicate what you are talking about.</li>
<ul>
	<li>Some bad examples: your_cat_name, sss, ttt, etc. Some good examples: portionOfSphere, portion_of_sphere.</li>
</ul>
	<li>In the case of IDL, avoid for loops and try to use functions</li>
	<li>Try to get used to reading others people code so that you realise where you can improve, or point out things that can be done i na more effective way</li>
</ul>
<h3> Help a scientist day</h3>
The above is all well and good, however. We were also thinking about collaboration. So Philippe came up with a great idea: Help a scientist day.
<ul>
	<li>A scientist submits (somewhere to be discussed) a problem she or he thinks it could be solved with some help of more developers</li>
	<li>people can ask questions about the idea (either technical details or just to check that its a problem similar to theirs)</li>
	<li>People can vote on ideas <span style="color:#a5a5a5;">(no need to sign up )</span></li>
	<li>The ideas with most votes (that are doable) will be the ones that will be implemented by developer during “Help a Scientist Day”</li>
</ul>
So, we need to organize this day, please comment on <a href="https://plus.google.com/b/114172855713532113103/" target="_blank">G+</a> so we can get this going

Cheers]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>900</wp:post_id>
  <wp:post_date>2011-11-22 09:40:04</wp:post_date>
  <wp:post_date_gmt>2011-11-22 09:40:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>programming-science</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197489";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-11-22 09:40:04]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>358</wp:comment_id>
    <wp:comment_author><![CDATA[Philippe Duval]]></wp:comment_author>
    <wp:comment_author_email>phil.duval@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>89.101.182.242</wp:comment_author_IP>
    <wp:comment_date>2011-11-22 10:01:30</wp:comment_date>
    <wp:comment_date_gmt>2011-11-22 10:01:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Just a note: I think 'Help a Scientist Day' is not just about solving some cool scientific programming problem: There is to be a  learning experience going both ways: 
  * The scientists need to be ready to arm themselves with patience and explain the science behind the problem to the devs
  * The devs need to be ready to arm themselves with patience and explain basics of appropriate programming best practices to the scientists. 

so the day really is 'Help a coder do science, help a scientist do code day' but I agree that's a bit unwieldy]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1321956090.8657";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1321985539</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1321985539.6861";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>359</wp:comment_id>
    <wp:comment_author><![CDATA[Jacob Reimers]]></wp:comment_author>
    <wp:comment_author_email>jacob@reimers.dk</wp:comment_author_email>
    <wp:comment_author_url>http://www.reimers.dk</wp:comment_author_url>
    <wp:comment_author_IP>93.107.43.52</wp:comment_author_IP>
    <wp:comment_date>2011-11-22 12:25:04</wp:comment_date>
    <wp:comment_date_gmt>2011-11-22 12:25:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["A scientist submits (somewhere to be discussed) a problem she or he thinks it could be solved with some help of more developers"

This should probably be a fairly high level description so that lay people can get their head around it, but should probably include:
1. Result description.
2. Proposed solution algorithm
3. Required language for solution (although maybe not much help to get for IDL)
4. Constraint on the running solution.
5. Supporting algorithms. There are many algorithm implementations out there and it may help come up with a solution in a different language.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1321964704</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1321964704.1399";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>360</wp:comment_id>
    <wp:comment_author><![CDATA[Paul A. Higgins]]></wp:comment_author>
    <wp:comment_author_email>pohuigin@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://grian.phy.tcd.ie/~phiggins/</wp:comment_author_url>
    <wp:comment_author_IP>188.141.115.153</wp:comment_author_IP>
    <wp:comment_date>2011-11-22 22:28:52</wp:comment_date>
    <wp:comment_date_gmt>2011-11-22 22:28:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["(although maybe not much help to get for IDL)"

My guess is that every one in our group is only proficient in IDL. I know that for myself, I would not do a science project in something other than IDL at the moment. I would guess David and Shane would be willing to try python, however. I'm not saying I wouldn't try to do something in another language with the help of the pros, but I only know IDL.

Any way, have David send us all an email when you know where you want to post the ideas.

Cheers!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1322000932.637";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1322039256</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1322039256.4394";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Windows Phone 7– Game Development Experience</title>
  <link>http://roundcrisis.com/2011/12/06/windows-phone-7-game-development-experience/</link>
  <pubDate>Tue, 06 Dec 2011 13:27:59 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=915</guid>
  <description/>
  <content:encoded><![CDATA[I got a Windows Phone 7 to play with for a while and these are some notes about the experiment.  I just did a tick-tac-toe based on this <a href="http://mobile.tutsplus.com/tutorials/windows/windows-phone-7-game-development/">blog post</a> changed a few things tho (like the use of extension method for checking for wining and replaced by bit shifting :D ), but I wanted to have some code to fall back to just in case.

NOTE: I have an android phone, and had an iPhone for a while in the past, so my expectations about this phone are probably based on them.

As soon as I connected the phone to my computer it prompted me to install the Zune software, after installation you get this:

<a href="http://roundcrisis.files.wordpress.com/2011/12/capture.png"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2011/12/capture_thumb.png" alt="Capture" width="244" height="96" border="0" /></a>

restarting my machine? we are not in 1999, this shouldn’t be a requirement.

Also when I was trying to install some game, the phone displayed a message about the fact that some installations require re starting the phone. Very strange

Rather randomly on an LG –E90099 I get the error that the phone is pin locked (it isn't :( ).

If while trying to debug to your phone you get an error, “The application could not be lauched for debugging. Verify that the application is installed on target device” that, for me , meant that the phone was locked (ie dark screen) Make sure you can see the menu and try again

<a href="http://roundcrisis.files.wordpress.com/2011/12/capture1.png"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2011/12/capture_thumb1.png" alt="Capture" width="244" height="181" border="0" /></a>

After these initial errors, I pretty much moved pretty quickly.

I  am quite surprised by this, but at least for game development  (with xna) this little trial has been incredibly painless.

Regarding the phone OS,  there are some aspects that I really dislike:
<ul>
	<li>A lot of screen is wasted, for example if i search online for something, I can only see about 2 to 3 results.</li>
	<li>The facebook integration (I dont want facebook). Probably it can be turned off?</li>
	<li>Figuring out how to un-link the hotmail account to the phone is quite tricky (it might be just me)</li>
	<li>Having to restart your phone after installing an app is just not acceptable.</li>
</ul>
Things I liked about the phone
<ul>
	<li>Dealing with text in general is superior at least to the android experience. ie writting texts and email was a good experience</li>
	<li>Generally fast and non cluttered</li>
</ul>
In general my perception of the phone has improved after trying it . And I have to add I m pretty impressed by the Zune software, it looks good, it worked flawlessly. Comparing to iTunes and Samsung Kies it's way ahead.

I like XNA, and the fact that it was so transparent to deploy a game to the phone was really nice.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>915</wp:post_id>
  <wp:post_date>2011-12-06 13:27:59</wp:post_date>
  <wp:post_date_gmt>2011-12-06 13:27:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>windows-phone-7-game-development-experience</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="ganedev"><![CDATA[ganedev]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="windows-phone-7"><![CDATA[windows phone 7]]></category>
  <category domain="category" nicename="xna"><![CDATA[xna]]></category>
  <category domain="post_tag" nicename="xna"><![CDATA[xna]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:21558898;a:2:{s:7:"user_id";s:11:"roundcrisis";s:7:"post_id";s:18:"144045520745271296";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197485";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2011-12-06 13:27:59]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>XNA – A Simple 2D Camera</title>
  <link>http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/</link>
  <pubDate>Thu, 19 Apr 2012 15:21:10 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=962</guid>
  <description/>
  <content:encoded><![CDATA[What is a camera? Intuitively we know what a camera is:  simply a way to show the action.

A Camera allows us to deal with the display of the action in a detached way from the action.

<span style="font-size:large;">Implementation</span>

I like to start with what we are trying to achieve. For the purposes of this post, I want to have two cameras showing the same action at different zoom levels, like this:

<a href="http://roundcrisis.files.wordpress.com/2012/04/capture.png"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2012/04/capture_thumb.png" alt="Capture" width="244" height="151" border="0" /></a>

In this case we want 2 cameras, with each camera having it’s own ViewPort that we assign when creating like this:
<pre class="csharpcode"><span class="kwrd">int</span> halfScreenWidth = GraphicsDevice.Viewport.Width/2;
_camera1 = <span class="kwrd">new</span> Camera(<span class="kwrd">new</span> Viewport(0, 0, halfScreenWidth - 3, GraphicsDevice.Viewport.Height));</pre>
What we are saying with that is that the Camera class will have a Viewport that occupies the left side of the screen.  The - 3 is there to add a visible gap between the left and right sides of the screen. Lets look at the following portion of the Draw method. Please note you could have all the parameters for _spriteBatch.Begin() null, except for the transform.
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 1: </span>            GraphicsDevice.Viewport = _camera1.Viewport;
<span class="lnum"> 2: </span></pre>
<pre class="alt"><span class="lnum"> 3: </span>            _spriteBatch.Begin(SpriteSortMode.Deferred, BlendState.AlphaBlend, SamplerState.PointClamp, DepthStencilState.None, RasterizerState.CullNone, <span class="kwrd">null</span>, _camera1.Transform);
<span class="lnum"> 4: </span>            _level.Draw(_spriteBatch);</pre>
<pre class="alt"><span class="lnum"> 5: </span>            _spriteBatch.Draw(_tankTexture, _tankPosition, <span class="kwrd">null</span>, Color.White, _rotation, <span class="kwrd">new</span> Vector2(_tankTexture.Width / 2, _tankTexture.Height / 2), 1, SpriteEffects.None, 0);
<span class="lnum"> 6: </span>            _spriteBatch.End();</pre>
</div>
Since we have a viewport  per camera, the graphics device needs to know which one to use, and that’s what we are doing in line 1 in the code above. The other important part of the code is the last parameter of the _spriteBatch.Begin call, where we are using the transformation matrix from the camera. This transform is calculated on each update.

So finally lets look at the Camera class:
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 1: </span>    <span class="kwrd">public</span> <span class="kwrd">class</span> Camera</pre>
</div>
<div class="csharpcode">
<pre><span class="lnum"> 2: </span>    {</pre>
</div>
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 3: </span>        <span class="kwrd">public</span> Matrix Transform { get; <span class="kwrd">private</span> set; }</pre>
</div>
<div class="csharpcode">
<pre><span class="lnum"> 4: </span>        <span class="kwrd">public</span> Viewport Viewport { get; <span class="kwrd">private</span> set; }</pre>
</div>
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 5: </span></pre>
</div>
<div class="csharpcode">
<pre><span class="lnum"> 6: </span>        <span class="kwrd">public</span> Camera(Viewport viewport)</pre>
</div>
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 7: </span>        {</pre>
</div>
<div class="csharpcode">
<pre><span class="lnum"> 8: </span>            Transform = Matrix.Identity;</pre>
</div>
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 9: </span>            Viewport = viewport;</pre>
</div>
<div class="csharpcode">
<pre><span class="lnum"> 10: </span>        }</pre>
</div>
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 11: </span></pre>
</div>
<div class="csharpcode">
<pre><span class="lnum"> 12: </span>        <span class="kwrd">public</span> <span class="kwrd">void</span> Update(GameTime gameTime, <span class="kwrd">float</span> rotation, Vector2 position, <span class="kwrd">float</span> zoom)</pre>
</div>
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 13: </span>        {</pre>
</div>
<div class="csharpcode">
<pre><span class="lnum"> 14: </span>            Transform = Matrix.CreateTranslation(-position.X, -position.Y, 0) *</pre>
</div>
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 15: </span>                        Matrix.CreateRotationZ(rotation) *</pre>
</div>
<div class="csharpcode">
<pre><span class="lnum"> 16: </span>                        Matrix.CreateScale(<span class="kwrd">new</span> Vector3(zoom, zoom, 1)) *</pre>
</div>
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 17: </span>                        Matrix.CreateTranslation(Viewport.Width / 2, Viewport.Height / 2, 0);</pre>
</div>
<div class="csharpcode">
<pre><span class="lnum"> 18: </span>        }</pre>
</div>
<div class="csharpcode">
<pre class="alt"><span class="lnum"> 19: </span>    }</pre>
</div>
The least obvious part of this code lies in the matrix transformation. It is important to understand that we have two coordinate systems in place, the screen and the world. With the transformation matrix we are trying to project the world coordinate system onto the screen system. With that in mind, the first translation matrix (line 14 in the code above) will reposition the world so that point (position.X, position.Y) lines up with the screen's origin. The result is as follows:

<a href="http://roundcrisis.files.wordpress.com/2012/04/capture1.png"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2012/04/capture_thumb1.png" alt="Capture" width="244" height="150" border="0" /></a><a href="http://roundcrisis.files.wordpress.com/2012/04/capture2.png"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2012/04/capture_thumb2.png" alt="Capture" width="172" height="112" border="0" /></a>

What you see at the top left of the pic is a quarter of the tank. If you change the tank’s position then you will see that the tank remains static at the top left (tho rotation applies) and the world moves underneath it.

<a href="http://roundcrisis.files.wordpress.com/2012/04/capture3.png"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2012/04/capture_thumb3.png" alt="Capture" width="244" height="155" border="0" /></a>

The next line, Matrix.CreateRotationZ, creates a matrix representing a rotation around the Z axis. The Z axis points straight out of the screen. In 2D, to perform a rotation, we always rotate around Z.

<a href="http://roundcrisis.files.wordpress.com/2012/04/capture4.png"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2012/04/capture_thumb4.png" alt="Capture" width="244" height="155" border="0" /></a>

Then we need to scale, using the parameters that we sent on update. Don’t forget we set different levels of zoom in each of the two cameras. We use the overload of Matrix.CreateScale() that takes a Vector3 to create a scaling matrix. However we could use the overload that just takes a float and pass the zoom value as a parameter with the same result. Unsurprisingly applying the scale, scales <img class="wlEmoticon wlEmoticon-smile" style="border-style:none;" src="http://roundcrisis.files.wordpress.com/2012/04/wlemoticon-smile.png" alt="Smile" />.

Finally we want to center the tank in the middle of each viewport and that’s why you apply the last line (line 17 on the sample above).

<a href="http://roundcrisis.files.wordpress.com/2012/04/capture5.png"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border-width:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2012/04/capture_thumb5.png" alt="Capture" width="244" height="155" border="0" /></a>

And we are done <img class="wlEmoticon wlEmoticon-smile" style="border-style:none;" src="http://roundcrisis.files.wordpress.com/2012/04/wlemoticon-smile.png" alt="Smile" /> tho I m sure there are plenty of ways to improve the code, but hopefully it will help as a simple example.

If you want to have a better look at the code, a working sample is available <a href="https://github.com/Andrea/Simple-2D-camera-Sample" target="_blank">here</a>. If you have any comments, improvements, questions, as always you are very welcome.

<strong>UPDATE: </strong>I followed up with a post about Spring Camera <a title="XNA–A Simple Spring Camera in 2D" href="http://roundcrisis.com/2012/05/05/xnaa-simple-spring-camera-in-2d/">here</a>.
<h3>Other XNA 2d Camera posts</h3>
<a href="http://www.david-amador.com/2009/10/xna-camera-2d-with-zoom-and-rotation/" target="_blank">XNA Camera 2d with zoom and rotation</a>

Another one that I read after implementation <a href="http://pwnageincblog.blogspot.com/2012/02/terrain-weather-and-more.html">Terrain, Weather, and more!</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>962</wp:post_id>
  <wp:post_date>2012-04-19 15:21:10</wp:post_date>
  <wp:post_date_gmt>2012-04-19 15:21:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>xna-a-simple-2d-camera</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="2d"><![CDATA[2d]]></category>
  <category domain="post_tag" nicename="camera"><![CDATA[camera]]></category>
  <category domain="category" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="category" nicename="xna"><![CDATA[xna]]></category>
  <category domain="post_tag" nicename="xna"><![CDATA[xna]]></category>
  <wp:postmeta>
    <wp:meta_key>draftfeedback_requests</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:13:"4f902df82e5fd";a:3:{s:3:"key";s:13:"4f902df82e5fd";s:4:"time";s:10:"1334849016";s:7:"user_id";s:7:"5507891";}s:13:"4f902ef8f14a2";a:3:{s:3:"key";s:13:"4f902ef8f14a2";s:4:"time";s:10:"1334849272";s:7:"user_id";s:7:"5507891";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>draft_feedback</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:13:"4f902ef8f14a2";a:1:{i:0;a:2:{s:4:"time";s:10:"1334850562";s:7:"content";s:2406:"You don't say what the -3 is for when setting up the Camera. It's so that there's a gap between the two viewports, in case you don't know, which I'm sure you do:)

"What we are saying with that is that the ViewPort on the Camera class will have a Viewport that occupies the left side of the screen." Consider rewriting to "What we are saying with that is that this instance of the Camera class will maintain a Viewport object that only draws to the left half of the screen. The - 3 is there to add a visible gap between the left and right sides of the screen.

You could simplify the SpriteBatch Begin call by setting all the state parameters to null.

To answer your question, "match" is the wrong term:) What we're doing is projecting world coordinates into screen coordinates. Also, you can say "With the matrix transformation..." but it's more common to say "With the transformation matrix...".

"...will reposition the screen...". That's wrong. Remember, the screen never moves. We're projecting world coordinates into screen coordinates, so a better way to say this would be "The first translation matrix will reposition the world so that point (position.X, position.Y) lines up with the screen's origin. Think of it like this. You have a big sheet of paper on a table that has the entire world drawn on it, and you place a much smaller sheet of slightly transparent paper on top to represent the screen. Imagine the tank was drawn in the center of the large sheet. This translation moves the large sheet of paper behind the screen until the tank is centered at the top left of the smaller sheet."

Something wrong with this "please note that the parameters for X and Y have a minus sign prepended,   . in this case, the tank, so it would look like this". Did you forget to finish?

Did you write this in English:)? "The next line about with Matrix.CreateRotationZ , this creates a matrix that can be used to rotate a set of vertices around z,". How about this - "The next line, Matrix.CreateRotationZ, creates a matrix representing a rotation around the Z axis. The Z axis points straight out of the screen. In 2D, to perform a rotation, we always rotate around Z. To go back to the paper analogy, take a pen and position it where the tank is drawn in the world, pointing straight up from the table. The pen represents the Z axis. The rotation matrix simply rotates the big sheet around the pen. "

";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1341197488";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{s:0:"";a:2:{s:7:"user_id";s:0:"";s:7:"post_id";s:0:"";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-04-19 15:21:10]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>twitter_cards_summary_img_size</wp:meta_key>
    <wp:meta_value><![CDATA[a:6:{i:0;i:244;i:1;i:151;i:2;i:3;i:3;s:24:"width="244" height="151"";s:4:"bits";i:8;s:4:"mime";s:9:"image/png";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>431</wp:comment_id>
    <wp:comment_author><![CDATA[XNA&ndash;A Simple Spring Camera in 2D &laquo; roundcrisis.Find&lt;Solution&gt;()]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://roundcrisis.com/2012/05/05/xnaa-simple-spring-camera-in-2d/</wp:comment_author_url>
    <wp:comment_author_IP>69.170.134.211</wp:comment_author_IP>
    <wp:comment_date>2012-05-05 14:27:00</wp:comment_date>
    <wp:comment_date_gmt>2012-05-05 14:27:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] initial aspect of the camera and how to use it is on the previous post on cameras, so I ll let you go and have a look [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336230663</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336230664.0115";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336228020.6974";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Using Mercury Particle Engine with Windows Phone 7</title>
  <link>http://roundcrisis.com/2012/04/29/using-mercury-particle-engine-with-windows-phone-7/</link>
  <pubDate>Sun, 29 Apr 2012 17:46:18 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=984</guid>
  <description/>
  <content:encoded><![CDATA[This a very simple walk through to use Mercury on a Windows Phone 7 project.
<h3>Get the binaries</h3>
As far as I can see, Mercury supports Windows Phone 7 only in version 4.0, if you go to the project page you <em><strong>wont</strong> </em>find this on downloads, as it's not yet released.

<a title="Mercury Particle Engine Downloads page" href="http://mpe.codeplex.com/releases" target="_blank"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2012/04/capture6.png" alt="Capture" width="219" height="244" border="0" /></a>

So, you have to get the sources from <a href="http://mpe.codeplex.com/SourceControl/list/changesets" target="_blank">here</a> and build the project and find the correct binaries. An alternative is to download them from <a href="https://github.com/downloads/Andrea/MercuryParticleEngine/Mercury.4.0_WindowsPhone.zip" target="_blank">here</a> (I forked the repo and added the binary download for WP7 ) If you ask nicely I’ll add all the other binaries.

Once you have the binaries, include ProjectMercury.dll in the project where you want to use the particle engine, and add ProjectMercury.ContentPipeline.dll to the content project.
<h3>Code</h3>
I am not entirely sure where is the best place for the initialization code, you can probably place it in LoadContent, tho I did create the new instance of SpriteBatchRenderer in the constructor of my game class.
<div id="codeSnippetWrapper" style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:20px 0 10px;width:97.5%;">
<div id="codeSnippet" style="text-align:left;line-height:12pt;background-color:#f4f4f4;width:100%;">
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum1" style="color:#606060;"> 1:</span> <span style="color:#008000;">// It needs the GraphicsDeviceManager</span></pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum2" style="color:#606060;"> 2:</span> _spriteBatchRenderer = <span style="color:#0000ff;">new</span> SpriteBatchRenderer{ GraphicsDeviceService = _graphics };</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum3" style="color:#606060;"> 3:</span></pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum4" style="color:#606060;"> 4:</span> _particleEffect = Content.Load&lt;ParticleEffect&gt;(<span style="color:#006080;">"Demo1"</span>);</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum5" style="color:#606060;"> 5:</span></pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum6" style="color:#606060;"> 6:</span>             <span style="color:#0000ff;">foreach</span> (var emitter <span style="color:#0000ff;">in</span> _particleEffect.Emitters)</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum7" style="color:#606060;"> 7:</span>             {</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum8" style="color:#606060;"> 8:</span>                 emitter.ParticleTexture = Content.Load&lt;Texture2D&gt;(<span style="color:#006080;">"Star"</span>);</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum9" style="color:#606060;"> 9:</span>                 emitter.Initialise();</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum10" style="color:#606060;"> 10:</span>             }</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum11" style="color:#606060;"> 11:</span>             _spriteBatchRenderer.LoadContent(Content);</pre>
<!--CRLF-->

</div>
</div>
All you are doing is loading the particle effect through the content pipeline. Then you are iterating over the emitters in the effect to assign the ParticleTexture value, ie a texture you just loaded, and initializing each of the emitters. Finally you need to call LoadContent, calling this method is required because it creates the internal SpriteBatch instance* .

In the update you will need to call
<div id="codeSnippetWrapper" style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:20px 0 10px;width:97.5%;">
<div id="codeSnippet" style="text-align:left;line-height:12pt;background-color:#f4f4f4;width:100%;">
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum1" style="color:#606060;"> 1:</span> <span style="color:#008000;">//position is a Vector3</span></pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum2" style="color:#606060;"> 2:</span> _particleEffect.Trigger(<span style="color:#0000ff;">ref</span> position);</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum3" style="color:#606060;"> 3:</span> _particleEffect.Update((<span style="color:#0000ff;">float</span>) gameTime.ElapsedGameTime.TotalSeconds);</pre>
<!--CRLF-->

</div>
</div>
You need to Trigger the particle with a position (there are a number of overloads for this method, make sure you check this out) and then Update. If you fail to do either of those calls, no particles will be rendered.

Finally in the Draw function:
<div id="codeSnippetWrapper" style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:20px 0 10px;width:97.5%;">
<div id="codeSnippet" style="text-align:left;line-height:12pt;background-color:#f4f4f4;width:100%;">
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum1" style="color:#606060;"> 1:</span> var matrix = Matrix.Identity;</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum2" style="color:#606060;"> 2:</span> var cameraPosition = Vector3.Zero;</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum3" style="color:#606060;"> 3:</span> _spriteBatchRenderer.Transformation = Matrix.Identity;</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum4" style="color:#606060;"> 4:</span> _spriteBatchRenderer.RenderEffect(_particleEffect, <span style="color:#0000ff;">ref</span> matrix, <span style="color:#0000ff;">ref</span> matrix, <span style="color:#0000ff;">ref</span> matrix, <span style="color:#0000ff;">ref</span> cameraPosition);</pre>
<!--CRLF-->

</div>
</div>
Please find a full working sample <a href="https://github.com/Andrea/MercuryParticleEngineWP7Sample" target="_blank">here</a>

And this would be what you see when you run the project <img class="wlEmoticon wlEmoticon-smile" style="border-style:none;" src="http://roundcrisis.files.wordpress.com/2012/04/wlemoticon-smile1.png" alt="Smile" />

<a href="http://roundcrisis.files.wordpress.com/2012/04/capture7.png"><img style="background-image:none;padding-left:0;padding-right:0;display:inline;padding-top:0;border:0;" title="Capture" src="http://roundcrisis.files.wordpress.com/2012/04/capture_thumb6.png" alt="Capture" width="244" height="131" border="0" /></a>
<h3>Some thoughts</h3>
I have to admit, I find it strange that  the constructor for SpriteBatchRenderer doesn't require GraphicsDeviceManager, and instead you need to initialize the property, if you  don't set this property before you call LoadContent, then you get a  NullReferenceException, as this is where the internal instance of SpriteBatch  is created and a GraphicsDevice is required.

My suggestion here would be to have two versions of the constructors, one where you pass the reference of spriteBatch you have, and another one where you pass the instance of GraphicsDevice, as all usages point to only actually consuming that.

These are just some thoughts on the API, and there might be really good reasons for the decisions made this way that I don't know about. I think that all in all this is a great project, thanks to the creators and maintainers of it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>984</wp:post_id>
  <wp:post_date>2012-04-29 17:46:18</wp:post_date>
  <wp:post_date_gmt>2012-04-29 17:46:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>using-mercury-particle-engine-with-windows-phone-7</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="mercury"><![CDATA[mercury]]></category>
  <category domain="post_tag" nicename="particle"><![CDATA[particle]]></category>
  <category domain="post_tag" nicename="particle-engine"><![CDATA[particle engine]]></category>
  <category domain="category" nicename="xna"><![CDATA[xna]]></category>
  <category domain="post_tag" nicename="xna"><![CDATA[xna]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{s:0:"";a:2:{s:7:"user_id";s:0:"";s:7:"post_id";s:0:"";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1346765294;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-04-29 17:46:18]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>twitter_cards_summary_img_size</wp:meta_key>
    <wp:meta_value><![CDATA[a:6:{i:0;i:219;i:1;i:244;i:2;i:3;i:3;s:24:"width="219" height="244"";s:4:"bits";i:8;s:4:"mime";s:9:"image/png";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>439</wp:comment_id>
    <wp:comment_author><![CDATA[Jacquot]]></wp:comment_author>
    <wp:comment_author_email>kryspol.wyszkow@interia.pl</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/profile.php?id=100003406003187</wp:comment_author_url>
    <wp:comment_author_IP>85.193.198.163</wp:comment_author_IP>
    <wp:comment_date>2012-05-21 23:28:52</wp:comment_date>
    <wp:comment_date_gmt>2012-05-21 23:28:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I wrote a couple of cuostm WinForms controls; one that inherits from PictureBox to represent the image thumbnails and draw a border around them, and another that inherits from FlowLayoutPanel to act as a container for the pictures, with some simple selection and deselection code.I'll upload the source in another post so you can see it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337642933.2997";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337843610</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337843610.4336";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>447</wp:comment_id>
    <wp:comment_author><![CDATA[Hernan]]></wp:comment_author>
    <wp:comment_author_email>hzaldivar79@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>https://www.facebook.com/acomicofzombies</wp:comment_author_url>
    <wp:comment_author_IP>190.192.49.100</wp:comment_author_IP>
    <wp:comment_date>2012-05-29 20:10:18</wp:comment_date>
    <wp:comment_date_gmt>2012-05-29 20:10:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great example!!! did you test it on monogame or exen?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338322218.9793";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1338363722</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338363722.8835";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>448</wp:comment_id>
    <wp:comment_author><![CDATA[Hernan]]></wp:comment_author>
    <wp:comment_author_email>hzaldivar79@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>https://www.facebook.com/acomicofzombies</wp:comment_author_url>
    <wp:comment_author_IP>190.192.49.100</wp:comment_author_IP>
    <wp:comment_date>2012-05-29 20:22:40</wp:comment_date>
    <wp:comment_date_gmt>2012-05-29 20:22:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[if you say " I find it strange that  the constructor for SpriteBatchRenderer doesn’t require GraphicsDeviceManager, and instead you need to initialize the property, if you  don’t set this property before you call LoadContent, then you get a  NullReferenceException", why is this line commented con the sample? 

_spriteBatchRenderer = new SpriteBatchRenderer();//{ GraphicsDeviceService = _graphics };

Greetings from Argentina
HERNAN]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338322960.6284";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338922221.0217";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1338922220</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>478</wp:comment_id>
    <wp:comment_author><![CDATA[bzkarcade]]></wp:comment_author>
    <wp:comment_author_email>le_bazooke@yahoo.com.mx</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>189.242.55.37</wp:comment_author_IP>
    <wp:comment_date>2012-08-29 18:16:37</wp:comment_date>
    <wp:comment_date_gmt>2012-08-29 18:16:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[first of all thank you very much for your example.

 Download the effects editor, create an effect, add it to the project, and causes error, after some tests, I found that the xml files have a different structure.

 I guess 3.1 to 4.0 change the structure

 but how I can migrate the effects of the editor to version 4.0?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1346264197.2288110256195068359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"bzkarcade";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1347302276</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1347302276.997208118438720703125;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>433</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>109.255.123.202</wp:comment_author_IP>
    <wp:comment_date>2012-05-15 20:07:47</wp:comment_date>
    <wp:comment_date_gmt>2012-05-15 20:07:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Juan:
Did you have a look at the full sample? https://github.com/Andrea/MercuryParticleEngineWP7Sample?

In a game that you just created from the File-&gt; New Game Project , graphics would be your private instance of GraphicsDeviceManager . Can you give me more details about the problem you are having? 
Cheers

Andrea]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337112468.6473";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337112468</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>432</wp:comment_id>
    <wp:comment_author><![CDATA[Juan Santos]]></wp:comment_author>
    <wp:comment_author_email>juansantos89@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>199.27.101.10</wp:comment_author_IP>
    <wp:comment_date>2012-05-12 22:05:29</wp:comment_date>
    <wp:comment_date_gmt>2012-05-12 22:05:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi. First of all thanks for the tutorial. Im having problem with the line { GraphicsDeviceService = _graphics };. The compiler says the name does not exist. Then I tried your suggestions of the 'some thoughts' area and it didnt work either. Any tips? Thanks]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337112137</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337112137.2528";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336860329.6843";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>449</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>87.198.124.131</wp:comment_author_IP>
    <wp:comment_date>2012-05-30 07:42:19</wp:comment_date>
    <wp:comment_date_gmt>2012-05-30 07:42:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Will try very soon :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>447</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338363742.0741";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1338363741</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>XNA–A Simple Spring Camera in 2D</title>
  <link>http://roundcrisis.com/2012/05/05/xnaa-simple-spring-camera-in-2d/</link>
  <pubDate>Sat, 05 May 2012 14:10:29 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=990</guid>
  <description/>
  <content:encoded><![CDATA[Cameras are cool, so lets keep at it and try a spring camera, i.e. one that follows you around.

The initial aspect of the camera and how to use it is on the <a title="XNA – A Simple 2D Camera" href="http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/" target="_blank">previous post</a> on cameras, so I ll let you go and have a look there.

The spring camera is very similar to a simple camera, but with Hooke's Law applied. Hooke's Law states that the extension of a helical spring is directly proportional to the weight applied, provided the elastic limit of the spring is not exceeded. I read this a few times and couldnt figure how to turn this into code , so I went to Khan Academy and found this <a href="http://www.youtube.com/watch?feature=player_embedded&amp;v=ZzwuHS9ldbY#!" target="_blank">video</a>, where the formula <strong><span style="font-size:medium;">F = –k x</span></strong> is explained.

[youtube=http://www.youtube.com/watch?feature=player_embedded&amp;v=ZzwuHS9ldbY]

If we use the formula as is, then the spring would be “springing” forever, so when calculating the force we will use some damping. So the new update method in Camera.cs now looks like this
<div id="codeSnippetWrapper" style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:20px 0 10px;width:97.5%;">
<div id="codeSnippet" style="text-align:left;line-height:12pt;background-color:#f4f4f4;width:100%;">
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum1" style="color:#606060;"> 1:</span> <span style="color:#0000ff;">public</span> <span style="color:#0000ff;">void</span> Update(<span style="color:#0000ff;">float</span> elapsedSeconds, <span style="color:#0000ff;">float</span> rotation, Vector2 desiredPosition, <span style="color:#0000ff;">float</span> zoom)</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum2" style="color:#606060;"> 2:</span>     {</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum3" style="color:#606060;"> 3:</span>         var delta = _position - desiredPosition;</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum4" style="color:#606060;"> 4:</span>         var force = -SpringStiffness * delta - Damping * _velocity;</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum5" style="color:#606060;"> 5:</span></pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum6" style="color:#606060;"> 6:</span>         var acceleration = force / Mass;</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum7" style="color:#606060;"> 7:</span>         _velocity += acceleration * elapsedSeconds;</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum8" style="color:#606060;"> 8:</span>         _position += _velocity * elapsedSeconds;</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum9" style="color:#606060;"> 9:</span></pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum10" style="color:#606060;"> 10:</span>         Transform = Matrix.CreateTranslation(-_position.X, -_position.Y, 0) *</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum11" style="color:#606060;"> 11:</span>                     Matrix.CreateRotationZ(rotation) *</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum12" style="color:#606060;"> 12:</span>                     Matrix.CreateScale(zoom, zoom, 1)*</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:white;margin:0;width:100%;"><span id="lnum13" style="color:#606060;"> 13:</span>                     Matrix.CreateTranslation(_halfScreenSize.X, _halfScreenSize.Y, 0);</pre>
<!--CRLF-->
<pre style="text-align:left;line-height:12pt;background-color:#f4f4f4;margin:0;width:100%;"><span id="lnum14" style="color:#606060;"> 14:</span>     }</pre>
<!--CRLF-->

</div>
</div>
The line

var<span style="color:#ff6600;"> force = -SpringStiffness * delta</span><span style="color:#008000;"> - Damping * _velocity</span>;

Is respecting the formula F= –kx, where k is the SpringStiffness and x is the delta(in orange). The second part of this assignment(in green)  is applying some damping proportional to the velocity.

Once we have the result of calculating the force, we use the force vector to calculate the acceleration that, in turn that value is used to calculate the velocity and position.

Finally, once we have the position, the matrix transformation is calculated in the same way we calculated this for the simple camera (<a title="XNA – A Simple 2D Camera" href="http://roundcrisis.com/2012/04/19/xna-a-simple-2d-camera/" target="_blank">in previous post</a>).

You can get a complete working sample <a href="https://github.com/Andrea/SpringCamera2dXNA" target="_blank">here</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>990</wp:post_id>
  <wp:post_date>2012-05-05 14:10:29</wp:post_date>
  <wp:post_date_gmt>2012-05-05 14:10:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>xnaa-simple-spring-camera-in-2d</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="acceleration-force-mass"><![CDATA[acceleration force mass]]></category>
  <category domain="post_tag" nicename="programming"><![CDATA[programming]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{s:0:"";a:2:{s:7:"user_id";s:0:"";s:7:"post_id";s:0:"";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:7:"5507891";s:7:"blog_id";s:7:"5261556";s:9:"mod_stamp";s:19:"2012-05-05 15:26:10";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1353750894;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-05-05 14:10:29]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Busy May  with RavenDB</title>
  <link>http://roundcrisis.com/2012/05/16/busy-may-with-ravendb/</link>
  <pubDate>Wed, 16 May 2012 10:17:23 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1001</guid>
  <description/>
  <content:encoded><![CDATA[<p>Just a small post to let you know. I’ll be speaking in two conferences this month.</p>  <p>&#160;</p>  <p>The 26th of May at <a href="http://www.dddsouthwest.com/Agenda/tabid/55/Default.aspx" target="_blank">DDD South West</a>. The topic is Raven DB Day to Day</p>  <p><a href="http://www.dddsouthwest.com/Agenda/tabid/55/Default.aspx"><img style="background-image:none;border-bottom:0;border-left:0;padding-left:0;padding-right:0;display:inline;border-top:0;border-right:0;padding-top:0;" title="Capture" border="0" alt="Capture" src="http://roundcrisis.files.wordpress.com/2012/05/capture.png" width="203" height="105" /></a></p>  <p>Closely followed by an Introduction to Raven DB in <a href="http://skillsmatter.com/podcast/open-source-dot-net/ravendb-intro">Progressive.net (London)</a> the 31st of May</p>  <p><a href="http://skillsmatter.com/podcast/open-source-dot-net/ravendb-intro"><img style="background-image:none;border-bottom:0;border-left:0;padding-left:0;padding-right:0;display:inline;border-top:0;border-right:0;padding-top:0;" title="Untitled" border="0" alt="Untitled" src="http://roundcrisis.files.wordpress.com/2012/05/untitled.png" width="244" height="68" /></a></p>  <p>&#160;</p>    <p>If there is a particular topic you want to see there, please let me know</p>  <p>Cheers</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1001</wp:post_id>
  <wp:post_date>2012-05-16 10:17:23</wp:post_date>
  <wp:post_date_gmt>2012-05-16 10:17:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>busy-may-with-ravendb</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ravendb"><![CDATA[ravenDB]]></category>
  <category domain="post_tag" nicename="ravendb"><![CDATA[ravenDB]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <category domain="post_tag" nicename="uk"><![CDATA[uk]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1347124677;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{s:0:"";a:2:{s:7:"user_id";s:0:"";s:7:"post_id";s:0:"";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-05-16 10:17:23]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Raven DB: Day to day at #DDDSW</title>
  <link>http://roundcrisis.com/2012/05/29/raven-db-day-to-day-at-dddsw/</link>
  <pubDate>Tue, 29 May 2012 09:13:00 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=1003</guid>
  <description/>
  <content:encoded><![CDATA[So I was at <a href="http://dddsouthwest.com/Agenda/tabid/55/Default.aspx" target="_blank">DDD South west</a> last saturday presenting Raven DB: day to day.

The day flew by with great presentations. I got to see:
<ul>
	<li>Performance and Scalability, the Stack Exchange way by Marc Gravell . I have to admit I didn't expect that much SQL on the presentation but interesting nonetheless, would really like to hear him talk more about how they use Redis and SQL together more. Also when he started talking about serialization we ran out of time :( There was a lot of questions and Marc did a great job at answering them.</li>
	<li>StyleCop – Breaking down the barriers to entry by Gary Park . Really well presented, and a few interesting details about team city and other extensions.</li>
	<li>Raven DB: day to day, by me :D  I m probably the worse person to judge how this went, from my side of things, I heard you guys laugh and ask questions, in my books, that is pretty ok. Feedback from people always great ( Phil Thanks for yours already)</li>
	<li>During lunch I wanted to go to the grok talks however I ended up catching some sun and a really interesting chat with Matt (he contributes to RavenDB , trying to convince the man he should really write some posts about facets )</li>
	<li>WebSockets and SignalR - Building the real-time, multi-user interactive web by Chris Alcock. I haven't played yet with SignalR yet so it was good to see this, I kinda knew what to expect tho. Well presented</li>
	<li>NoSql Document Databases: Why would you want to use one? by Ian Russell, Great intro to NoSQL, really liked Ian relaxed approach to questions. Great session</li>
</ul>
Just in case anyone is interested, my slides for the talk. Thanks to all attendees and organizers for a great weekend

[slideshare id=13115644&amp;doc=ravendb-120529033908-phpapp01]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1003</wp:post_id>
  <wp:post_date>2012-05-29 09:13:00</wp:post_date>
  <wp:post_date_gmt>2012-05-29 09:13:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>raven-db-day-to-day-at-dddsw</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bristol"><![CDATA[bristol]]></category>
  <category domain="category" nicename="conference"><![CDATA[conference]]></category>
  <category domain="post_tag" nicename="dddsw"><![CDATA[dddsw]]></category>
  <category domain="post_tag" nicename="nosql"><![CDATA[nosql]]></category>
  <category domain="category" nicename="ravendb"><![CDATA[ravenDB]]></category>
  <category domain="post_tag" nicename="ravendb"><![CDATA[ravenDB]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1346427796;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{s:0:"";a:2:{s:7:"user_id";s:0:"";s:7:"post_id";s:0:"";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-05-29 09:13:00]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>446</wp:comment_id>
    <wp:comment_author><![CDATA[My impressions of dddsw 4]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.gep13.co.uk/blog/my-impressions-of-dddsw-4/</wp:comment_author_url>
    <wp:comment_author_IP>81.17.250.62</wp:comment_author_IP>
    <wp:comment_date>2012-05-29 09:46:06</wp:comment_date>
    <wp:comment_date_gmt>2012-05-29 09:46:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] West OAuth Session by @_jimmysDDDSW 4 – Stylecop: Breaking down the barriers to entry by @gep13Raven DB: Day to day at #DDDSW by @silverspoonmissing friendsUnfortunately, Craig Murphy (@CAMURPHY) wasn’t able to attend [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338284766.3608";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1338285400</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338285400.0689";s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Reading Diary: Real World Functional Programming– Day 1</title>
  <link>http://roundcrisis.com/2012/06/16/reading-diary-real-world-functional-programming-day-1/</link>
  <pubDate>Sat, 16 Jun 2012 09:15:31 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1009</guid>
  <description/>
  <content:encoded><![CDATA[<p>I‘ve been feeling that I m missing out by not knowing much about functional programming and this book was recommended to my many times, so I started reading it. </p>  <h3>Expectation</h3>  <p>I expect to learn more about functional programing , I would like to be able to translate the ideas to other functional programming languages.</p>  <h3>Objective</h3>  <p>I would like to be able to use functional programming ideas day to day on game development, there is a lot of asynchronous flow control&#160; in games&#160; that I hope, can be improved. The problem with this is that features that are ok to use in other types of development, such as LINQ, don’t perform well enough on game development, at least that’s what the performance analysis was showing us in some sectors of the code.</p>  <p>I think this objective is perhaps overly optimistic, the world would be too boring for me if I set myself reachable goals all the time, right?</p>  <h3>Intro and part of Chapter 1</h3>  <p>Going over some basic functional ideas, but I m already feeling I should have read this book earlier. Some comments as I go along:</p>  <ul>   <li>There are some parts of the chapter where I feel like the author is trying to sell me the idea, I can understand why, but I m already reading the book, no need for that.</li>    <li>I like the way important concepts are highlighted</li>    <li>Well written, ideas are exposed in a super clear way</li>    <li>No point in reading this book in a hurry, If I don't fully get an idea, I can’t afford to move on</li> </ul>  <p>&#160;</p>  <p>Leaving it here for today … </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1009</wp:post_id>
  <wp:post_date>2012-06-16 09:15:31</wp:post_date>
  <wp:post_date_gmt>2012-06-16 09:15:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>reading-diary-real-world-functional-programming-day-1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="book-reviews"><![CDATA[book reviews]]></category>
  <category domain="post_tag" nicename="books"><![CDATA[books]]></category>
  <category domain="post_tag" nicename="functional"><![CDATA[functional]]></category>
  <category domain="category" nicename="functional-programming"><![CDATA[functional programming]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";i:0;s:4:"time";i:1364727562;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:7:"5507891";s:7:"blog_id";s:7:"5261556";s:9:"mod_stamp";s:19:"2012-06-16 09:22:22";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-06-16 09:15:31]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Reading Diary: Real World Functional Programming– Day 2</title>
  <link>http://roundcrisis.com/2012/07/23/reading-diary-real-world-functional-programming-day-2/</link>
  <pubDate>Mon, 23 Jul 2012 16:32:06 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1012</guid>
  <description/>
  <content:encoded><![CDATA[<p>A reading diary is my way to discuss with myself what I think about the book as I read it. It probably has errors of different kinds. </p>  <p>Some notes on the remaining of Chapter 1</p>  <ul>   <li>F# intro, how its mostly functional but supports some OO features </li>    <li>How C# incorporates functional ideas. </li>    <li>Reading about declarative programming, these made no sense      <ul>       <li>Definition of declarative programming style. Logic without the details… mmm ok lets see how this goes </li>        <li>Functional means not only we can add new commands but also new structures </li>     </ul>   </li>    <li>Code, finally a code example came about and it was all cleared up </li>    <li>Concurrency friendly application design, I was expecting the how but I got a birds eye. Patience </li>    <li>The section on how functional style shapes your code is cool, as it details how your code will (hopefully) slowly change. It highlights      <ul>       <li>the fact that OO design is still useful, </li>        <li>it helps simplifying some patterns </li>        <li>make the code more readable (this I m not so sure about, I’ve read code from people who started learning functional programming and on my view the code was less readable and harder to follow, particularly on tests) </li>     </ul>   </li>    <li>Section 1.4 is all example based. Not mad about the fact they used WPF for one of them(not a fan), but no biggie, it gets the point across anyway . The author obviously wanted the reader to understand what declarative and imperative means and understand the difference </li>    <li>I can start to see how this style of programming could be really beneficial </li>    <li>Got as far as the recursion samples with C# (2.2.3)</li> </ul>  <p>&#160;</p>  <p>That’s all for today. It’s been hard to find time to read up on this. </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1012</wp:post_id>
  <wp:post_date>2012-07-23 16:32:06</wp:post_date>
  <wp:post_date_gmt>2012-07-23 16:32:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>reading-diary-real-world-functional-programming-day-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="book"><![CDATA[book]]></category>
  <category domain="post_tag" nicename="book"><![CDATA[book]]></category>
  <category domain="category" nicename="functional-programming"><![CDATA[functional programming]]></category>
  <category domain="post_tag" nicename="functional-programming"><![CDATA[functional programming]]></category>
  <category domain="post_tag" nicename="reading"><![CDATA[reading]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-07-23 16:32:06]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Fail to add a sprite to XNA content project</title>
  <link>http://roundcrisis.com/2012/08/06/fail-to-add-a-sprite-to-xna-content-project/</link>
  <pubDate>Mon, 06 Aug 2012 10:05:53 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1018</guid>
  <description/>
  <content:encoded><![CDATA[<p>This is not a big one but it’s good to know.</p>  <p>I was spiking a little thing in a new XNA 4.0 game project and then attempting to include a <em>png</em> into the content folder, the file was there, I could see it (using show all files menu) but when using the context menu “Include in project” nothing was happening. Why?</p>  <p><a href="http://roundcrisis.files.wordpress.com/2012/08/capture.png"><img style="margin:0 0 0 5px;display:inline;" title="Capture" alt="Capture" src="http://roundcrisis.files.wordpress.com/2012/08/capture_thumb.png" width="222" height="124" /></a></p>  <p>First I thought maybe the file type is not supported, but PNGs are. Then someone pointed out, is this a project on a <a href="http://blogs.msdn.com/b/shawnhar/archive/2010/03/12/reach-vs-hidef.aspx" target="_blank">Reach Profile</a>? textures larger than 2048 are not supported, this was a large sprite-sheet. So, I changed the profile of the project and I was able to Include the file. <img style="border-style:none;" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://roundcrisis.files.wordpress.com/2012/08/wlemoticon-smile.png" /></p>  <p>Happy Monday</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1018</wp:post_id>
  <wp:post_date>2012-08-06 10:05:53</wp:post_date>
  <wp:post_date_gmt>2012-08-06 10:05:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fail-to-add-a-sprite-to-xna-content-project</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="gamedev-xna-sprite-xna-profiles"><![CDATA[gamedev XNA sprite Xna-profiles]]></category>
  <category domain="category" nicename="xna"><![CDATA[xna]]></category>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-08-06 10:05:53]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>XNA PSD ContentProcessor </title>
  <link>http://roundcrisis.com/2012/09/11/xna-psd-contentprocessor/</link>
  <pubDate>Tue, 11 Sep 2012 15:34:53 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=1026</guid>
  <description/>
  <content:encoded><![CDATA[I needed a psd content processor and found one <a href="http://blogs.msdn.com/b/shawnhar/archive/2009/05/21/photoshop-texture-importer-redux.aspx" target="_blank">here</a> it is based on the <a href="http://www.endogine.com/CS/" target="_blank">EndoEngine</a>. The one available depended on XNA 3.1,  I did some clean up on the project and made it available via my account on <a href="http://github.com/Andrea/Photoshop-Content-Processor-for-XNA" target="_blank">github. <img class="alignright" src="https://a248.e.akamai.net/assets.github.com/images/error/angry_unicorn.png?1334862345" alt="" width="120" height="123" /></a>

We (at <a href="http://www.batcatgames.com" target="_blank">BatCat Games</a>) are working on a Content hot loader that will be available open source soon (at the moment it doesn't really work ) it will probably include this content processor.

The code comes with a sample game that displays a Photoshop file as a texture.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1026</wp:post_id>
  <wp:post_date>2012-09-11 15:34:53</wp:post_date>
  <wp:post_date_gmt>2012-09-11 15:34:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>xna-psd-contentprocessor</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="content-processor"><![CDATA[content processor]]></category>
  <category domain="category" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="open-source"><![CDATA[open source]]></category>
  <category domain="category" nicename="oss"><![CDATA[OSS]]></category>
  <category domain="post_tag" nicename="photoshop-content-processor"><![CDATA[photoshop content processor]]></category>
  <category domain="post_tag" nicename="texture"><![CDATA[texture]]></category>
  <category domain="post_tag" nicename="xna"><![CDATA[xna]]></category>
  <category domain="post_tag" nicename="xna-4-0"><![CDATA[xna-4.0]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:7:"5507891";s:7:"blog_id";s:7:"5261556";s:9:"mod_stamp";s:19:"2012-09-11 15:38:13";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-09-11 15:34:53]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Directory Truncator</title>
  <link>http://roundcrisis.com/2012/12/27/directory-truncator/</link>
  <pubDate>Thu, 27 Dec 2012 14:45:06 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1039</guid>
  <description/>
  <content:encoded><![CDATA[<p>Recently I needed some code to truncate a directory of files or folders, for example I wanted to remove files or directories given a max number of files or directories. <a href="http://en.wikipedia.org/wiki/Weaire%E2%80%93Phelan_structure" target="_blank"><img style="margin:0 0 0 5px;display:inline;float:right;" title="Polyhedral &#039;foam&#039; by truncated octahedra" alt="Polyhedral &#039;foam&#039; by truncated octahedra" align="right" src="http://upload.wikimedia.org/wikipedia/commons/9/93/Truncated_octahedra.jpg" /></a>This is a common task when you have backups and you don’t want every single backup since forever, but you want to keep the last 5 ones. Another common scenario is when you have builds and you only probably want the last 10 (particularly if your build is used only by 4 people that seat across from you).</p>  <p>Anyhow, I have written similar code in the past and I know I will probably need something that does the same thing in the future, so I created a super small library and I put it on <a href="https://github.com/Andrea/DirectoryTruncator" target="_blank">github</a>. </p>  <p>I think the tests explain better what the code does than I do. So have a <a href="https://github.com/Andrea/DirectoryTruncator/blob/master/DirectoryTruncator.Tests/DirectoryTruncatorTests.cs" target="_blank">look</a>.</p>  <p>There are a few things that I want to add to this project</p>  <ol>   <li>Logging and or console output so you know what happened, I couldnt so far decide on what is the best approach or if I want to choose one, so I ll do that tomorrow .</li>    <li>On error, proceed to the next file/folder.</li>    <li>Have a StartsWith parameter(on both methods), so that it only deletes files or directory that start with </li>    <li>Turn it into a service</li> </ol>  <p>There are probably more things that could be done with it, but honestly, that is all <strong>I</strong> need.</p>  <p>Comments, questions or any feedback welcome!</p>  <p><font color="#a5a5a5">Note: The image above is totally unrelated but I found it looking for truncated. What I found interesting about it is that the article this image relates to is about the Wearie-Phelan structure, this structure inspired the Beijing National Aquatics Centre and other cool stuff you can read </font><a href="http://en.wikipedia.org/wiki/Weaire%E2%80%93Phelan_structure" target="_blank"><font color="#a5a5a5">here</font></a><font color="#a5a5a5">.</font></p>  <p>Happy holidays</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1039</wp:post_id>
  <wp:post_date>2012-12-27 14:45:06</wp:post_date>
  <wp:post_date_gmt>2012-12-27 14:45:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>directory-truncator</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="open-source-directory"><![CDATA[open source directory]]></category>
  <category domain="category" nicename="oss"><![CDATA[OSS]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-12-27 14:45:06]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>521</wp:comment_id>
    <wp:comment_author><![CDATA[machadogj]]></wp:comment_author>
    <wp:comment_author_email>machadogj@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/machadogj</wp:comment_author_url>
    <wp:comment_author_IP>190.189.126.16</wp:comment_author_IP>
    <wp:comment_date>2013-01-02 15:27:19</wp:comment_date>
    <wp:comment_date_gmt>2013-01-02 15:27:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice util! A chocolatey install for this would kill.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1357209551</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1357140439.7028539180755615234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"machadogj";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>519</wp:comment_id>
    <wp:comment_author><![CDATA[DirectoryTruncator&ndash;Update II &laquo; roundcrisis.Find&lt;Solution&gt;()]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://roundcrisis.com/2012/12/30/directorytruncatorupdate-ii/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.112.14</wp:comment_author_IP>
    <wp:comment_date>2012-12-30 22:33:06</wp:comment_date>
    <wp:comment_date_gmt>2012-12-30 22:33:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] &laquo; Directory&nbsp;Truncator [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1356906786.957250118255615234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1356906891</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1356906891.4691030979156494140625;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>567</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>109.255.230.250</wp:comment_author_IP>
    <wp:comment_date>2013-01-21 22:35:35</wp:comment_date>
    <wp:comment_date_gmt>2013-01-21 22:35:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Had a quick look, nice. I need to figure how to make a chocolatey install :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>521</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358807736</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358807736.4224131107330322265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>DirectoryTruncator–Update II</title>
  <link>http://roundcrisis.com/2012/12/30/directorytruncatorupdate-ii/</link>
  <pubDate>Sun, 30 Dec 2012 22:33:03 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1040</guid>
  <description/>
  <content:encoded><![CDATA[<p>So, after the last post, where I <a href="http://roundcrisis.com/2012/12/27/directory-truncator/" target="_blank">introduced Directory truncator</a>, I present you some extra work I have just committed. My plans for it from the previous post where</p>  <ol>   <li>Logging and or console output so you know what happened, I couldn't so far decide on what is the best approach or if I want to choose one, so I ll do that tomorrow . </li>    <li>On error, proceed to the next file/folder. </li>    <li>Have a StartsWith parameter(on both methods), so that it only deletes files or directory that start with </li>    <li>Turn it into a service</li> </ol>  <p>So, this is what happened,</p>  <ol>   <li>After thinking a little bit about it, I just went for NLog, it does what I need it to do for the moment. Logs need no test, so I added a few log messages, there is probably some log messages missing. </li>    <li>For this one, I ended up making a decision I’m still mulling over. I needed to test that if there is an error on file delete, the process will log and keep going. How to do that? well, I created a thin wrapper around the file system, as far as I could see it, there was no other way to simulate the scenario of you have two files to delete and one of them is deleted before we get to it. I have yet to do this for TruncateByDirectory.</li> </ol>  <p>This is all for today, and since this is probably the last post of the year. Merry New Year!!!</p>  <div style="margin:0;display:inline;float:none;padding:0;" id="scid:5737277B-5D6D-4f48-ABFC-DD9C333F4C5D:40f7bf86-4d50-4e24-84b2-b9916c04691d" class="wlWriterEditableSmartContent"><div>[youtube=http://www.youtube.com/watch?v=JOiN5TQhP2Q&amp;w=448&amp;h=252&amp;hd=1]</div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1040</wp:post_id>
  <wp:post_date>2012-12-30 22:33:03</wp:post_date>
  <wp:post_date_gmt>2012-12-30 22:33:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>directorytruncatorupdate-ii</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2012-12-30 22:33:03]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Mono for android</title>
  <link>http://roundcrisis.com/2013/01/12/mono-for-android/</link>
  <pubDate>Sat, 12 Jan 2013 13:24:15 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1043</guid>
  <description/>
  <content:encoded><![CDATA[<p>I’ve been playing with mono for android the last few days. I have also tried it about 2 years ago. It was a good tool then, and it got much much better.</p>  <p>Getting started is pretty simple, you download the ins<img style="margin:0 0 0 5px;display:inline;float:right;" align="right" src="http://blog.xamarin.com/wp-content/uploads/2012/05/android-i86.png" />taller, install. It will install all prerequisites for you on your machine. Allegedly this failed the first time but worked the second time, I had a log to look at to give me some idea of the problem.</p>  <p>Once I got set up I started reading the documentation. Not only it was in place, but also, it was written to the right level (i.e. assumes you are a smart individual), I then moved on to pricing, 400 usd ouch, but I will come back to this. If you don’t activate the product&#160; you can test on the emulator. It gives you some sort of idea of what the experience is like. The emulator is slow, and brittle, but that is something we should talk to Google about.</p>  <p>At this point I started going over some tutorials, using both monodevelop and VS just for the fun of it. The main thing I miss from VS when I’m in monodevelop is <a href="http://www.jetbrains.com/resharper/" target="_blank">resharper</a> <img style="border-style:none;" class="wlEmoticon wlEmoticon-sadsmile" alt="Sad smile" src="http://roundcrisis.files.wordpress.com/2013/01/wlemoticon-sadsmile.png" />. I had no real troubles getting&#160; on with creating a little app (a games reviews collector) .</p>  <p>I went ahead and bought the license, activated and pushed to the device and it is much faster than using the emulator.</p>  <p>One gotcha was that I wanted to write files and then be able to access them via USB, I kept getting a file permission error, I needed to set up the permission on the manifest file, it wasn’t obvious to me, but that is ok. All the information I needed was <a href="http://docs.xamarin.com/Android/Guides/Advanced_Topics/Working_with_AndroidManifest.xml" target="_blank">here</a>.</p>  <p>Deployment to other devices is also pretty simple, you build the app on release mode and use the *-Signed.apk, there are other ways to deploy <a href="http://docs.xamarin.com/Android/Guides/Deployment%2C_Testing%2C_and_Metrics/publishing_an_application" target="_blank">here</a>. </p>  <p>Mostly the reason for this blog post is that I was a bit surprised with how good an experience it was (so far) .</p>  <p>Next I will be working with some eventually connected storage, I heard good things about <a href="https://www.parse.com/" target="_blank">Parse</a>. </p>  <p>I gave myself a pomodoro to finish this post, so I’ll have to talk about pricing in tools some other time <img style="border-style:none;" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://roundcrisis.files.wordpress.com/2013/01/wlemoticon-smile.png" />.</p>  <p>Till the next time</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1043</wp:post_id>
  <wp:post_date>2013-01-12 13:24:15</wp:post_date>
  <wp:post_date_gmt>2013-01-12 13:24:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>mono-for-android</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="mono-for-android-permissions-android"><![CDATA["mono for android" "permissions" "android"]]></category>
  <category domain="category" nicename="c"><![CDATA[c#]]></category>
  <category domain="category" nicename="mono-for-android"><![CDATA[mono for android]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2013-01-12 13:24:15]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>545</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>178.250.118.134</wp:comment_author_IP>
    <wp:comment_date>2013-01-14 17:18:05</wp:comment_date>
    <wp:comment_date_gmt>2013-01-14 17:18:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[It depends on the size of your company AFAIK. So if you are the developer and your company has less than 10 employees then you can get away with the personal one. I ll ask one of the Xamarin dudes and update]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>543</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358183885</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358183885.1100409030914306640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>543</wp:comment_id>
    <wp:comment_author><![CDATA[Brian]]></wp:comment_author>
    <wp:comment_author_email>brianjamesbolger@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>89.191.48.66</wp:comment_author_IP>
    <wp:comment_date>2013-01-14 13:57:12</wp:comment_date>
    <wp:comment_date_gmt>2013-01-14 13:57:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice post.

I too think the pricing is a little expensive. I'd like to write enterprise apps (internal) for Android &amp; iOS. AFAIK I need an enterprise license for both platforms, that's 2K!

Not to ignore that fact that I'll probably need to buy a MAC for the iOS stuff anyway...

Development ain't cheap :-(

B]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358171832.9882919788360595703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358183823</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>A build system for games</title>
  <link>http://roundcrisis.com/2013/01/28/a-build-system-for-games/</link>
  <pubDate>Mon, 28 Jan 2013 23:22:02 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1046</guid>
  <description/>
  <content:encoded><![CDATA[As you might or might not know, I am one of the founders of BatCat Games, the important word about that sentence is <strong>games. </strong>The fact that we make games put a series of differences into our production that doesn’t generally affect non game software development cycles.

For a start art and animation are key in a game, so are visual effects. In build server terms, that generally means two things: It requires space(for content building) and quite probably a graphics card (for the visual effects). Our ideal solution would be to have a virtual machine per supported platform , but we found that none of the virtualization software (VirtualBox, VMWare, etc) virtualizes the graphics card reliably (if you found a way, please let me know)  so we are running our server on a non virtual machine.

The objective is to build the whole game, tools, etc. at each commit. There are a series of tools available in the market at the moment that allows you to do just that. For example: TeamCity, Jenkins, CruiseControl, Hudson.. etc. There is a good comparison matrix <a href="http://confluence.public.thoughtworks.org/display/CC/CI+Feature+Matrix" target="_blank">here</a>.

We chose <a href="http://www.jetbrains.com/teamcity/" target="_blank">TeamCity</a>, mostly because we know it, we find it easy to use and it is free.
<h3>Our setup</h3>
Our code is based around XNA and <a href="http://monogame.net/" target="_blank">monoGame</a> (recently on version 3).

We have many projects: a game and engine project, a tool, a library and the content builder. This means we have a diverse project output. For example, in the case of the content, we are not interested in the actual build results (yet) however we are interested in knowing that it did build, and to report errors if it didn’t.

The game and engine project reside in one solution and have many unit tests. We need the build server to not only build the project and after that run the unit and integration tests. Initially I set this up using <a href="https://github.com/psake/psake" target="_blank">psake</a> (a tool that does the build with PowerShell) this is a great solution if you want to have a one click build, so I gave it a try, I found that setting up the tests assemblies was a manual process and that to get psake to talk to TeamCity nicely it would take more time that I had. So I tried running the build directly from TeamCity, and it was easier and I didn’t loose to much flexibility so, I had to go for that solution (however is a decision I will revisit shortly).

<a href="http://roundcrisis.files.wordpress.com/2013/01/capture.png"><img style="background-image:none;margin:0 0 0 5px;padding-left:0;padding-right:0;display:inline;padding-top:0;border:0;" title="Capture" alt="Capture" src="http://roundcrisis.files.wordpress.com/2013/01/capture_thumb.png" width="443" height="147" border="0" /></a>

Setting up each of the steps took me approximately 10~20 minutes if done this way. There are a few things that I want to improve on, however the end result is that in a very short time I can have a new project building and reporting.

Some of the disadvantages of the process as it is are:
<ol>
	<li>If I want to change the build type I need to do it manually, in this case, the target test assemblies will need to be updated</li>
	<li>At the moment we are using dropbox as our way to distribute the builds, it is a process some members of our team really like because they just get the new binaries and they can choose when to update (so that there is no friction). I would prefer if the tools would just auto-update, but this is working for the moment.</li>
</ol>
<h3>Summary</h3>
As you can see the server setup is not perfect, there is loads to improve on, but setting this up from early on has proven very helpful. It allows us to have a one click build and a functional way to deliver our tools and product to the people in our team.

Note: This post was cross posted to <a href="http://www.gamasutra.com/blogs/AndreaMagnorsky/20130129/185631/A_build_system_for_games.php" target="_blank">gamasutra</a>, Thanks to <a href="http://www.twitter.com/KrisLigman" target="_blank">Kris </a> for her help.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1046</wp:post_id>
  <wp:post_date>2013-01-28 23:22:02</wp:post_date>
  <wp:post_date_gmt>2013-01-28 23:22:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-build-system-for-games</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="build-server"><![CDATA[build server]]></category>
  <category domain="category" nicename="c"><![CDATA[c#]]></category>
  <category domain="category" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="monogame"><![CDATA[monogame]]></category>
  <category domain="post_tag" nicename="teamcity"><![CDATA[teamcity]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="category" nicename="unit-testing"><![CDATA[unit-testing]]></category>
  <category domain="category" nicename="xna"><![CDATA[xna]]></category>
  <category domain="post_tag" nicename="xna"><![CDATA[xna]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2013-01-28 23:22:02]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Mono for Android–Beyond getting started</title>
  <link>http://roundcrisis.com/2013/02/24/mono-for-androidbeyond-getting-started/</link>
  <pubDate>Sun, 24 Feb 2013 12:18:10 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1053</guid>
  <description/>
  <content:encoded><![CDATA[<p>A few weeks ago I bit the bullet and bought Mono for Android. I also decided to update to all devices to Ice Cream Sandwich as the UI is just so much better. Should have done that ages ago, but I was just afraid Kies would brick my phone again.</p>  <p>Anyway, the new features that I m sure anyone interested in android development already know about: Services, fragments, new UI. Cool stuff, it also meant a lot to learn <img style="border-style:none;" class="wlEmoticon wlEmoticon-openmouthedsmile" alt="Open-mouthed smile" src="http://roundcrisis.files.wordpress.com/2013/02/wlemoticon-openmouthedsmile.png" />.</p>  <p>Some things that you might want to try out if you are starting this out:</p>  <ol>   <li>Preferably have a device or two <img style="border-style:none;" class="wlEmoticon wlEmoticon-winkingsmile" alt="Winking smile" src="http://roundcrisis.files.wordpress.com/2013/02/wlemoticon-winkingsmile.png" />, the emulator is slow. <a title="x86 Emulator" href="http://docs.xamarin.com/guides/android/deployment%2C_testing%2C_and_metrics/configuring_the_x86_emulator" target="_blank">The x86 emulator</a> is an interesting option, it didn’t work for me initially but then I tried a few different virtual devices and then you could really see the benefits… way faster. Still is good to deploy to the phone often enough.</li>    <li>Since android 3.0 there is a new way to do drag drop that works as a state machine. More info in the excellent <a title="Jeremie Laval&#039;s Blog" href="http://blog.neteril.org/blog/2013/01/28/mfa-tricks-number-8-dragging-around/" target="_blank">Jeremie Laval’s blog</a>. Check the other posts, they are really cool too.</li>    <li>Fragments are trickier to deal with that I thought. Pretty sure I’m doing something wrong (as all times you start learning something new) but I wanted to replace a fragment (with UI elements on it) with another fragment (also with UI elements on it) however if the first fragment was placed there with the layout xml and the second one programmatically, It just didn’t work. It did work when both where placed programmatically. Any hints on this would be great.</li>    <li>To use the <a href="https://developer.android.com/design/style/themes.html" target="_blank">Holo</a> Theme across your app, simply add this <a href="https://gist.github.com/Andrea/5023609" target="_blank">snipet</a> to your manifest to your manifest. More on styles <a href="https://developer.android.com/guide/topics/ui/themes.html" target="_blank">here</a>.</li> </ol>  <p><a href="https://gist.github.com/Andrea/5023609" target="_blank"><img style="background-image:none;border-bottom:0;border-left:0;margin:0 0 0 5px;padding-left:0;padding-right:0;display:inline;border-top:0;border-right:0;padding-top:0;" title="android manifest segment" border="0" alt="android manifest segment" src="http://roundcrisis.files.wordpress.com/2013/02/capture.png" width="368" height="81" /></a></p>  <p>One to check out… there is an android unit test suite <a href="https://spouliot.wordpress.com/2011/10/30/andr-unit-joins-the-family/" target="_blank">Andr.unit</a> (<a href="https://github.com/spouliot/Andr.Unit" target="_blank">github repo</a>)a unit testing framework for android based on <a href="http://spouliot.wordpress.com/2011/09/28/unit-testing-and-monotouch/" target="_blank">Touch.Unit</a>.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1053</wp:post_id>
  <wp:post_date>2013-02-24 12:18:10</wp:post_date>
  <wp:post_date_gmt>2013-02-24 12:18:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>mono-for-androidbeyond-getting-started</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="android"><![CDATA[android]]></category>
  <category domain="category" nicename="c"><![CDATA[c#]]></category>
  <category domain="post_tag" nicename="emulator-on-x86"><![CDATA[emulator on x86]]></category>
  <category domain="post_tag" nicename="ice-cream-sandwich"><![CDATA[Ice Cream sandwich]]></category>
  <category domain="category" nicename="mono-for-android"><![CDATA[mono for android]]></category>
  <category domain="post_tag" nicename="mono-for-android"><![CDATA[mono for android]]></category>
  <category domain="post_tag" nicename="xamarin-for-andoird"><![CDATA[xamarin for andoird]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:3:{s:78:"http://roundcrisis.files.wordpress.com/2013/02/wlemoticon-openmouthedsmile.png";a:6:{s:8:"file_url";s:78:"http://roundcrisis.files.wordpress.com/2013/02/wlemoticon-openmouthedsmile.png";s:5:"width";i:19;s:6:"height";i:19;s:4:"type";s:5:"image";s:4:"area";i:361;s:9:"file_path";b:0;}s:74:"http://roundcrisis.files.wordpress.com/2013/02/wlemoticon-winkingsmile.png";a:6:{s:8:"file_url";s:74:"http://roundcrisis.files.wordpress.com/2013/02/wlemoticon-winkingsmile.png";s:5:"width";i:19;s:6:"height";i:19;s:4:"type";s:5:"image";s:4:"area";i:361;s:9:"file_path";b:0;}s:58:"http://roundcrisis.files.wordpress.com/2013/02/capture.png";a:6:{s:8:"file_url";s:58:"http://roundcrisis.files.wordpress.com/2013/02/capture.png";s:5:"width";i:368;s:6:"height";i:81;s:4:"type";s:5:"image";s:4:"area";i:29808;s:9:"file_path";b:0;}}s:6:"videos";a:0:{}s:11:"image_count";i:3;s:6:"author";s:7:"5507891";s:7:"blog_id";s:7:"5261556";s:9:"mod_stamp";s:19:"2013-02-24 12:26:11";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2013-02-24 12:18:10]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>624</wp:comment_id>
    <wp:comment_author><![CDATA[Sam]]></wp:comment_author>
    <wp:comment_author_email>samiljan@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>212.181.48.98</wp:comment_author_IP>
    <wp:comment_date>2013-02-25 14:52:25</wp:comment_date>
    <wp:comment_date_gmt>2013-02-25 14:52:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Some info about replacing layout fragments: http://portabledroid.wordpress.com/2011/04/19/programmatic-and-layout-fragments/
TLDR: Don't. Create them problematically if you need to replace them.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361803946.7814819812774658203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1361809563</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Monogame presentation at #gig2013 and #gamesFleadh</title>
  <link>http://roundcrisis.com/2013/03/15/monogame-presentation-at-gig2013-and-gamesfleadh/</link>
  <pubDate>Fri, 15 Mar 2013 16:06:25 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1060</guid>
  <description/>
  <content:encoded><![CDATA[I did a few presentations about <a href="http://monogame.net/" target="_blank">Monogame</a> in Gaming Reimagined (at what used to <a href="http://monogame.net" target="_blank"><img style="background-image:none;margin:0 0 0 5px;padding-left:0;padding-right:0;display:inline;float:right;padding-top:0;border:0;" title="MonogameLogo512x512" alt="MonogameLogo512x512" src="http://roundcrisis.files.wordpress.com/2013/03/monogamelogo512x512.png" width="244" height="243" align="right" border="0" /></a>be the Landsdowne Road Stadium) and in <a href="http://gamesfleadh.ie" target="_blank">Games Fleadh</a>, if you were there I would really appreciate your feedback (good and bad, please just leave a comment here).

The slides are available <a href="https://speakerdeck.com/roundcrisis/monogame-3" target="_blank">here</a>. I will make the code available soon and update this post. There is a video for it here

[youtube=http://www.youtube.com/watch?v=Dh0ohg4XdQo&amp;feature=youtu.be]

During both events there was some pretty cool talks. About both the industry and making games.

During Games Fleadh I Particularly enjoyed listening to Steve Ewart from <a href="http://www.havok.com/" target="_blank">Havok</a> showcase his many cool demos and the guys from <a href="http://www.deamonware.net/" target="_blank">DemonWare</a> talk about their experiences in their company and it some of the big games studios.

Kudos to the organizers of both events and Congratulations to all the award winners of Games Fleadh awards: <a href="http://bitsmithgames.com/" target="_blank">bitsmith</a> got Best Games and an awesome tank.

<img style="margin:0 0 0 5px;" alt="" src="https://fbcdn-sphotos-g-a.akamaihd.net/hphotos-ak-prn1/417655_423892397643008_1581504652_n.jpg" />

Pic from Bryan Duggan (<a title="https://www.facebook.com/media/set/?set=a.423888310976750.1073741831.113468182018766&amp;type=1" href="https://www.facebook.com/media/set/?set=a.423888310976750.1073741831.113468182018766&amp;type=1">https://www.facebook.com/media/set/?set=a.423888310976750.1073741831.113468182018766&amp;type=1</a>)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1060</wp:post_id>
  <wp:post_date>2013-03-15 16:06:25</wp:post_date>
  <wp:post_date_gmt>2013-03-15 16:06:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>monogame-presentation-at-gig2013-and-gamesfleadh</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="games-fleadh"><![CDATA[games fleadh]]></category>
  <category domain="post_tag" nicename="gaming-reimagined"><![CDATA[gaming reimagined]]></category>
  <category domain="post_tag" nicename="monogame"><![CDATA[monogame]]></category>
  <category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
  <category domain="category" nicename="talk"><![CDATA[talk]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_315ee030024d20dab222dbd6b5824c29</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_03c1a9e4c7b87531c48c2ef392e2255e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2013-03-15 16:06:25]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>More Mono for android (Xamarin.Android) little tips.</title>
  <link>http://roundcrisis.com/2013/03/15/more-mono-for-android-xamarin-android-little-tips/</link>
  <pubDate>Fri, 15 Mar 2013 16:22:57 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1062</guid>
  <description/>
  <content:encoded><![CDATA[<p>Mono for android or Xamarin.Android little tips:</p>  <ol>   <li>If you turn on GPU emulation, sometimes GPU emulation doesn’t actually start, it downgrades to software rendering, this makes the emulator slower and it doesn’t actually uses OpenGL(if you are using monogame, this means your game would probably not work).</li>    <li>If you are looking for a grid like component that stretches with a fix number of grids, I couldn’t find one. Had to write my own and the code is ugly <img style="border-style:none;" class="wlEmoticon wlEmoticon-sadsmile" alt="Sad smile" src="http://roundcrisis.files.wordpress.com/2013/03/wlemoticon-sadsmile.png" />.</li>    <li>You can use ScreenOrientation = ScreenOrientation.Portrait as an attribute in your activity and ConfigurationChanges = ConfigChanges.Orientation is also an activity attribute that prevents the activity from restarting when orientation changes.</li> </ol>  <p>Xamarin just announced support for C# 5 features in the mobiles suites, very exciting news… more details <a href="http://blog.xamarin.com/brave-new-async-mobile-world/" target="_blank">here</a>.</p>  <p>Tomorrow, post about <a href="http://monogame.net" target="_blank">monogame</a> stuff.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1062</wp:post_id>
  <wp:post_date>2013-03-15 16:22:57</wp:post_date>
  <wp:post_date_gmt>2013-03-15 16:22:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>more-mono-for-android-xamarin-android-little-tips</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mobile-dev"><![CDATA[mobile dev]]></category>
  <category domain="category" nicename="mono-for-android"><![CDATA[mono for android]]></category>
  <category domain="post_tag" nicename="mono-for-android"><![CDATA[mono for android]]></category>
  <category domain="category" nicename="ui"><![CDATA[UI]]></category>
  <category domain="post_tag" nicename="xamarin-for-android"><![CDATA[xamarin for android]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2013-03-15 16:22:57]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>684</wp:comment_id>
    <wp:comment_author><![CDATA[Michele Scandura (@mikescandy)]]></wp:comment_author>
    <wp:comment_author_email>mikescandy@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/mikescandy</wp:comment_author_url>
    <wp:comment_author_IP>109.255.195.131</wp:comment_author_IP>
    <wp:comment_date>2013-03-15 21:37:25</wp:comment_date>
    <wp:comment_date_gmt>2013-03-15 21:37:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[gpu emulation doesn't work because the android sdk places some files in the wrong folder. try to copy the libgl* files in C:\Users\UserName\AppData\Local\Android\android-sdk\tools\lib into the parent folder and it should work]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>19715354</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/2758430967/d9e207f2ce407a61f52eba24535edf19_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363383445.7581861019134521484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1363439697</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363439697.68577098846435546875;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>702</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>178.250.118.134</wp:comment_author_IP>
    <wp:comment_date>2013-03-19 10:40:37</wp:comment_date>
    <wp:comment_date_gmt>2013-03-19 10:40:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[
In my case I had to change the memory used on the device instance and it worked]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>684</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1363689637</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363689638.0929191112518310546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>The dying platform: .Net</title>
  <link>http://roundcrisis.com/2013/05/15/the-dying-platform-net/</link>
  <pubDate>Wed, 15 May 2013 11:06:44 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1071</guid>
  <description/>
  <content:encoded><![CDATA[<p>For the last few years I have been writing code in C#. I think C# and .net are great tools to write software. I find that C# is exactly where I need it to be, I can do low level when I need to work with pretty high level abstraction (ish). However the world (unfortunately) doesn’t do what I want and it feels like the momentum .net had is certainty fading.</p>  <p>These are some reasons why I think this is happening (not all related directly to programing)</p>  <ol>   <li>Inherent hatred for Microsoft and anything it does, even if it is good. I think is pretty sad since I see this attitude from people that should be objective from a technical standpoint, licensing can’t always be an issue.</li>    <li>Windows 8 and WinRT with it’s confusing .net support. It doesn’t help when it comes to .net developers either. It seems like their intention was to bring in the “cool kids(?)” but with that they alienated the people that supported them. </li>    <li>All the windows phones, and particularly the WP7 fail (no update path for win 8). It is fail from a commercial standpoint and from developer support, how can you spend any significant amount of time with a platform that you don’t know is going to be there in a year or if there is any support for it. </li>    <li>Half arsed open sourcing, by this I mean, you can read the code but no thanks, we don’t take pull requests <img class="wlEmoticon wlEmoticon-sadsmile" style="border-style:none;" alt="Sad smile" src="http://roundcrisis.files.wordpress.com/2013/05/wlemoticon-sadsmile.png" />.Also, the very common not invented here that MS keeps doing (Monorail vs MVC, Nunit vs MStest, NHibernate vs EF, and many others ).</li>    <li>Tablets and the fact that MS doesn’t have a significant share on any of this, so for many the digital experience is via apple or android.</li>    <li>For me, killing XNA. A great SDK, suddenly abandoned. Why? no one ever gave a reason I can remember (can you?)&#160; </li>    <li>XBOX vnext rumoured online only putting a nail on the XBOX coffin.</li> </ol>  <p>What could save it&#160; (maybe)</p>  <ol>   <li>Strangely, Xamarin because of their amazing mobile tools based on mono . Unity helps too, but I do wonder about what they have in mind for the future</li>    <li>Aliens? </li> </ol>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1071</wp:post_id>
  <wp:post_date>2013-05-15 11:06:44</wp:post_date>
  <wp:post_date_gmt>2013-05-15 11:06:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-dying-platform-net</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="android"><![CDATA[android]]></category>
  <category domain="post_tag" nicename="xamarin"><![CDATA[xamarin]]></category>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:1:{s:70:"http://roundcrisis.files.wordpress.com/2013/05/wlemoticon-sadsmile.png";a:6:{s:8:"file_url";s:70:"http://roundcrisis.files.wordpress.com/2013/05/wlemoticon-sadsmile.png";s:5:"width";i:19;s:6:"height";i:19;s:4:"type";s:5:"image";s:4:"area";i:361;s:9:"file_path";b:0;}}s:6:"videos";a:0:{}s:11:"image_count";i:1;s:6:"author";s:7:"5507891";s:7:"blog_id";s:7:"5261556";s:9:"mod_stamp";s:19:"2013-05-15 11:06:45";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2013-05-15 11:06:44]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>912</wp:comment_id>
    <wp:comment_author><![CDATA[Steven Holdsworth (@holsee)]]></wp:comment_author>
    <wp:comment_author_email>sholdsworth@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://holsee.com</wp:comment_author_url>
    <wp:comment_author_IP>86.152.121.184</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 23:51:06</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 23:51:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[As I know you know as I know you =&gt; .net is a nice mature high performance platform... It's got this far and robust that I don't see it going away anytime soon. 

C# is a very solid and powerful language, and will live on targeting many frameworks and platforms. E.g. I don't see trading platforms being written in JavaScript targeting WinRT somehow.  

Haters gonna hate.. I come across pro and anti MS Zealots everyday, each of their opinions as naive as the other. I've never cared much for those who are religious about any given technology as it blinds people to the truth.. ya know.. there is no spoon.

.NET is just as present in businesses as ever, it's just not the hot shit anymore with those who give a shit beyond their 9-5... I think many of the once very passionate developers in the .net space have got bored or have become boring and irrelevant... The fire in the belly that I saw online, at many events and conferences over the past 6 years has definitely started to dwindle out and people are looking elsewhere to their code junky fixes.. just the nature of the game. This as well as the plethora of mediocre content diluting the really cool stuff that .net has to offer is why I think people are getting this idea that .net is on the way out or nothing special to start with.

In many use cases .net is really not the 'right' tool for the job. Most of the tools you are presented with out of the box just over complicate things + it is not the cost effective choice, for many reasons beyond licensing costs. It has to be said it does have its place and probably will for years to come.

How awesome is the TPL, LINQ (:expressions) and RX? These are the things that make me smile when I'm in c# land. ASP.NET, WCF, WF not so much.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368694205</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368661866.592114925384521484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"holseee";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>928</wp:comment_id>
    <wp:comment_author><![CDATA[___]]></wp:comment_author>
    <wp:comment_author_email>_@sogetthis.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>209.66.74.34</wp:comment_author_IP>
    <wp:comment_date>2013-05-16 16:39:55</wp:comment_date>
    <wp:comment_date_gmt>2013-05-16 16:39:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Microsoft's .net platform is dead. Mono, on the other hand, is thriving and growing. Microsoft technology aside, c# is a good, mature language with tons of expressive features. The library ecosystem it can tap into is vast. 

It's surprising how effective the anti-microsoft camp is in shouting down a good language. I started using Unity3D 2 years ago, which has extensive support for c# and uses mono and mono mobile for cross-platform development. Originally, I thought it was going to suck because it's microsoft. Slowly, I came to realize just how powerful the language and libraries are. And the best part is, you don't need a licence to use any of it, thanks to Mono.

@Kenny - "mono exists, but it’s just not that performant."
Tell that to Unity 3d. 

@Abe there's a difference between mono and MonoDevelop. MonoDevelop is a piece of shit IDE. It's why it's no longer being supported. Xamarin, it's non-free successor, is considerably faster and less buggy. If it's too expensive for you, use vim (I do). Mono, the compiler and runtime, is plenty performant and solidly developed.

@snookasnoo You're right, .net isn't good for high volume transaction systems. Neither is Java, which is the go to backend language for a shit ton of the web. What's your point?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368722395.4215829372406005859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368781148</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>939</wp:comment_id>
    <wp:comment_author><![CDATA[Ahmed Hull]]></wp:comment_author>
    <wp:comment_author_email>lamarmueller@outlook.com</wp:comment_author_email>
    <wp:comment_author_url>http://beckfrancer.blogspot.in/2013/05/software-developers-prefer-net.html</wp:comment_author_url>
    <wp:comment_author_IP>183.182.91.146</wp:comment_author_IP>
    <wp:comment_date>2013-05-17 10:02:06</wp:comment_date>
    <wp:comment_date_gmt>2013-05-17 10:02:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The technology plays an important part with regards to web-based applications..Net development and the platform have presented me with several opportunities to create efficient software solutions.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368784927.7957789897918701171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369060242</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1079</wp:comment_id>
    <wp:comment_author><![CDATA[将死的平台：.Net | 小胤&#039;s Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.cnzzsoft.com/2013/05/will-die-of-the-platform-the-net/</wp:comment_author_url>
    <wp:comment_author_IP>210.16.140.238</wp:comment_author_IP>
    <wp:comment_date>2013-05-28 01:29:05</wp:comment_date>
    <wp:comment_date_gmt>2013-05-28 01:29:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] 英文原文：The dying platform: .Net [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369704546.90968990325927734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380030765</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380030765.6885640621185302734375;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>904</wp:comment_id>
    <wp:comment_author><![CDATA[Siphr]]></wp:comment_author>
    <wp:comment_author_email>comments@0blink.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>194.247.82.76</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 14:29:48</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 14:29:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[As far as I am concerned this was a dead platform to begin with. c# was amusing though. Not trolling its just an opinion.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368631239</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368631240.351008892059326171875;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368628189.1075000762939453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>905</wp:comment_id>
    <wp:comment_author><![CDATA[Jules Jay Paulynice]]></wp:comment_author>
    <wp:comment_author_email>selujerdna@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/musiwiz</wp:comment_author_url>
    <wp:comment_author_IP>174.62.228.19</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 14:30:21</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 14:30:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I went to a Windows 8 app meetup yesterday and I think they're doing everything they can to catch up in the mobile development space (connecting with developer community, office hours at their Cambridge office, sponsoring groups, $100 for each app a developer publishes, etc...).  

I think since they were making so much money with licensing Windows, they never realized the potential for mobile or someone at Microsoft must have said that they would not be able to make money licensing operating systems for mobile.  Look at Apple and Android, you never have to pay for a new license to upgrade your os.

I'm interested in doing something with the Windows Phone, but I'm not sure where they're headed.  For example, it's required to have Windows 8 to develop apps for the Windows 8 phone.  The same way, are you going to need Windows 9 for Windows 9 phones, etc...?  So again, they want to make profits licensing their os.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368631234.0542409420013427734375;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368631233</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368628222.152606964111328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"musiwiz";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>906</wp:comment_id>
    <wp:comment_author><![CDATA[Abe]]></wp:comment_author>
    <wp:comment_author_email>abeburnett@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>97.121.200.189</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 14:32:57</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 14:32:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[My personal hesitancy to use Microsoft software development products is due to the reasons you mention, especially my dislike of investing time in learning a closed, single-OS (yes, I know it *can* be run on other OSes, but it's really only a "first class citizen" on Windows) development stack. 

As other commenters have mentioned there are currently lots of jobs for .Net developers, but I think you're right: .Net is fading. You're not the only one who feels this way. It might take 10-20 years, but open-source is the future. Developers want to invest their time in mastering tools that aren't controlled by one almighty entity. At least that's how I feel. 

I recognize that C#, F#, the .Net libraries, ASP.Net, etc. are excellent technology but until Microsoft moves .NET in its entirety to opensource, I'm not interested. Until then I'll learn Ruby, Python, Clojure, Go, Java, Scala, etc... not because they're better than Microsoft products, but because the ecosystem built up around them is much richer and more diverse because of the openness of the languages themselves. 

Plus I'll admit that it chafes to think how much Microsoft charges for the tools to effectively use .NET. Not that the tools aren't excellent, but come on, you a *required* to buy MSDN subscriptions (worthless to me and my employer) AND there's no way to justify a $13,000 startup cost + $4250/year cost. This means that small startups (22 people) like I work for simply can't afford to use anything more than Visual Studio Express. 

Bottom-line: I'm focusing on investing in opensource and I see many others doing the same thing.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368628378.8155119419097900390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:17:"abeburnettwriting";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368631126</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368631126.820807933807373046875;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>918</wp:comment_id>
    <wp:comment_author><![CDATA[zbrook]]></wp:comment_author>
    <wp:comment_author_email>zhouzhe@spozoom.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.zbrook.com</wp:comment_author_url>
    <wp:comment_author_IP>118.186.254.147</wp:comment_author_IP>
    <wp:comment_date>2013-05-16 09:13:42</wp:comment_date>
    <wp:comment_date_gmt>2013-05-16 09:13:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Why we need .NET?It means work.It means someone's life.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368695623.2341010570526123046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368781220</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368781220.7927401065826416015625;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2290</wp:comment_id>
    <wp:comment_author><![CDATA[Clay Zuvich]]></wp:comment_author>
    <wp:comment_author_email>czuvich@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>https://plus.google.com/113117239623417351979</wp:comment_author_url>
    <wp:comment_author_IP>66.90.184.138</wp:comment_author_IP>
    <wp:comment_date>2013-10-13 16:09:54</wp:comment_date>
    <wp:comment_date_gmt>2013-10-13 16:09:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I was on .NET for years... have since switched to iOS/Android.  I've pretty much done it all in .NET - WPF, WinForms, ASP.NET, ASP.NET MVC, WCF.

I have to tell you after working with other platforms and languages, WPF/WinRT/Surface/Silverlight is for the birds.  WCF is still fairly robust, but it lacks some fundamental features that are inherent to web services (yes I get that it caters to different types of services).  ASP.NET, well I cannot comment on that since I haven't programmed in it for many years.

Microsoft is in serious trouble in the developer community, and I for one will never look back (at least not for awhile).  MVVM?  Really?  Serialization is an absolute nightmare... but I get it... legacy support, no control over hardware support, etc.

IMO the only positive development platform coming out of MS is Azure (which is really nice btw).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1381680595.090568065643310546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>googleplus</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>113117239623417351979</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1381944604</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1381944605.339375019073486328125;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>915</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>178.250.118.134</wp:comment_author_IP>
    <wp:comment_date>2013-05-16 08:52:34</wp:comment_date>
    <wp:comment_date_gmt>2013-05-16 08:52:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks so much for all the comments. I am truly amazed at the response this post got 
For the record, yes I am still using C# and .Net and will be for a long long time.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368694355</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368694355.051990985870361328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>914</wp:comment_id>
    <wp:comment_author><![CDATA[john]]></wp:comment_author>
    <wp:comment_author_email>john@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>58.60.63.194</wp:comment_author_IP>
    <wp:comment_date>2013-05-16 08:31:24</wp:comment_date>
    <wp:comment_date_gmt>2013-05-16 08:31:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[open source is a good platform indeed, .net is losing the chance to be  strong]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368693085.2789669036865234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368694220</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>911</wp:comment_id>
    <wp:comment_author><![CDATA[Idon't Know (@snookasnoo)]]></wp:comment_author>
    <wp:comment_author_email>snookasnoo@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/snookasnoo</wp:comment_author_url>
    <wp:comment_author_IP>68.4.81.103</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 19:01:06</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 19:01:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I work in extremely high transaction volume systems  in the financial industry.  .NET is a joke here.  Nobody uses Windows servers for anything but Sharepoint and Exchange.  SQL server is deprecated.  Red Hat Linux is the standard server OS.  Mono does not cut it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/sticky/default_profile_images/default_profile_0_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>284544008</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368646315</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>908</wp:comment_id>
    <wp:comment_author><![CDATA[Sameer]]></wp:comment_author>
    <wp:comment_author_email>abdullah.adam@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.agilechai.com/</wp:comment_author_url>
    <wp:comment_author_IP>206.248.171.69</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 14:42:07</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 14:42:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[In the corporate world ,where XBOX and XNA don't matter as much, we are doing very well. I don't see it going anywhere, anytime soon.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368628927.6740930080413818359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368631159</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368631160.5236051082611083984375;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>910</wp:comment_id>
    <wp:comment_author><![CDATA[pip010 (@ppetrovdotnet)]]></wp:comment_author>
    <wp:comment_author_email>ppetrovdotnet@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/ppetrovdotnet</wp:comment_author_url>
    <wp:comment_author_IP>83.80.17.19</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 15:17:02</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 15:17:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There are 2 languages we don't really need: Java and C#(.NET) !!!
there are the two common denominators as long coding goes. and that's exactly what you get. it is the one wheel fit all model, which never worked and never will!

Why?
To start with the "prototyping". Java+.NET are both fail compared to dynamic languages, IMO the true prototyping languages! no compile, no hussle edit-continue works by default , by design, where edit-continue has a list of restrictions larger in volume than the bible. there is more...

How about production?
about Java: the infamous write once debug everywhere :(
about .Net: the truth is, all 'innovation' is also applicable to other lang/framework, without the hassle of proprietary software and  in case of MS-tech without the convolution...

the thing is. any solution in C++ (not optimized) is better perf wise. the reason XNA didn't cut it is because DirectX-manged is SLOW! compared to optimized(c++) it is crazy slow. C# does give you much space to breath and optimize it is what it is....

"I’d guess this is why the jobs market is packed full of adverts for .NET devs"
come on now. we all know why that is and it is not due to merits but $ alone!

I'm using C# since 2001, beta!
it was a good alt to Java at the time, but now if I hear TFS I will be running faster than any HR can :D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368631024.04714488983154296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368631199.92422199249267578125;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368631199</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/536188544/digihood_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>18722852</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>907</wp:comment_id>
    <wp:comment_author><![CDATA[Abe]]></wp:comment_author>
    <wp:comment_author_email>abeburnett@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://abeburnettwriting.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>97.121.200.189</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 14:39:04</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 14:39:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I agree with the author and Kenny Katzgrau. Mono really isn't much of an option: buggy, and not nearly as user friendly as Visual Studio or many other IDEs which exist for other opensource languages. In essence, even though if you're really determined you *can* use .NET on Mac and Linux, it's still really only a "first class citizen" on Windows. Until this changes, and Microsoft gets real about pricing for Visual Studio, I have no interest in investing my time in learning any of their tech even though I acknowledge it as robust and generally excellent. There are other equally excellent languages and IDEs to learn which aren't constrained to Windows and which don't cost an arm and a leg. 

As Kenny says, the limitations and licensing costs of running on the Windows platform are way too high for many startups and small businesses. When I launch my products, they'll be built on robust opensource technology that is affordable. Nothing Microsoft does is "affordable" these days.

If Microsoft were to take everything opensource (like, for reals), invest in making their platform truly ubiquitious, and get more reasonable about their pricing, I'd enthusiastically jump onto the .NET bandwagon.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>38021819</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368628745.9997398853302001953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:17:"abeburnettwriting";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368631146</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368631147.0616190433502197265625;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>903</wp:comment_id>
    <wp:comment_author><![CDATA[Dom Barker (@MostlyHarmlessD)]]></wp:comment_author>
    <wp:comment_author_email>MostlyHarmlessD@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/MostlyHarmlessD</wp:comment_author_url>
    <wp:comment_author_IP>94.193.37.179</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 14:28:45</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 14:28:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nonsense - .NET is still massive in the enterprise market. It's very unusual (at least in the UK) for corporate development to be done with anything else]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368631246</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368631246.6909949779510498046875;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368628125.5303480625152587890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/3344843078/050268f3ea327061e6b97b83c4f8b895_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>273405617</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>899</wp:comment_id>
    <wp:comment_author><![CDATA[Samti Lamti]]></wp:comment_author>
    <wp:comment_author_email>sami.lamti@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://monodeveloper.org</wp:comment_author_url>
    <wp:comment_author_IP>194.16.175.140</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 11:45:07</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 11:45:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[*smiles* All is not lost! Recently, The ASP.NET team (re-)announced their commitment to open source (http://www.asp.net/open-source), including accepting pull requests. Xamarin is going strong with its commitment to .NET as a platform for iOS, Android and Mac. And the community that is Mono is continually broadening the .NET platform, making it available to everything from Raspberry PIs to PlayStations.

.NET is not dying. It's reinventing itself.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368618307.6057999134063720703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"lamti";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368625345</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368625346.23659992218017578125;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>901</wp:comment_id>
    <wp:comment_author><![CDATA[Kenny Katzgrau (@_kennyk_)]]></wp:comment_author>
    <wp:comment_author_email>_kennyk_@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/_kennyk_</wp:comment_author_url>
    <wp:comment_author_IP>96.242.135.152</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 14:18:46</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 14:18:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I used to be a .NET dev, but I came to the realization that it sucks to write software that can only be run on a small subset of the world's machines. Sure, mono exists, but it's just not that performant.

C# is a great language — I hope it survives. Visual Studio is the best IDE I've ever used. But the limitations and licensing costs of running on a windows platform are just too much.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368627526.932364940643310546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1599835980/ci-con-talk_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>81499710</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368627588</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368627589.0829069614410400390625;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>902</wp:comment_id>
    <wp:comment_author><![CDATA[John Nevill]]></wp:comment_author>
    <wp:comment_author_email>john.nevill@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/hidinggeryan</wp:comment_author_url>
    <wp:comment_author_IP>76.29.124.172</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 14:25:02</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 14:25:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[On Error Continue Next

So often we are blind, perhaps willingly, to the technologies being used behind the enterprise curtain. .Net is a big part of larger company's ad-hoc needs, especially where it fits in with the nearly, and sadly, ubiquitous world of Sharepoint. Saying .net is dying is like saying that no one uses VBA anymore. For better or worse, these technologies will be around for as long as large corporation remain Microsoft shops.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368631266</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368631267.297152996063232421875;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368627902.8595530986785888671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"hidinggeryan";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>898</wp:comment_id>
    <wp:comment_author><![CDATA[Dom]]></wp:comment_author>
    <wp:comment_author_email>domfinn@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/lordmoolybap</wp:comment_author_url>
    <wp:comment_author_IP>82.71.241.189</wp:comment_author_IP>
    <wp:comment_date>2013-05-15 11:40:42</wp:comment_date>
    <wp:comment_date_gmt>2013-05-15 11:40:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I am not sure this is the case except in niche areas and in the minds of loud tweeters and bloggers. 

A massive proportion of the silent majority are quite happily using .NET and have no plans to change. I think the majority of .NET development happens nowhere near Windows 8 / Phone 7 apps, nor do the average .NET software house or large company develop for the Xbox (which I must say, losing XNA is a massive mistake still). 

I'd guess this is why the jobs market is packed full of adverts for .NET devs and there aren't quite so many node, ruby and python adverts (not that I don't love those languages!!).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368618042.5727241039276123046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"lordmoolybap";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368625323</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368625324.312725067138671875;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>952</wp:comment_id>
    <wp:comment_author><![CDATA[realist]]></wp:comment_author>
    <wp:comment_author_email>loot@logick.net</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>108.44.169.142</wp:comment_author_IP>
    <wp:comment_date>2013-05-18 02:34:44</wp:comment_date>
    <wp:comment_date_gmt>2013-05-18 02:34:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Simple, Microsoft's horrid anti-consumer business tactics have caused people to make them irrelevant and they are desperately trying to bail the water out of their sinking ship. I am not a fan of duplication of efforts for the sake of diversity either. True there is a tool for every job but that doesn't mean you need 100,000 tools. I don't think any one language fits all applications but there are plenty of languages out there that aren't attached at the hip to a monopolistic corporation. Also Microsoft's closed ecosystem approach has inherently made them slow and less innovative. Microsoft is hanging on to a dying business model just like the MPAA/RIAA. In the end, the market will force them to adapt or die. Unfortunately for all of you .net developers it looks like they are choosing to die a slow painful public death. You better start adapting now or you may end up bleeding out with them...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368844484.312046051025390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369060233</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2050</wp:comment_id>
    <wp:comment_author><![CDATA[Bill]]></wp:comment_author>
    <wp:comment_author_email>billm@eggcentric.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>50.9.113.141</wp:comment_author_IP>
    <wp:comment_date>2013-08-10 21:50:44</wp:comment_date>
    <wp:comment_date_gmt>2013-08-10 21:50:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Use Delphi.  .Net is a dumb platform.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1379354073.9461719989776611328125;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1379354073</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1376171444.7281820774078369140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1746</wp:comment_id>
    <wp:comment_author><![CDATA[将死的平台：.Net | 天天三国杀]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.ttsgs.com/2013/06/23/%e5%b0%86%e6%ad%bb%e7%9a%84%e5%b9%b3%e5%8f%b0%ef%bc%9a-net/</wp:comment_author_url>
    <wp:comment_author_IP>173.254.221.66</wp:comment_author_IP>
    <wp:comment_date>2013-06-23 09:59:34</wp:comment_date>
    <wp:comment_date_gmt>2013-06-23 09:59:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] [英文原文：The dying platform: .Net ] [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1371981574.7191579341888427734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1372099966</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1372099967.179502010345458984375;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2197</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>178.250.118.134</wp:comment_author_IP>
    <wp:comment_date>2013-09-26 14:54:31</wp:comment_date>
    <wp:comment_date_gmt>2013-09-26 14:54:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi, thanks for the comment. I can't say I agree with you, I find java extremely verbose, it's only saving grace it's all the languages that run on top of the JVM.

Not portable? How do you mean? It is possible to run c# in pretty much any device at least I use (via Xamarin for iOs and Android)
Cheers]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2193</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380207271</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380207272.8196790218353271484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2198</wp:comment_id>
    <wp:comment_author><![CDATA[rubi]]></wp:comment_author>
    <wp:comment_author_email>rubimazaki@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://na</wp:comment_author_url>
    <wp:comment_author_IP>5.29.148.220</wp:comment_author_IP>
    <wp:comment_date>2013-09-26 17:53:19</wp:comment_date>
    <wp:comment_date_gmt>2013-09-26 17:53:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Both Java and C# have the following drawbacks, not found in C++:
1. SLOW as HELL.. Did you see how long does it take for visual studio to load these days? even on a super computer.. same goes to eclipse. To compare with ol' VS6 that would start up in a snap even on a very slow machine. Now I guess you would say that it's a bad comparison, but I have been there back at the days VS 2003 came out (and the ugly .net has started it's way) and it was a shocking difference. Modern C# is just a little less horrible. And, as we all know same goes to almost any C#/Java desktop application out there.. Slow, irresponsive... not green - Let's overkill the CPU with useless ops just because we need a language that even less then mediocre people could use (ahhh pointers !! oh no!!).
2. Both lack 2 most important features: Macro's and templates. So, you don't have macros which means you cant have short easy to use log macro's which encapsulate allot of information, you can support multiplatform code, you cannot turn off features at compile time (most problematic with security issues, as you cannot simply cancel portions of the code that expose confidential details) ... Templates simply make your code works faster, and provide cool work reduction capabilities. Again, from management point of view this is a drawback, because templates are so complicated, we could never ask our engineers to use (?!)
3. C++ is everywhere, low level -&gt; high level, GUI (responsive, versatile), it's shared among __ALL__ operating systems, simply because you can't do anything clever without it. So we got large database of open source code, java/c# devs can only dream about.
4. You don't need to provide low level stuff in a different DLL, or JNI, or "unmanaged code" which is not even supported on some MS os's like windows phone 7.x .. This gives freedom to the developer to delve into lower realtime/system programming (like Sound/RTP in VoIP...) without the need to do all kinds of manipulations, and get messed up marshaling parameters to someone else's code (written in C++ .. )
5. Garbage collection is not as helpful as thought by Java/.Net users. Not at all, and has far too many drawbacks, to name a few: a. it's slowish, consuming far more memory than "unmanaged code" would.  b.  It's prone to memory leaks when projects become more complex than a simple utility. c. A newbie in Java for instance would find it very hard to understand where all these reference go to? Soft reference? Hard reference? OMG?! I would stick with plain old pointers, one would say..
6. Not cross platform compatible. iOS do not support java (and there's were most of the code goes these days..) C# supported via all kinds of unofficial open source project (xamarin - mono). 

A real platform? Qt: C++ with UI rendered with OpenGL. Available on ALL operating systems. One code!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380218000</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380218001.391418933868408203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1060</wp:comment_id>
    <wp:comment_author><![CDATA[amongbutnotof]]></wp:comment_author>
    <wp:comment_author_email>cleanfun@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/amongbutnotof</wp:comment_author_url>
    <wp:comment_author_IP>98.234.247.105</wp:comment_author_IP>
    <wp:comment_date>2013-05-25 16:32:30</wp:comment_date>
    <wp:comment_date_gmt>2013-05-25 16:32:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[As soon as Microsoft forced their clunky virtual machine between the developer and the processor, they sealed their own fate. All .NET was ever intended to do was gradually limit what future generations of developers would have the power to do.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369499551.0672600269317626953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"amongbutnotof";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369501644</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1076</wp:comment_id>
    <wp:comment_author><![CDATA[Andy C]]></wp:comment_author>
    <wp:comment_author_email>andy3@funk45.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>188.28.114.180</wp:comment_author_IP>
    <wp:comment_date>2013-05-27 18:46:49</wp:comment_date>
    <wp:comment_date_gmt>2013-05-27 18:46:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Switched from .NET to opensource 2 years ago and haven't looked back... javascript, coffeescript, livescript, jade, stylus, backbone, mongodb, mongoose, nodejs, express, nib, casperjs, phantomjs, underscore, browserify, git, etc, etc...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369680409.7023599147796630859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369687906</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1977</wp:comment_id>
    <wp:comment_author><![CDATA[Nik Pfirsig]]></wp:comment_author>
    <wp:comment_author_email>nuiklaus37217@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>170.141.177.106</wp:comment_author_IP>
    <wp:comment_date>2013-07-16 22:08:11</wp:comment_date>
    <wp:comment_date_gmt>2013-07-16 22:08:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I stumbled onto this site when I googled C# sucks out of frustration. with a bit of C# idiocy. Since the pointy head bosses at corporate have decreed .NET as the company standard, Old perl hackers like me are in the position of self training in C#, ASP.Net and SQLServer or facing a new job hunt in an incredibly down economy.
  Anywho, after an update to VS2012  software, something broke. and a ridiculously simple bit of C# code that simply recasts text from ASP controls to custom class properties bombs in runtime.

  After reading through the responses I thought I would add some observations and opinions:

  Way back around 1990, Sun Microsystems developed what would become Java. My understanding is that the design goals were many. Object oriented, capable of targeting a variety of hardware platforms, network centric optimizations.  The main idea was the creation of a network aware distributed runtime environment that was platform agnostic. 
  When Sun managed this, it was a threat to Microsoft business model as at that time MS was just recognizing that the web could adversely threaten their near monopoly.
  Ms first attempted their "Embrace, Extend and De-commoditize" approach to counter the Java threat. This involved contracting for the rights to develop a windows version of the JVM, then adding in MS copyrighted functions that were incompatible with the JVM as a means of leveraging their vast customer base against the java platform. 

Sun recognized MS 's strategy, sued Microsoft and won. Microsoft had to drop their Windows centric Java clone (J++) So Microsoft declared war on Sun and the . NET initiative was born.
MS started to rewrite J++ with the advice of their legal and marketing departments. MS spun the virtual machine concept as the innovation calling it the Common Language Runtime (though it was functionally similar to the Java Virtual Machine, with some tweaks to avoid patent restrictions. )

  Like the CLR, the JVM can be targeted by many languages, In fact, a cursory search indicates there are more programming languages available for the JVM than for the CLR. This is spin on the order of "I kept punching him in the fist with my face, but it didn't phase him!"

   VB.NET is very much unlike tradition Visual Basic. Thanks to the common language specification, most .NET languages are very similar to C# in syntax, while recognizing keywords from non dot net implementations. These other language implementations lack the full functionality of C#, largely due the the close co-development of C# and dot net. 

    I suspect that, if MS sees the internet as less of a threat to their profits, they may lose interest in supporting .NET. That may be starting to happen.

On a side note: Whenever I read or hear statements like "(***) is not an object oriented language like C#, I immediately know that person is unfamiliar with language (***). The only requirement for for a language to support object oriented programming is a compiler that can produce re-entrant, relocatable code, which is one of many reason Java uses a virtual machine. Not all common embedded processors directly support re entrant code]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1374012491.4110240936279296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380030651</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380030651.9691479206085205078125;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1086</wp:comment_id>
    <wp:comment_author><![CDATA[将死的平台：.Net | ChinaCPU 资讯网]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.chinacpu.com/%e5%b0%86%e6%ad%bb%e7%9a%84%e5%b9%b3%e5%8f%b0%ef%bc%9a-net/</wp:comment_author_url>
    <wp:comment_author_IP>221.122.111.13</wp:comment_author_IP>
    <wp:comment_date>2013-05-28 06:35:17</wp:comment_date>
    <wp:comment_date_gmt>2013-05-28 06:35:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] [英文原文：The dying platform: .Net ] 本文转载自: 外刊IT评论 http://www.aqee.net/ (本站只作转载,不代表本站同意文中观点或证实文中信息)   2013-05-28 cncpu  Share ! [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369722918.1224620342254638671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380030766</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380030766.8057498931884765625;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2084</wp:comment_id>
    <wp:comment_author><![CDATA[zz portugal]]></wp:comment_author>
    <wp:comment_author_email>rubimazaki@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>5.29.148.220</wp:comment_author_IP>
    <wp:comment_date>2013-08-21 23:13:03</wp:comment_date>
    <wp:comment_date_gmt>2013-08-21 23:13:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Wow how ms fucks time and up again... w did u learn ms specific language in the first place? Stick to cross platform and you would never fall again. Whether qt or marmalade and never those crappy objc c# java etc...

C++ rules :) And always will be !

C# java objc &amp; v8 all drag along useless language featurs like: rtti interpreters slowtohell garbage collection... and with all that dont have 1/3 of the language features in c++. For example preprocessing and true templates.

All in all just stick with c++ and you will nevr find urself in a mess ur in now...

BTW I for instance never wasted my time on .net in the first place.. because it was clear to me that this is just another job security for ms devs.. lets make another language this year...

Last: VM/intrpreters like c#/vb# are not green. Why waste the power of the cpu on a stupid interpreyer that is useless??]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1378378010</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1378378010.4298961162567138671875;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1377126783.9402840137481689453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1892</wp:comment_id>
    <wp:comment_author><![CDATA[James Sheedy]]></wp:comment_author>
    <wp:comment_author_email>jimmysnits@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>110.33.142.62</wp:comment_author_IP>
    <wp:comment_date>2013-07-01 12:19:45</wp:comment_date>
    <wp:comment_date_gmt>2013-07-01 12:19:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[C# is a great language, VB not so much. .NET has and always will play a losing battle to Java in the enterprise space. From my many years of experience in government and corporate this sway to the J side usually comes down to the ability to have legitimate choice between application servers, operating systems, datastores, IDEs, Middleware etc. Microsoft have unfortunately made it hard for CTOs and Architects to make decisions in their favor by generally forcing you down an all or none path, it seems more and more the market is choosing the none. I re-iterate C# is a great language, so thanks Anders :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1372681185.5031950473785400390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1372691350</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1913</wp:comment_id>
    <wp:comment_author><![CDATA[rubi]]></wp:comment_author>
    <wp:comment_author_email>rubimazaki@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>5.29.148.220</wp:comment_author_IP>
    <wp:comment_date>2013-07-05 20:47:35</wp:comment_date>
    <wp:comment_date_gmt>2013-07-05 20:47:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Or maybe c#,java,... and their keens arent really languages, but scripts. Really, with the world trying to go greener, and with less powered devices (phones tablets) sing an interpreted language, which spares the cpu like it was growing on a fuckin tree. You c sharp guys just dont know c++ which frightens you so much. but in the end c++ is the only place where high level, low level, diverse language tools, 100% utilization of cpu and less platform dependecies meet.

c++ rules! and yes im a belliever ;)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1373057255.5432059764862060546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380030748</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380030748.1301000118255615234375;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2451</wp:comment_id>
    <wp:comment_author><![CDATA[Marco]]></wp:comment_author>
    <wp:comment_author_email>mrc.ildp@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/mrcname</wp:comment_author_url>
    <wp:comment_author_IP>151.24.20.123</wp:comment_author_IP>
    <wp:comment_date>2013-11-19 20:20:20</wp:comment_date>
    <wp:comment_date_gmt>2013-11-19 20:20:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think the future of web is html5, jQuery, Java.]]></wp:comment_content>
    <wp:comment_approved>trash</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1386006771.6565859317779541015625;s:7:"message";s:47:"roundcrisis changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
      <wp:meta_value>0</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_time</wp:meta_key>
      <wp:meta_value>1386006772</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1384892420.2489869594573974609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"mrcname";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2452</wp:comment_id>
    <wp:comment_author><![CDATA[Marco]]></wp:comment_author>
    <wp:comment_author_email>mrc.ildp@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://notesofcodes.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>151.24.20.123</wp:comment_author_IP>
    <wp:comment_date>2013-11-19 20:21:44</wp:comment_date>
    <wp:comment_date_gmt>2013-11-19 20:21:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think the future of web is HTML5, JavaScript frameworks, Java.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>2887117</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>17357414490</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1386006762</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1386006762</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1386006762.8456859588623046875;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1384892504.619319915771484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"mrcname";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2162</wp:comment_id>
    <wp:comment_author><![CDATA[Daniel B]]></wp:comment_author>
    <wp:comment_author_email>danlbemail-nospam@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>216.57.76.206</wp:comment_author_IP>
    <wp:comment_date>2013-09-16 21:04:59</wp:comment_date>
    <wp:comment_date_gmt>2013-09-16 21:04:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for the reply Bill. I agree there are shortcomings with .NET and Microsoft hasn't done a good job with capitalizing on the advantages of a VM (cross platform capability, CPU independence, etc.). Mixed mode (part native, part .NET) programs are another area of weakness for .NET. This can be seen when porting to 64 bit. A mixed mode library creates a difficulty because Microsoft hasn't written a 64 bit form designer. When the library is moved to 64 bit, no visual design can be done because of this problem. It can be worked around, but the solution is kind of a kludgy.

I think this sort of thing is Microsoft's current weakness. They've gone in so many directions that they haven't perfected anything. They need to refocus.

I know Microsoft has been abandoning a number of their products, I just hope they don't abandon .NET. I also hope that Delphi and C++ Builder don't disappear. Competition helps keep things healthy.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1379365499</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1379365499.7589108943939208984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2160</wp:comment_id>
    <wp:comment_author><![CDATA[Daniel B]]></wp:comment_author>
    <wp:comment_author_email>danlbemail-nospam@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>216.57.76.206</wp:comment_author_IP>
    <wp:comment_date>2013-09-16 19:17:41</wp:comment_date>
    <wp:comment_date_gmt>2013-09-16 19:17:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[@Bill

Have you tried .NET? I tried Delphi (and C++ Builder) when it first came out and liked it, but then Borland failed to follow up on its own success. If you think .NET is dying, how much chance does Embarcadero have for its products?

Anders Heylsberg was chief architect of Delphi and then left Borland and developed .NET and C# for Microsoft. Same architect, similar architecture. Building a .NET program is very similar to building a Delphi program.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1379359061</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1379359061.09932708740234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2161</wp:comment_id>
    <wp:comment_author><![CDATA[Bill]]></wp:comment_author>
    <wp:comment_author_email>billm@eggcentric.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>50.9.113.141</wp:comment_author_IP>
    <wp:comment_date>2013-09-16 19:43:14</wp:comment_date>
    <wp:comment_date_gmt>2013-09-16 19:43:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Daniel, good to see someone educated on .net and delphi.  I have in fact tried .Net, it is a morph of Delphi and Java.  It is not native windows and requires a .Net installation in the client of a specific version.  I do not have anything against the language, but I do with its platform.  I am not comfortable with requiring a properly configured .Net framework installed in the client.  It presents a massive point of failure.  We have had a server unrepairable, or at least too much work to repair, because of incompatibilities of .net applications with the installed / configured version of .net.  I am also not comfortable with the lifespan of .Net - it will eventually be not supported.  I have apps that have been running for 10+ years on each new version of windows.  Win32 is an enduring and stable platform.  The final issue is that it is not native, if you want to create an isapi DLL it is not practical to try it, instead you need to write a plugin for ASP.  In Delphi I can create an ISAPI that has no dependencies on the Server or its versions so long as it supports standard ISAPI.  With that I am able to do tricky things such as my ISAPI Loader and ISAPI Host tool (http://www.eggcentric.com).  I feel like I have a straight jacket on with .Net.  The whole contraption is unnecessary overhead.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2160</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1379360594</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1379360594.8331229686737060546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2163</wp:comment_id>
    <wp:comment_author><![CDATA[Bill]]></wp:comment_author>
    <wp:comment_author_email>billm@eggcentric.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>50.9.113.141</wp:comment_author_IP>
    <wp:comment_date>2013-09-16 21:48:49</wp:comment_date>
    <wp:comment_date_gmt>2013-09-16 21:48:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Delphi is, in system terms, a reinforced feedback loop causing it to lose market.  Employers do not want to use Delphi because there are too few Delphi programmers and there are less new Delphi programmers because there are fewer jobs.  

I think to turn this around, we need more Delphi programmers - they may come from School or hobbyist, and in the case of a hobbyist it needs to be financially accessible.  

An idea is to give away Delphi for some sufficient time period to create a huge user base, then that creates a potential base for employers.

.Net is also in a loop, programmers wanting a job choose .Net and since there are enough .Net programmers then employers are more likely to choose .Net.

It just bugs me, why did .Net take a lead to begin with?  Many people do not know about Delphi.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2162</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1379368129</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1379368129.757277011871337890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2164</wp:comment_id>
    <wp:comment_author><![CDATA[Daniel B]]></wp:comment_author>
    <wp:comment_author_email>danlbemail-nospam@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>216.57.76.206</wp:comment_author_IP>
    <wp:comment_date>2013-09-16 22:34:50</wp:comment_date>
    <wp:comment_date_gmt>2013-09-16 22:34:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think C++ Builder has a better chance of survival than Delphi because Pascal is Delphi's heritage. I don't know many programmers that use or have used Pascal. I do know a lot of programmers that use C++.

I think Borland may have had one chance at getting VCL/Delphi/C++ Builder to be the popular development IDE. Maybe they lost their chance when Anders left - I don't know.

One group of our products is developed in the Microsoft IDE because it is aimed at developer's. We want to make sure we are compatible with the biggest market (we have both a C/C++ and .NET product). Symantec's and Borland's C++ compilers had already lost to Microsoft when I started there in 1996. We've had a few requests (less than 5 that I know of) for compatibility with other compilers over the years, but that is it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1379370890</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1379370891.0156118869781494140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2193</wp:comment_id>
    <wp:comment_author><![CDATA[rylarson]]></wp:comment_author>
    <wp:comment_author_email>rylarson@cs.pdx.edu</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/rylarson</wp:comment_author_url>
    <wp:comment_author_IP>174.47.84.221</wp:comment_author_IP>
    <wp:comment_date>2013-09-25 19:03:00</wp:comment_date>
    <wp:comment_date_gmt>2013-09-25 19:03:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I dont see any advantages to C# over Java. It has many of the same limitations, but it isn't Portable (not really anyway). Why would anybody ever use C# over Java, all things being equal? I think that is the big reason it is dying.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380207271</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380135780.9453189373016357421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1512</wp:comment_id>
    <wp:comment_author><![CDATA[Daniel B]]></wp:comment_author>
    <wp:comment_author_email>danlbemail-nospam@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>216.57.67.120</wp:comment_author_IP>
    <wp:comment_date>2013-06-14 21:07:16</wp:comment_date>
    <wp:comment_date_gmt>2013-06-14 21:07:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Wow! Lots of opinions. It won't die unless Microsoft abandons it. I just hope they don't, I really like C# and the .NET framework. I wrote a C parser in C# and was amazed at how fast it was in spite of running on a virtual machine.
  -- my 2 cents]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1371303128</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1371244036.9804630279541015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2540</wp:comment_id>
    <wp:comment_author><![CDATA[Bill]]></wp:comment_author>
    <wp:comment_author_email>billm@eggcentric.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>71.40.180.174</wp:comment_author_IP>
    <wp:comment_date>2013-12-02 18:33:07</wp:comment_date>
    <wp:comment_date_gmt>2013-12-02 18:33:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thats the present, not necessarily the future.  The future is increasing levels of abstraction, doing more with less.  If you can predict the future technology, then it should be the present technology.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2452</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1386009187</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1386009188.021481990814208984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>17358996999</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1386009188</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Multithreading rendering in a game engine with C#–Double buffer implementation</title>
  <link>http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/</link>
  <pubDate>Fri, 24 May 2013 16:23:56 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1077</guid>
  <description/>
  <content:encoded><![CDATA[<p>A game running at 60FPS needs to render every 16 milliseconds, meaning that all the logic for collision detection, animation, obstacle avoidance, physics, etc. must happen in that very short time. You also need to prepare for rendering and then send the instructions to the GPU. Multithreading seems like a most reasonable option if you have more than one core available (and who doesn’t these days). </p>  <p>One of the ways to do multithreading rendering in games is using a double buffer. At a high level the concept is simple: given two threads update and render, use one to fill a buffer with commands that have enough info to render(we’ll call them <strong>RenderCommands</strong>), once completed switch buffers while the other thread renders the RenderCommands in the original buffer.&#160; </p>  <p>&#160;</p>  <p><a href="http://altdevblogaday.com/wp-content/uploads/2011/07/04.png" target="_blank"><img style="margin:0 0 0 5px;" src="http://altdevblogaday.com/wp-content/uploads/2011/07/04.png" width="512" height="33" /></a></p>  <p><font size="1">Graph and possibly a better explanation of double buffer from <a title="http://bit.ly/110JuB3" href="http://bit.ly/110JuB3">http://bit.ly/110JuB3</a></font></p>  <p>You might be wondering what is a render command, well it’s the smallest amount of information we need to send to the GPU so that it can render what we want it to render. A Render command for a cube only engine (ie our engine can only draw cubes) can be as simple as:</p>  <div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:3b05a989-82e0-4571-978c-5f4373731241" class="wlWriterEditableSmartContent" style="float:none;margin:0;display:inline;padding:0;"><pre style="white-space:normal;">
[sourcecode language="csharp" padlinenumbers="true" light="false" htmlscript="true" firstline="1"]
public class RenderCommand
{
	public float Radius { get; set; }
	public Color Color { get; set; }
	public Matrix World { get; set; }
}
[/sourcecode]
</pre>
</div>

<p>There are many ways to implement this double buffer technique. The implementation we are going to see in this example is based on Quake 3 source code using modern C# to implement it. Questions, comments and optimizations welcome :D. By the way, a really in-depth review of the code is available <a href="http://fabiensanglard.net/quake3/index.php" target="_blank">here</a>.</p>

<h3>The idea</h3>

<p><em>The update thread is the red one and the render thread is the blue one.</em></p>

<p><a href="http://roundcrisis.files.wordpress.com/2013/05/image.png"><img title="image" style="background-image:none;padding-top:0;padding-left:0;margin:0 0 0 5px;display:inline;padding-right:0;border-width:0;" border="0" alt="image" src="http://roundcrisis.files.wordpress.com/2013/05/image_thumb.png" width="280" height="117" /></a></p>

<p>The diagram above describes the flow of the update thread(red) and rendering thread(blue), the hatched squares represent blocking. </p>

<p>At the initial stage, the render thread will be waiting for the render commands to become available, it will be signalled from the update thread. Once that happens, the render thread will swap the buffers, signal to the update thread that the commands have swapped and that the render thread is ready to start drawing and start drawing.</p>

<p>This signalling process works well also for the situation when the update frame takes longer to update and the render thread needs to wait for the render commands to become available.</p>

<p><a href="http://roundcrisis.files.wordpress.com/2013/05/image1.png"><img title="image" style="background-image:none;padding-top:0;padding-left:0;margin:0 0 0 5px;display:inline;padding-right:0;border-width:0;" border="0" alt="image" src="http://roundcrisis.files.wordpress.com/2013/05/image_thumb1.png" width="313" height="157" /></a></p>

<p>Finally the situation where rendering takes longer is also covered, as we see in the the update thread is waiting until rendering is finished</p>

<p><a href="http://roundcrisis.files.wordpress.com/2013/05/image3.png"><img title="image" style="background-image:none;padding-top:0;padding-left:0;margin:0 0 0 5px;display:inline;padding-right:0;border-width:0;" border="0" alt="image" src="http://roundcrisis.files.wordpress.com/2013/05/image_thumb3.png" width="288" height="114" /></a></p>

<h3>The implementation</h3>

<p>For the purposes of this example we will be using XNA. To have something to show and compare against, I’m starting off with the&#160; <a href="http://xbox.create.msdn.com/en-US/education/catalog/sample/primitives_3d" target="_blank">3d primitives sample</a> from XNA Creators code club. </p>

<p>I am going to skip the details about how to draw vertices, there are many other blog posts that cover that and focus on the threading and concurrency issues.</p>

<p>So, for a start we need to create the update thread. To that effect we will instantiate a class called UpdateLoop in a Task that will simply loop on executing Update as follows. </p>

<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:ed4766f6-e599-4c5b-b57b-b409c7db4a0b" class="wlWriterEditableSmartContent" style="float:none;margin:0;display:inline;padding:0;"><pre style="white-space:normal;">
[sourcecode language="csharp"]
Task.Factory.StartNew(() =&amp;gt;
{
		var gl = new UpdateLoop(_renderer);
		gl.Loop();
});
[/sourcecode]
</pre>
</div>

<p>The loop in UpdateLoop: (Note: the loop is not time stepped, ie you should not use a while(true) like this in production).</p>

<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:933e8781-e15e-40c7-8891-ddcbb2585766" class="wlWriterEditableSmartContent" style="float:none;margin:0;display:inline;padding:0;"><pre style="white-space:normal;">
[sourcecode language="csharp"]
public void Loop()
{
	_stopwatch.Start();
	while (true)
	{
		Update();
	}
}
[/sourcecode]
</pre>
</div>

<p>The code for the loop is (i think) pretty self explanatory, when calling Update in line 5 it will follow the sequence as described in diagram below. </p>

<p><a href="http://roundcrisis.files.wordpress.com/2013/05/capture12.png"><img title="Update loop sequence diagram" style="background-image:none;padding-top:0;padding-left:0;margin:0 0 0 5px;display:inline;padding-right:0;border-width:0;" border="0" alt="Update loop sequence diagram" src="http://roundcrisis.files.wordpress.com/2013/05/capture1_thumb2.png" width="283" height="262" /></a></p>

<p>It is probably interesting to see what <em>AddCube</em>() looks like :</p>

<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:5dd507bd-b9e8-4401-8100-ab65f090961a" class="wlWriterEditableSmartContent" style="float:none;margin:0;display:inline;padding:0;"><pre style="white-space:normal;">
[sourcecode language="csharp"]
public void AddCube(Cube primitive)
{
	var translation = Matrix.CreateFromYawPitchRoll(
							primitive.Rotation.X, 
							primitive.Rotation.Y, 
							primitive.Rotation.Z) *
			Matrix.CreateTranslation(primitive.Position);

	_updatingRenderCommands.Add(
		new RenderCommand
                {
                    Color = primitive.Color, 
					Radius = primitive.Radius, 
					World = translation
                });
}
[/sourcecode]
</pre>
</div>

<p>As you can see from the sequence diagram, after looping on <em>renderer.AddCube()</em> there is a call to <em>renderer.EndFrame()</em>, here is where we need to signal that the render commands are ready and the update thread will be now waiting for the render buffers to be swapped. </p>

<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:8c62684e-0bb9-4270-99dc-6753b14def6c" class="wlWriterEditableSmartContent" style="float:none;margin:0;display:inline;padding:0;"><pre style="white-space:normal;">
[sourcecode language="csharp"]
public void EndFrame()
{
	_renderCompleted.WaitOne();
	_renderComandsReady.Set();
	_renderActive.WaitOne();
}
[/sourcecode]
</pre>
</div>

<p>From the render thread point of view, this is what the sequence diagram looks like: </p>

<p><a href="http://roundcrisis.files.wordpress.com/2013/05/capture3.png"><img title="Draw call sequence diagram" style="background-image:none;padding-top:0;padding-left:0;margin:0 0 0 5px;display:inline;padding-right:0;border-width:0;" border="0" alt="Draw call sequence diagram" src="http://roundcrisis.files.wordpress.com/2013/05/capture_thumb2.png" width="283" height="250" /></a></p>

<p>In my game class (the main class that inherits from XNA’s game class) , in Draw(), we call _renderer.Draw():</p>

<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:d4a7b00e-46a5-4acd-9bda-fc9cc429443e" class="wlWriterEditableSmartContent" style="float:none;margin:0;display:inline;padding:0;"><pre style="white-space:normal;">
[sourcecode language="csharp"]
public void Draw(GraphicsDevice device, Matrix view, Matrix projection)
{
	_renderActive.Reset();
	_renderCompleted.Set();
	_renderComandsReady.WaitOne();

	_renderCompleted.Reset();
	_renderComandsReady.Reset();
	SwapBuffers();
	_renderActive.Set();

	_cubePrimitive = _cubePrimitive ?? new CubePrimitive(device);
	foreach (var renderingRenderCommand in _renderingRenderCommands)
	{
		_cubePrimitive.Draw(renderingRenderCommand.World, 
                                    view, 
                                    projection, 
                                    renderingRenderCommand.Color
                                    );
	}
}
[/sourcecode]
</pre>
</div>

<p>This is probably the most complex method in the whole example. The _renderActive is reset because at this point we want the update thread to block when on wait, this was set to wait from <em>_renderer.EndFrame().</em> We set _renderCompleted&#160; here to unblock the update thread and then we wait for _renderCommandsReady to be signalled, effectively putting the renderer to sleep until there are more commands to render.</p>

<p>Before calling SwapBuffers() _renderCompleted is reset so that if the update thread reaches the end of a frame, it will sleep until the render thread has finished swapping the buffers. </p>

<p>Immediately after, a call to reset _renderCommandsReady ensures that the render thread will go to sleep on the next Draw call until there are some commands to render.</p>

<p>I am not terribly sure the explanation above is clearer than the actual code to be honest, but after <strike>4</strike> 6 attempts I’m giving up.</p>

<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:b18d9196-385e-4746-8b7d-338861d2bc9a" class="wlWriterEditableSmartContent" style="float:none;margin:0;display:inline;padding:0;"><pre style="white-space:normal;">
[sourcecode language="csharp"]
private void SwapBuffers()
{
	
	if (_updatingRenderCommands == _bufferedRenderCommandsA)
	{
		_updatingRenderCommands = _bufferedRenderCommandsB;
		_renderingRenderCommands = _bufferedRenderCommandsA;

	}
	else if (_updatingRenderCommands == _bufferedRenderCommandsB)
	{
		_updatingRenderCommands = _bufferedRenderCommandsA;
		_renderingRenderCommands = _bufferedRenderCommandsB;
	}
	_updatingRenderCommands.Clear();
}
[/sourcecode]
</pre>
</div>

<p>Finally SwapBuffers(). There’s no synchronization happening here so, we are just switching buffers. Before calling this method the _renderComandsReady was blocked</p>

<p>And that is pretty much all, the complete sample is available from <a href="https://github.com/Andrea/c4g/tree/master/MutithreadingWithDoubleBufferLockFree" target="_blank">github</a> .</p>

<p>&#160;</p>

<h4><strong>References and interesting related articles</strong></h4>

<p>Most excellent Quake 3 code review <a href="http://fabiensanglard.net/quake3/index.php">http://fabiensanglard.net/quake3/index.php</a></p>

<p>Threading your game loop <a href="http://www.altdevblogaday.com/2011/07/03/threading-and-your-game-loop/">http://www.altdevblogaday.com/2011/07/03/threading-and-your-game-loop/</a></p>

<p>For the craic <a href="http://en.wikipedia.org/wiki/Multiple_buffering">http://en.wikipedia.org/wiki/Multiple_buffering</a></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1077</wp:post_id>
  <wp:post_date>2013-05-24 16:23:56</wp:post_date>
  <wp:post_date_gmt>2013-05-24 16:23:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="game-engines"><![CDATA[game engines]]></category>
  <category domain="category" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="category" nicename="mono"><![CDATA[mono]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_09b2913fa5a98d497e5303444d0db4e4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_dc35a32c6e91c13e41d54c216f85bb33</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_45879f196617578d1f3dce15338d046b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f4b2ca0a29ebfb3487c929bd3514bd6d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f918ecb9080c19126a1d47dfb8417f41</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0addc78f2f1040befe80395acfecd09a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b97b124ef69059b17488c4154c8ee8f3</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e3903c66e1f0e2f1dd6a44b389bc72ae</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2013-05-24 16:23:56]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>twitter_cards_summary_img_size</wp:meta_key>
    <wp:meta_value><![CDATA[a:6:{i:0;i:1210;i:1;i:61;i:2;i:3;i:3;s:24:"width="1210" height="61"";s:4:"bits";i:8;s:4:"mime";s:9:"image/png";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1716</wp:comment_id>
    <wp:comment_author><![CDATA[Multithreaded game engine&ndash;Using Concurrent collections instead | roundcrisis.Find&lt;Solution&gt;()]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://roundcrisis.com/2013/06/22/multithreaded-game-engineusing-concurrent-collections-instead/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.9.148</wp:comment_author_IP>
    <wp:comment_date>2013-06-22 16:40:47</wp:comment_date>
    <wp:comment_date_gmt>2013-06-22 16:40:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] &laquo; Multithreading rendering in a game engine with C#&ndash;Double buffer&nbsp;implementation [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1371919248.917107105255126953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1371919557</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1371919557.993092060089111328125;s:7:"message";s:50:"roundcrisis changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1080</wp:comment_id>
    <wp:comment_author><![CDATA[Romoku]]></wp:comment_author>
    <wp:comment_author_email>team.romoku@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>98.250.223.13</wp:comment_author_IP>
    <wp:comment_date>2013-05-28 01:49:23</wp:comment_date>
    <wp:comment_date_gmt>2013-05-28 01:49:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Moved the project to MonoGame since XNA doesn't work on Windows 8. I also tried out a custom data structure instead of all the ManualResetEvents. It uses a SemaphoreSlim and an AutoResetEvent now. Check Renderer/Implementation/BufferedRenderer.cs.

https://github.com/Romoku/Primitives3D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369705764.670278072357177734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"romokurhelix";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369722583</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1097</wp:comment_id>
    <wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
    <wp:comment_author_email>bravesirandrew@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>109.255.230.250</wp:comment_author_IP>
    <wp:comment_date>2013-05-28 20:48:41</wp:comment_date>
    <wp:comment_date_gmt>2013-05-28 20:48:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Romoku

I think there might be a bug in your implementation. In BufferedRenderer.EndFrame, the _render event is set, releasing the render thread which starts rendering from _buffer before the swap has occurred. So the renderer could begin its frame rendering from one buffer, but end rendering from the other.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369774121.2351229190826416015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"bravesirandrew";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369777697</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2513</wp:comment_id>
    <wp:comment_author><![CDATA[財布 ラウンドファスナー]]></wp:comment_author>
    <wp:comment_author_email>rwvhubzsvy@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://chaobianc.gagajpdonindividual.org/</wp:comment_author_url>
    <wp:comment_author_IP>111.181.216.250</wp:comment_author_IP>
    <wp:comment_date>2013-11-29 09:31:03</wp:comment_date>
    <wp:comment_date_gmt>2013-11-29 09:31:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[結婚指輪 カルティエ 財布 ラウンドファスナー http://chaobianc.gagajpdonindividual.org/]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>17204355197</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1385717464</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1385717464.179377079010009765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Multithreaded game engine–Using Concurrent collections instead</title>
  <link>http://roundcrisis.com/2013/06/22/multithreaded-game-engineusing-concurrent-collections-instead/</link>
  <pubDate>Sat, 22 Jun 2013 16:09:11 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">https://roundcrisis.wordpress.com/?p=1127</guid>
  <description/>
  <content:encoded><![CDATA[<p>So this seems to be turning into a series of some sort…</p>  <p>What happens if instead of using synchronization with reset events, we use one of the new concurrent collections? Lets find out.</p>  <h3>Implementation with Concurrent Queue</h3>  <p>So, while I was trying to implement the double buffer (previous post available <a href="http://roundcrisis.com/2013/05/24/multithreading-rendering-in-a-game-engine-with-cdouble-buffer-implementation/" target="_blank">here</a>) I started thinking about perhaps a simpler implementation with one of the concurrent collections, so I tried with a <a href="http://msdn.microsoft.com/en-us/library/dd267265.aspx" target="_blank">ConcurrentQueue&lt;T&gt;</a>. </p>  <p>The idea behind it is pretty simple. Instead of having the two collections of RenderCommand we have a ConcurrentQueue&lt;RenderCommand[]&gt; so we think of each of the elements of the queue as a frame, ready to be rendered.</p>  <p>As before, we are starting off with the primitives3DWindows sample. A bit obvious, but, we’ll need to initialize the queue on the constructor of the Renderer class(I just thought I’d mention that). </p>  <p>From the world We’ll add all necessary cubes to a renderCommand, using the AddCube() method. At the end, we’ll need to add that collection to the queue by calling EndFrame(). Like this</p>  <div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:3a7914eb-9da1-4ca9-9efd-cfdad98255a1" class="wlWriterEditableSmartContent" style="float:none;margin:0;display:inline;padding:0;"><pre style="white-space:normal;">
[sourcecode language="csharp" padlinenumbers="true"]
public void AddCube(Cube primitive)
{
	var translation = Matrix.CreateFromYawPitchRoll(
		primitive.Rotation.X, primitive.Rotation.Y, primitive.Rotation.Z) * 
		Matrix.CreateTranslation(primitive.Position);
	_updatingRenderCommands.Add(new RenderCommand
	                                {
	                                    Color = primitive.Color, 
                                        Radius = primitive.Radius, 
                                        World = translation
	                                });
}

public void EndFrame()
{
	var renderCommands = new RenderCommand[_updatingRenderCommands.Count];
	_updatingRenderCommands.CopyTo(renderCommands, 0);
	_concurrentRenderCommandsThatRepresentAFrame.Enqueue(renderCommands);
	_updatingRenderCommands.Clear();
}
[/sourcecode]
</pre>
</div>

<p>These methods are public because they are called from World, however, as you can see from the sequence diagram below we check if the renderer CanAcceptCommands(), the reason for this is that we don’t regulate how often we run world.Update() and in reality we only want to have one frame (or RenderCommand collection ready to render) when we call Draw so that there is no latency.</p>

<p><a href="http://roundcrisis.files.wordpress.com/2013/06/capture.png"><img title="Capture" style="border-top:0;border-right:0;background-image:none;border-bottom:0;padding-top:0;padding-left:0;margin:0 0 0 5px;border-left:0;display:inline;padding-right:0;" border="0" alt="Capture" src="http://roundcrisis.files.wordpress.com/2013/06/capture_thumb.png" width="201" height="244" /></a></p>

<p>With the update done, we now need to render. At this point this is pretty trivial. Code below</p>

<div id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:3d343d07-74af-441a-8230-42164e9347c7" class="wlWriterEditableSmartContent" style="float:none;margin:0;display:inline;padding:0;"><pre style="white-space:normal;">
[sourcecode language="csharp" firstline="1" light="false"]
public void Draw(Matrix view, Matrix projection)
{
	RenderCommand[] renderCommands;
    if (!_concurrentRenderCommandsThatRepresentAFrame.TryDequeue(out renderCommands))
        return;

    foreach (var renderingRenderCommand in renderCommands)
	{
		_cubePrimitive.Draw(
                              renderingRenderCommand.World, 
                              view, 
                              projection, 
                              renderingRenderCommand.Color);
	}
}

[/sourcecode]
</pre>
</div>

<p>I think what is happening here is pretty self explanatory, but I will do it anyway.&#160; If we call Draw() and we TryDequeue and we can’t we call return, there is no point in trying to Draw and empty array of RenderCommands (I believe that would be the result). Alternatively if we successfully dequeue, we will let the CubePrimitive draw each of the commands.</p>

<h3>Analysis</h3>

<p>It seems to me that this implementation is easier to follow and implement that the previous one, however I took some performance data and this is the result:</p>

<p>Double buffer:</p>

<p><a href="http://roundcrisis.files.wordpress.com/2013/06/image.png"><img title="image" style="border-top:0;border-right:0;background-image:none;border-bottom:0;padding-top:0;padding-left:0;border-left:0;display:inline;padding-right:0;" border="0" alt="image" src="http://roundcrisis.files.wordpress.com/2013/06/image_thumb.png" width="434" height="45" /></a></p>









<p>ConcurrentQueue:</p>

<p><a href="http://roundcrisis.files.wordpress.com/2013/06/image1.png"><img title="image" style="border-top:0;border-right:0;background-image:none;border-bottom:0;padding-top:0;padding-left:0;margin:0 0 0 5px;border-left:0;display:inline;padding-right:0;" border="0" alt="image" src="http://roundcrisis.files.wordpress.com/2013/06/image_thumb1.png" width="441" height="35" /></a></p>



<p>Green means execution time, and red means synchronization time.</p>

<p>I think what these graphs tell is that double buffer is more efficient because concurrentqueue uses spin waits to synchronize, so it shows up in the thread analysis as execution time, where the previous double buffer implementation shows up as synchronization time, meaning the threads are just asleep.</p>

<p>Next I’m going to try with a concurrent collection that doesn’t use spin wait: <a href="http://msdn.microsoft.com/en-us/library/dd267312.aspx" target="_blank">BlockingCollection&lt;T&gt;</a>.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1127</wp:post_id>
  <wp:post_date>2013-06-22 16:09:11</wp:post_date>
  <wp:post_date_gmt>2013-06-22 16:09:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>multithreaded-game-engineusing-concurrent-collections-instead</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="net"><![CDATA[.net]]></category>
  <category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
  <category domain="category" nicename="c"><![CDATA[c#]]></category>
  <category domain="category" nicename="concurrency"><![CDATA[concurrency]]></category>
  <category domain="post_tag" nicename="concurrentqueue"><![CDATA[concurrentqueue]]></category>
  <category domain="post_tag" nicename="game-engines"><![CDATA[game engines]]></category>
  <category domain="category" nicename="gamedev"><![CDATA[gamedev]]></category>
  <category domain="post_tag" nicename="gamedev"><![CDATA[gamedev]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:58:"http://roundcrisis.files.wordpress.com/2013/06/capture.png";s:6:"images";a:6:{s:58:"http://roundcrisis.files.wordpress.com/2013/06/capture.png";a:6:{s:8:"file_url";s:58:"http://roundcrisis.files.wordpress.com/2013/06/capture.png";s:5:"width";i:631;s:6:"height";i:768;s:4:"type";s:5:"image";s:4:"area";i:484608;s:9:"file_path";b:0;}s:64:"http://roundcrisis.files.wordpress.com/2013/06/capture_thumb.png";a:6:{s:8:"file_url";s:64:"http://roundcrisis.files.wordpress.com/2013/06/capture_thumb.png";s:5:"width";i:201;s:6:"height";i:244;s:4:"type";s:5:"image";s:4:"area";i:49044;s:9:"file_path";b:0;}s:56:"http://roundcrisis.files.wordpress.com/2013/06/image.png";a:6:{s:8:"file_url";s:56:"http://roundcrisis.files.wordpress.com/2013/06/image.png";s:5:"width";i:1024;s:6:"height";i:81;s:4:"type";s:5:"image";s:4:"area";i:82944;s:9:"file_path";b:0;}s:62:"http://roundcrisis.files.wordpress.com/2013/06/image_thumb.png";a:6:{s:8:"file_url";s:62:"http://roundcrisis.files.wordpress.com/2013/06/image_thumb.png";s:5:"width";i:434;s:6:"height";i:45;s:4:"type";s:5:"image";s:4:"area";i:19530;s:9:"file_path";b:0;}s:57:"http://roundcrisis.files.wordpress.com/2013/06/image1.png";a:6:{s:8:"file_url";s:57:"http://roundcrisis.files.wordpress.com/2013/06/image1.png";s:5:"width";i:1024;s:6:"height";i:56;s:4:"type";s:5:"image";s:4:"area";i:57344;s:9:"file_path";b:0;}s:63:"http://roundcrisis.files.wordpress.com/2013/06/image_thumb1.png";a:6:{s:8:"file_url";s:63:"http://roundcrisis.files.wordpress.com/2013/06/image_thumb1.png";s:5:"width";i:441;s:6:"height";i:35;s:4:"type";s:5:"image";s:4:"area";i:15435;s:9:"file_path";b:0;}}s:6:"videos";a:0:{}s:11:"image_count";i:6;s:6:"author";s:7:"5507891";s:7:"blog_id";s:7:"5261556";s:9:"mod_stamp";s:19:"2013-06-22 16:40:39";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2013-06-22 16:09:11]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2199</wp:comment_id>
    <wp:comment_author><![CDATA[Konaju Games (@KonajuGames)]]></wp:comment_author>
    <wp:comment_author_email>KonajuGames@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/KonajuGames</wp:comment_author_url>
    <wp:comment_author_IP>60.241.209.201</wp:comment_author_IP>
    <wp:comment_date>2013-09-27 01:26:26</wp:comment_date>
    <wp:comment_date_gmt>2013-09-27 01:26:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi.  Did you do the test with BlockingCollection?  I'm finding this series about multithreaded rendering very interesting as I am looking to do a similar thing in my projects moving forward.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380390811</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1605926810/cropped-logo-256_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>32360300</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380245186.5603110790252685546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2200</wp:comment_id>
    <wp:comment_author><![CDATA[Konaju Games (@KonajuGames)]]></wp:comment_author>
    <wp:comment_author_email>KonajuGames@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/KonajuGames</wp:comment_author_url>
    <wp:comment_author_IP>60.241.209.201</wp:comment_author_IP>
    <wp:comment_date>2013-09-27 01:29:27</wp:comment_date>
    <wp:comment_date_gmt>2013-09-27 01:29:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Have you measured the garbage generated by these approaches?  Garbage collection can have a measurable effect on performance, so keeping allocations to a minimum (ideally to zero) is a target I aim for.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380245367.2825291156768798828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380390814</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1605926810/cropped-logo-256_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>32360300</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2430</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>178.250.118.134</wp:comment_author_IP>
    <wp:comment_date>2013-11-13 17:25:40</wp:comment_date>
    <wp:comment_date_gmt>2013-11-13 17:25:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi there. I just implemented this with BlockingCollection it was relatively simple tho it didn't get the results I thought I might ... http://i.imgur.com/yNQDpQ4.png didn't check the garbage yet... will post up soon enough. Promise :D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1384363541</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1384363541.597052097320556640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2247</wp:comment_id>
    <wp:comment_author><![CDATA[roundcrisis]]></wp:comment_author>
    <wp:comment_author_email>roundcrisis@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>178.250.118.134</wp:comment_author_IP>
    <wp:comment_date>2013-10-07 09:55:32</wp:comment_date>
    <wp:comment_date_gmt>2013-10-07 09:55:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi there, 
Thanks for the comments :D. This might be the kick in the arse I needed to go and do it.I ll do some measuring when I work on it this weekend. 

Cheers]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5507891</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1381139732</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1381139733.0220301151275634765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"roundcrisis";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>2013 in review and moving on</title>
  <link>http://roundcrisis.com/2013/12/31/2013-in-review-and-moving-on/</link>
  <pubDate>Tue, 31 Dec 2013 14:37:32 +0000</pubDate>
  <dc:creator>roundcrisis</dc:creator>
  <guid isPermaLink="false">http://roundcrisis.com/?p=1142</guid>
  <description/>
  <content:encoded><![CDATA[The WordPress.com stats helper monkeys prepared a 2013 annual report for this blog.

<a href="http://roundcrisis.com/2013/annual-report/"><img alt="" src="http://www.wordpress.com/wp-content/mu-plugins/annual-reports/img/2012-emailteaser.png" width="100%" /></a>

Here's an excerpt:
<blockquote>The concert hall at the Sydney Opera House holds 2,700 people. This blog was viewed about <strong>31,000</strong> times in 2013. If it were a concert at Sydney Opera House, it would take about 11 sold-out performances for that many people to see it.</blockquote>
<a href="http://roundcrisis.com/2013/annual-report/">Click here to see the complete report.</a>

I m moving the blog over to github, the transition involves more steps than I would like, but still I think it will be worth it. If you want to see how it's going check <a href="http://andrea.github.io/">here, </a>this blog at roundcrisis.wordpress.com will stay live until the transition is complete.
<h2>Happy new year!!</h2>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1142</wp:post_id>
  <wp:post_date>2013-12-31 14:37:32</wp:post_date>
  <wp:post_date_gmt>2013-12-31 14:37:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2013-in-review-and-moving-on</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="annual-report"><![CDATA[annual report]]></category>
  <category domain="category" nicename="blogging"><![CDATA[blogging]]></category>
  <category domain="post_tag" nicename="jekyll"><![CDATA[jekyll]]></category>
  <wp:postmeta>
    <wp:meta_key>wpcom_recap</wp:meta_key>
    <wp:meta_value><![CDATA[2013]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
    <wp:meta_value><![CDATA[2013-12-31 14:37:53]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
